/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040300
#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#define SWIG_name    "_strongmotion"
/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if defined(__cplusplus) && __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 

/* -----------------------------------------------------------------------------
 * swigcompat.swg
 *
 * Macros to provide support compatibility with older C and C++ standards.
 *
 * Note that SWIG expects __cplusplus to be defined to the appropriate C++ standard.
 * MSVC users are urged to check and examine the /Zc:__cplusplus compiler option.
 * See https://learn.microsoft.com/en-us/cpp/build/reference/zc-cplusplus.
 * ----------------------------------------------------------------------------- */

/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if !defined(PY_SSIZE_T_CLEAN) && !defined(SWIG_NO_PY_SSIZE_T_CLEAN)
#define PY_SSIZE_T_CLEAN
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic push
#if defined(__cplusplus) && __cplusplus >=201703L
#pragma GCC diagnostic ignored "-Wregister" /* For python-2.7 headers that use register */
#endif
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */

#if defined(_MSC_VER) && _MSC_VER >= 1929
/* Workaround compilation errors when redefining _DEBUG in MSVC 2019 version 16.10 and later
 * See https://github.com/swig/swig/issues/2090 */
# include <corecrt.h>
#endif

# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

#if !defined(SWIGPYTHON_BUILTIN) && PY_VERSION_HEX >= 0x03030000
# define SWIG_HEAPTYPES

/* Note: Currently this won't activate - it is in place ready for when the
 * SWIGPYTHON_BUILTIN condition above gets removed. */
# if PY_VERSION_HEX < 0x030c0000 && defined(SWIGPYTHON_BUILTIN)
#  include <structmember.h>
#  define Py_READONLY READONLY
#  define Py_T_PYSSIZET T_PYSSIZET
# endif
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic pop
#endif

#include <stdio.h>
#include <stdlib.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4
#define SWIG_POINTER_CLEAR         0x8
#define SWIG_POINTER_RELEASE       (SWIG_POINTER_CLEAR | SWIG_POINTER_DISOWN)

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
/* Runtime errors are < 0 */
#define SWIG_ERROR                 (-1)
/* Errors in range -1 to -99 are in swigerrors.swg (errors for all languages including those not using the runtime) */
/* Errors in range -100 to -199 are language specific errors defined in *errors.swg */
/* Errors < -200 are generic runtime specific errors */
#define SWIG_ERROR_RELEASE_NOT_OWNED (-200)

#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporary objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del object mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  Choose the last
     name. It should be the most specific; a fully resolved name
     but not necessarily with default template parameters expanded. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13


/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Wrapper around PyUnicode_AsUTF8AndSize - call Py_XDECREF on the returned pbytes when finished with the returned string */
SWIGINTERN const char *
SWIG_PyUnicode_AsUTF8AndSize(PyObject *str, Py_ssize_t *psize, PyObject **pbytes)
{
#if PY_VERSION_HEX >= 0x03030000
# if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030A0000
  *pbytes = NULL;
  return PyUnicode_AsUTF8AndSize(str, psize);
# else
  const char *chars;
  *pbytes = PyUnicode_AsUTF8String(str);
  chars = *pbytes ? PyBytes_AsString(*pbytes) : NULL;
  if (chars && psize)
    *psize = PyBytes_Size(*pbytes);
  return chars;
# endif
#else
  char *chars = NULL;
  *pbytes = NULL;
  PyString_AsStringAndSize(str, &chars, psize);
  return chars;
#endif
}

SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user interface files check for it. */
# define SWIGPY_USE_CAPSULE
#ifdef SWIGPYTHON_BUILTIN
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule_builtin" SWIG_TYPE_TABLE_NAME
#else
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule" SWIG_TYPE_TABLE_NAME
#endif
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION "." SWIGPY_CAPSULE_ATTR_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

#ifdef Py_LIMITED_API
# define PyTuple_GET_ITEM PyTuple_GetItem
/* Note that PyTuple_SetItem() has different semantics from PyTuple_SET_ITEM as it decref's the original tuple item, so in general they cannot be used
  interchangeably. However in SWIG-generated code PyTuple_SET_ITEM is only used with newly initialized tuples without any items and for them this does work. */
# define PyTuple_SET_ITEM PyTuple_SetItem
# define PyTuple_GET_SIZE PyTuple_Size
# define PyCFunction_GET_FLAGS PyCFunction_GetFlags
# define PyCFunction_GET_FUNCTION PyCFunction_GetFunction
# define PyCFunction_GET_SELF PyCFunction_GetSelf
# define PyList_GET_ITEM PyList_GetItem
# define PyList_SET_ITEM PyList_SetItem
# define PySliceObject PyObject
#endif

/* Increment and Decrement wrappers - for portability when using the stable abi and for performance otherwise */
#ifdef Py_LIMITED_API
# define SWIG_Py_INCREF Py_IncRef
# define SWIG_Py_XINCREF Py_IncRef
# define SWIG_Py_DECREF Py_DecRef
# define SWIG_Py_XDECREF Py_DecRef
#else
# define SWIG_Py_INCREF Py_INCREF
# define SWIG_Py_XINCREF Py_XINCREF
# define SWIG_Py_DECREF Py_DECREF
# define SWIG_Py_XDECREF Py_XDECREF
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  case SWIG_NullReferenceError:
    type = PyExc_TypeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyObject *bytes = NULL;
    const char *tmp = SWIG_PyUnicode_AsUTF8AndSize(old_str, NULL, &bytes);
    PyErr_Clear();
    SWIG_Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Py_XDECREF(bytes);
    SWIG_Py_DECREF(old_str);
    SWIG_Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    if (newvalue) {
      SWIG_Py_XDECREF(value);
      PyErr_Restore(type, newvalue, traceback);
    } else {
      PyErr_Restore(type, value, traceback);
    }
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      if PY_VERSION_HEX < 0x03070000
#        define SWIG_PYTHON_INITIALIZE_THREADS PyEval_InitThreads()
#      else
#        define SWIG_PYTHON_INITIALIZE_THREADS
#      endif
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { status = false; PyEval_RestoreThread(save); }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03030000
# error "This version of SWIG only supports Python 3 >= 3.3"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  SWIG_Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  SWIG_Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  SWIG_Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  SWIG_Py_DECREF(obj);
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj, int is_void) {
  if (!result) {
    result = obj;
  } else if (result == Py_None && is_void) {
    SWIG_Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      if (result) {
        PyList_SET_ITEM(result, 0, o2);
      } else {
        SWIG_Py_DECREF(obj);
        return o2;
      }
    }
    PyList_Append(result,obj);
    SWIG_Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
 
/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */
 
typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

SWIGINTERN PyObject *
swig_varlink_repr(PyObject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_InternFromString("<Swig global variables>");
#else
  return PyString_FromString("<Swig global variables>");
#endif
}

SWIGINTERN PyObject *
swig_varlink_str(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
#if PY_VERSION_HEX >= 0x03000000
  PyObject *str = PyUnicode_InternFromString("(");
  PyObject *tail;
  PyObject *joined;
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    tail = PyUnicode_FromString(var->name);
    joined = PyUnicode_Concat(str, tail);
    SWIG_Py_DECREF(str);
    SWIG_Py_DECREF(tail);
    str = joined;
    if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        SWIG_Py_DECREF(str);
        SWIG_Py_DECREF(tail);
        str = joined;
    }
  }
  tail = PyUnicode_InternFromString(")");
  joined = PyUnicode_Concat(str, tail);
  SWIG_Py_DECREF(str);
  SWIG_Py_DECREF(tail);
  str = joined;
#else
  PyObject *str = PyString_FromString("(");
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    PyString_ConcatAndDel(&str,PyString_FromString(var->name));
    if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
  }
  PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
  return str;
}

SWIGINTERN void
swig_varlink_dealloc(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  swig_globalvar *var = v->vars;
  while (var) {
    swig_globalvar *n = var->next;
    free(var->name);
    free(var);
    var = n;
  }
}

SWIGINTERN PyObject *
swig_varlink_getattr(PyObject *o, char *n) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  PyObject *res = NULL;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->get_attr)();
      break;
    }
    var = var->next;
  }
  if (res == NULL && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN int
swig_varlink_setattr(PyObject *o, char *n, PyObject *p) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  int res = 1;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->set_attr)(p);
      break;
    }
    var = var->next;
  }
  if (res == 1 && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN PyTypeObject*
swig_varlink_type(void) {
  static char varlink__doc__[] = "Swig var link object";
#ifndef SWIG_HEAPTYPES
  static PyTypeObject varlink_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                  /* ob_size */
#endif
      "swigvarlink",                      /* tp_name */
      sizeof(swig_varlinkobject),         /* tp_basicsize */
      0,                                  /* tp_itemsize */
      (destructor) swig_varlink_dealloc,  /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                       /* tp_print */
#else
      (Py_ssize_t)0,                      /* tp_vectorcall_offset */
#endif
      (getattrfunc) swig_varlink_getattr, /* tp_getattr */
      (setattrfunc) swig_varlink_setattr, /* tp_setattr */
      0,                                  /* tp_compare */
      (reprfunc) swig_varlink_repr,       /* tp_repr */
      0,                                  /* tp_as_number */
      0,                                  /* tp_as_sequence */
      0,                                  /* tp_as_mapping */
      0,                                  /* tp_hash */
      0,                                  /* tp_call */
      (reprfunc) swig_varlink_str,        /* tp_str */
      0,                                  /* tp_getattro */
      0,                                  /* tp_setattro */
      0,                                  /* tp_as_buffer */
      0,                                  /* tp_flags */
      varlink__doc__,                     /* tp_doc */
      0,                                  /* tp_traverse */
      0,                                  /* tp_clear */
      0,                                  /* tp_richcompare */
      0,                                  /* tp_weaklistoffset */
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
      0,                                  /* tp_del */
      0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                  /* tp_print */
#endif
#if PY_VERSION_HEX >= 0x030c0000
      0,                                  /* tp_watched */
#endif
#if PY_VERSION_HEX >= 0x030d00a4
      0,                                  /* tp_versions_used */
#endif
#ifdef COUNT_ALLOCS
      0,                                  /* tp_allocs */
      0,                                  /* tp_frees */
      0,                                  /* tp_maxalloc */
      0,                                  /* tp_prev */
      0                                   /* tp_next */
#endif
    };
    varlink_type = tmp;
    type_init = 1;
    if (PyType_Ready(&varlink_type) < 0)
      return NULL;
  }
  return &varlink_type;
#else
  PyType_Slot slots[] = {
    { Py_tp_dealloc, (void *)swig_varlink_dealloc },
    { Py_tp_repr, (void *)swig_varlink_repr },
    { Py_tp_getattr, (void *)swig_varlink_getattr },
    { Py_tp_setattr, (void *)swig_varlink_setattr },
    { Py_tp_str, (void *)swig_varlink_str },
    { Py_tp_doc, (void *)varlink__doc__ },
    { 0, NULL }
  };
  PyType_Spec spec = {
    "swigvarlink",
    sizeof(swig_varlinkobject),
    0,
    Py_TPFLAGS_DEFAULT,
    slots
  };
  return (PyTypeObject *)PyType_FromSpec(&spec);
#endif
}

/* Create a variable linking object for use later */
SWIGINTERN PyObject *
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = PyObject_New(swig_varlinkobject, swig_varlink_type());
  if (result) {
    result->vars = 0;
  }
  return ((PyObject*) result);
}

SWIGINTERN void 
SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v = (swig_varlinkobject *) p;
  swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  if (gv) {
    size_t size = strlen(name)+1;
    gv->name = (char *)malloc(size);
    if (gv->name) {
      memcpy(gv->name, name, size);
      gv->get_attr = get_attr;
      gv->set_attr = set_attr;
      gv->next = v->vars;
    }
  }
  v->vars = gv;
}


static PyObject *Swig_Globals_global = NULL;
  
SWIGINTERN PyObject *
SWIG_globals(void) {
  if (Swig_Globals_global == NULL) {
    Swig_Globals_global = SWIG_newvarlink();
  }
  return Swig_Globals_global;
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  SWIG_Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    SWIG_Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      SWIG_Py_INCREF(obj);
      data->newargs = obj;
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
        data->newargs = PyTuple_New(1);
        if (data->newargs) {
          SWIG_Py_INCREF(obj);
          PyTuple_SET_ITEM(data->newargs, 0, obj);
        } else {
          SWIG_Py_DECREF(data->newraw);
          SWIG_Py_DECREF(data->klass);
          free(data);
          return 0;
        }
      } else {
        SWIG_Py_INCREF(obj);
        data->newargs = obj;
      }
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      data->delargs = !(PyCFunction_GET_FLAGS(data->destroy) & METH_O);
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data)
{
  SWIG_Py_XDECREF(data->klass);
  SWIG_Py_XDECREF(data->newraw);
  SWIG_Py_XDECREF(data->newargs);
  SWIG_Py_XDECREF(data->destroy);
  free(data);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  SWIG_Py_XINCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    PyObject *val = SwigPyObject_long(v);
    if (val) {
      PyObject *ofmt;
      PyTuple_SET_ITEM(args, 0, val);
      ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
        res = PyUnicode_Format(ofmt,args);
#else
        res = PyString_Format(ofmt,args);
#endif
        SWIG_Py_DECREF(ofmt);
      }
    }
    SWIG_Py_DECREF(args);
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (repr && v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
    if (nrep) {
# if PY_VERSION_HEX >= 0x03000000
      PyObject *joined = PyUnicode_Concat(repr, nrep);
      SWIG_Py_DECREF(repr);
      SWIG_Py_DECREF(nrep);
      repr = joined;
# else
      PyString_ConcatAndDel(&repr,nrep);
# endif
    } else {
      SWIG_Py_DECREF(repr);
      repr = NULL;
    }
  }
  return repr;
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res = NULL;
  if (!PyErr_Occurred()) {
    if (op != Py_EQ && op != Py_NE) {
      SWIG_Py_INCREF(Py_NotImplemented);
      return Py_NotImplemented;
    }
    res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  }
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
  PyTypeObject *target_tp = SwigPyObject_type();
  PyTypeObject *op_type = Py_TYPE(op);
#ifdef SWIGPYTHON_BUILTIN
  if (PyType_IsSubtype(op_type, target_tp))
    return 1;
  return (strcmp(op_type->tp_name, "SwigPyObject") == 0);
#else
# ifdef Py_LIMITED_API
  int cmp;
  PyObject *tp_name;
#endif
  if (op_type == target_tp)
    return 1;
# ifdef Py_LIMITED_API
  tp_name = PyObject_GetAttrString((PyObject *)op_type, "__name__");
  if (!tp_name)
    return 0;
  cmp = PyUnicode_CompareWithASCIIString(tp_name, "SwigPyObject");
  SWIG_Py_DECREF(tp_name);
  return cmp == 0;
# else
  return (strcmp(op_type->tp_name, "SwigPyObject") == 0);
# endif
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

static PyObject* Swig_Capsule_global = NULL;

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        if (tmp) {
          res = SWIG_Python_CallFunctor(destroy, tmp);
        } else {
          res = 0;
        }
        SWIG_Py_XDECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      SWIG_Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
    SWIG_Py_XDECREF(Swig_Capsule_global);
  }
  SWIG_Py_XDECREF(next);
#ifdef SWIGPYTHON_BUILTIN
  SWIG_Py_XDECREF(sobj->dict);
#endif
  PyObject_Free(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  ((SwigPyObject *)next)->next = sobj->next;
  sobj->next = next;
  SWIG_Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    SWIG_Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SWIG_Py_DECREF(SwigPyObject_acquire(v,args));
      } else {
        SWIG_Py_DECREF(SwigPyObject_disown(v,args));
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
#ifndef SWIG_HEAPTYPES
  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /* tp_print */
#else
      (Py_ssize_t)0,                        /* tp_vectorcall_offset */
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#if PY_VERSION_HEX >= 0x030c0000
      0,                                    /* tp_watched */
#endif
#if PY_VERSION_HEX >= 0x030d00a4
      0,                                    /* tp_versions_used */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) != 0)
      return NULL;
  }
  return &swigpyobject_type;
#else
  PyType_Slot slots[] = {
    { Py_tp_dealloc, (void *)SwigPyObject_dealloc },
    { Py_tp_repr, (void *)SwigPyObject_repr },
    { Py_tp_getattro, (void *)PyObject_GenericGetAttr },
    { Py_tp_doc, (void *)swigobject_doc },
    { Py_tp_richcompare, (void *)SwigPyObject_richcompare },
    { Py_tp_methods, (void *)swigobject_methods },
    { Py_nb_int, (void *)SwigPyObject_long },
    { 0, NULL }
  };
  PyType_Spec spec = {
    "SwigPyObject",
    sizeof(SwigPyObject),
    0,
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE,
    slots
  };
  return (PyTypeObject *)PyType_FromSpec(&spec);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_New(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
    sobj->dict = 0;
#endif
    if (own == SWIG_POINTER_OWN) {
      /* Obtain a reference to the Python capsule wrapping the module information, so that the
       * module information is correctly destroyed after all SWIG python objects have been freed
       * by the GC (and corresponding destructors invoked) */
      SWIG_Py_XINCREF(Swig_Capsule_global);
    }
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
#ifdef Py_LIMITED_API
  int cmp;
  PyObject *tp_name;
#endif
  PyTypeObject* op_type = Py_TYPE(op);
  if (op_type == SwigPyPacked_TypeOnce())
    return 1;
#ifdef Py_LIMITED_API
  tp_name = PyObject_GetAttrString((PyObject *)op_type, "__name__");
  if (!tp_name)
    return 0;
  cmp = PyUnicode_CompareWithASCIIString(tp_name, "SwigPyPacked");
  SWIG_Py_DECREF(tp_name);
  return cmp == 0;
#else
  return (strcmp(op_type->tp_name, "SwigPyPacked") == 0);
#endif
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_Free(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
#ifndef SWIG_HEAPTYPES
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /* tp_print */
#else
      (Py_ssize_t)0,                        /* tp_vectorcall_offset */
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#if PY_VERSION_HEX >= 0x030c0000
      0,                                    /* tp_watched */
#endif
#if PY_VERSION_HEX >= 0x030d00a4
      0,                                    /* tp_versions_used */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) != 0)
      return NULL;
  }
  return &swigpypacked_type;
#else
  PyType_Slot slots[] = {
    { Py_tp_dealloc, (void *)SwigPyPacked_dealloc },
    { Py_tp_repr, (void *)SwigPyPacked_repr },
    { Py_tp_str, (void *)SwigPyPacked_str },
    { Py_tp_getattro, (void *)PyObject_GenericGetAttr },
    { Py_tp_doc, (void *)swigpacked_doc },
    { 0, NULL }
  };
  PyType_Spec spec = {
    "SwigPyPacked",
    sizeof(SwigPyPacked),
    0,
    Py_TPFLAGS_DEFAULT,
    slots
  };
  return (PyTypeObject *)PyType_FromSpec(&spec);
#endif
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_New(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_Free((PyObject *)sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
#if PY_VERSION_HEX >= 0x030d0000
    PyWeakref_GetRef(pyobj, &pyobj);
    Py_DECREF(pyobj);
#else
    pyobj = PyWeakref_GET_OBJECT(pyobj);
#endif
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	SWIG_Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    SWIG_Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (((flags & SWIG_POINTER_RELEASE) == SWIG_POINTER_RELEASE) && !sobj->own) {
      res = SWIG_ERROR_RELEASE_NOT_OWNED;
    } else {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
        sobj->own = 0;
      }
      if (flags & SWIG_POINTER_CLEAR) {
        sobj->ptr = 0;
      }
      res = SWIG_OK;
    }
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            SWIG_Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
#ifndef Py_LIMITED_API
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
#else
    PyObject* pystr_doc = PyObject_GetAttrString(obj, "__doc__");
    PyObject *bytes = NULL;
    const char *doc = pystr_doc ? SWIG_PyUnicode_AsUTF8AndSize(pystr_doc, NULL, &bytes) : 0;
#endif
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
#ifdef Py_LIMITED_API
    SWIG_Py_XDECREF(bytes);
    SWIG_Py_XDECREF(pystr_doc);
#endif
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
        PyObject *dict = *dictptr;
        if (dict == NULL) {
          dict = PyDict_New();
          *dictptr = dict;
        }
        if (dict) {
          PyDict_SetItem(dict, SWIG_This(), swig_this);
        } else{
          SWIG_Py_DECREF(inst);
          inst = 0;
        }
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        SWIG_Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
#ifndef Py_LIMITED_API
        newfunc newfn = ((PyTypeObject *)data->newargs)->tp_new;
#else
        newfunc newfn = (newfunc)PyType_GetSlot((PyTypeObject *)data->newargs, Py_tp_new);
#endif
        inst = newfn((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        SWIG_Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            SWIG_Py_DECREF(inst);
            inst = 0;
          } else {
            PyType_Modified(Py_TYPE(inst));
          }
        }
      }
      SWIG_Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      SWIG_Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    if (dict) {
      return PyDict_SetItem(dict, SWIG_This(), swig_this);
    } else{
      return -1;
    }
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SWIG_Py_DECREF(SwigPyObject_append((PyObject*) sthis, obj[1]));
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
#ifndef Py_LIMITED_API
        allocfunc alloc = clientdata->pytype->tp_alloc;
#else
        allocfunc alloc = (allocfunc)PyType_GetSlot(clientdata->pytype, Py_tp_alloc);
#endif
        PyObject *next_self = alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      if (newobj) {
        newobj->dict = 0;
      }
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    SWIG_Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

static PyObject *Swig_TypeCache_global = NULL;

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  if (Swig_TypeCache_global == NULL) {
    Swig_TypeCache_global = PyDict_New();
  }
  return Swig_TypeCache_global;
}

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
#ifdef SWIG_LINK_RUNTIME
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
  }
#else
  void *type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
  if (PyErr_Occurred()) {
    PyErr_Clear();
    type_pointer = (void *)0;
  }
#endif
  return (swig_module_info *) type_pointer;
}


static int interpreter_counter = 0; /* how many (sub-)interpreters are using swig_module's types */

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  if (--interpreter_counter != 0) /* another sub-interpreter may still be using the swig_module's types */
    return;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      ty->clientdata = 0;
      if (data) SwigPyClientData_Del(data);
    }
  }
  SWIG_Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
  SWIG_Py_DECREF(SWIG_globals());
  Swig_Globals_global = NULL;
  SWIG_Py_DECREF(SWIG_Python_TypeCache());
  Swig_TypeCache_global = NULL;
  Swig_Capsule_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    if (PyModule_AddObject(module, SWIGPY_CAPSULE_ATTR_NAME, pointer) == 0) {
      ++interpreter_counter;
      Swig_Capsule_global = pointer;
    } else {
      SWIG_Py_DECREF(pointer);
    }
  } else {
    SWIG_Py_XDECREF(pointer);
  }
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      if (obj) {
        PyDict_SetItem(cache, key, obj);
        SWIG_Py_DECREF(obj);
      }
    }
  }
  SWIG_Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      PyObject *bytes = NULL;
      const char *tmp = SWIG_PyUnicode_AsUTF8AndSize(old_str, NULL, &bytes);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      SWIG_Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Py_XDECREF(bytes);
      SWIG_Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  (void) obj;
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
#ifndef Py_LIMITED_API
      /* tp_name is not accessible */
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	PyObject *bytes = NULL;
	const char *cstr = str ? SWIG_PyUnicode_AsUTF8AndSize(str, NULL, &bytes) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	SWIG_Py_XDECREF(bytes);
	SWIG_Py_XDECREF(str);
	return;
      }
#endif
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    SWIG_Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) != 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      SWIG_Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        goto done;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    SWIG_Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  SWIG_Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director_py_mutex.swg
 *
 * contains python mutex for threads
 * ----------------------------------------------------------------------------- */

#if defined(SWIG_PYTHON_THREADS) && !defined(SWIG_THREADS)
#define SWIG_THREADS 1
#endif
#if defined(SWIG_THREADS) && !defined(Py_LIMITED_API)
#include "pythread.h"
#define SWIG_HAVE_MUTEX
namespace Swig {
   class Mutex
   {
       PyThread_type_lock mutex_;
   public:
       Mutex() : mutex_(PyThread_allocate_lock()) {}
       ~Mutex() { PyThread_release_lock(mutex_); }
       void lock() { PyThread_acquire_lock(mutex_, WAIT_LOCK); }
       void unlock() { PyThread_free_lock(mutex_); }
   };
}
#endif
/* -----------------------------------------------------------------------------
 * director_guard.swg
 *
 * Generic Mutex implementation for directors
 *
 * Before including this file, there are two macros to define for choosing
 * an implementation as follows:
 * - SWIG_THREADS:
 *   If defined than mutexes are used.
 *   If not defined then mutexes are not used.
 * - SWIG_HAVE_MUTEX:
 *   If there is a target language defined 'Mutex' class available, the target
 *     language will define this macro to use the class over the options below.
 *     The language 'Mutex' class needs to be Basic Lockable.
 *     It must have public 'void lock()' and 'void unlock()' methods.
 *     See: https://en.cppreference.com/w/cpp/named_req/BasicLockable
 *   If the macro is not defined, one of the following will be used in this order:
 *   - std::mutex if using C++11 or later.
 *   - CRITICAL_SECTION on Windows.
 *   - POSIX pthread mutex.
 * ----------------------------------------------------------------------------- */

#ifdef SWIG_THREADS

#if __cplusplus >= 201103L
/*
 * C++ 11 or above
 * std::mutex        https://en.cppreference.com/w/cpp/thread/mutex
 * std::unique_lock  https://en.cppreference.com/w/cpp/thread/unique_lock
 */
#include <mutex>
#ifdef SWIG_HAVE_MUTEX
/* Use Language defined Mutex class */
#define SWIG_GUARD(_mutex) std::unique_lock<Mutex> _guard(_mutex)
#define SWIG_GUARD_DEFINITION(_cls, _mutex) Mutex _cls::_mutex
#define SWIG_GUARD_DECLARATION(_mutex) static Mutex _mutex
#else
#define SWIG_GUARD(_mutex) std::unique_lock<std::mutex> _guard(_mutex)
#define SWIG_GUARD_DEFINITION(_cls, _mutex) std::mutex _cls::_mutex
#define SWIG_GUARD_DECLARATION(_mutex) static std::mutex _mutex
#endif

#else /* __cplusplus */

#ifdef SWIG_HAVE_MUTEX
/* Use Language defined Mutex class */

#elif defined(_WIN32)
/*
 * Windows Critical Section Objects
 * https://learn.microsoft.com/en-us/windows/win32/Sync/critical-section-objects
 */
#include <windows.h>
#include <synchapi.h>
namespace Swig {
    class Mutex {
        CRITICAL_SECTION mutex_;
    public:
        Mutex() { InitializeCriticalSection(&mutex_); }
        ~Mutex() { DeleteCriticalSection(&mutex_); }
        void lock() { EnterCriticalSection(&mutex_); }
        void unlock() { LeaveCriticalSection(&mutex_); }
    };
}

#else /* _WIN32 */
/*
 * POSIX Thread mutex
 * https://pubs.opengroup.org/onlinepubs/7908799/xsh/pthread.h.html
 */
#include <pthread.h>
namespace Swig {
    class Mutex {
        pthread_mutex_t mutex_;
    public:
        Mutex() { pthread_mutex_init(&mutex_, NULL); }
        ~Mutex() { pthread_mutex_destroy(&mutex_); }
        void lock() { pthread_mutex_lock(&mutex_); }
        void unlock() { pthread_mutex_unlock(&mutex_); }
    };
}

#endif /* _WIN32 */

namespace Swig {
    class Unique_lock {
        Mutex &mutex_;
    public:
        Unique_lock(Mutex &_mutex) : mutex_(_mutex) { mutex_.lock(); }
        ~Unique_lock() { mutex_.unlock(); }
    };
}
#define SWIG_GUARD(_mutex) Unique_lock _guard(_mutex)
#define SWIG_GUARD_DEFINITION(_cls, _mutex) Mutex _cls::_mutex
#define SWIG_GUARD_DECLARATION(_mutex) static Mutex _mutex

#endif /* __cplusplus */

#else /* SWIG_THREADS */

#define SWIG_GUARD(_mutex)
#define SWIG_GUARD_DEFINITION(_cls, _mutex)
#define SWIG_GUARD_DECLARATION(_mutex)

#endif /* SWIG_THREADS */
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>

/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, swig_msg.c_str());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };



  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        SWIG_Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        SWIG_Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
    SWIG_GUARD_DECLARATION(swig_mutex_own);

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

  SWIG_GUARD_DEFINITION(Director, swig_mutex_own);
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_Archive swig_types[0]
#define SWIGTYPE_p_AttachmentList swig_types[1]
#define SWIGTYPE_p_AttachmentType swig_types[2]
#define SWIGTYPE_p_Attributes swig_types[3]
#define SWIGTYPE_p_DataArray swig_types[4]
#define SWIGTYPE_p_Days swig_types[5]
#define SWIGTYPE_p_Duration swig_types[6]
#define SWIGTYPE_p_F1 swig_types[7]
#define SWIGTYPE_p_F2 swig_types[8]
#define SWIGTYPE_p_F3 swig_types[9]
#define SWIGTYPE_p_F4 swig_types[10]
#define SWIGTYPE_p_F5 swig_types[11]
#define SWIGTYPE_p_F6 swig_types[12]
#define SWIGTYPE_p_Hours swig_types[13]
#define SWIGTYPE_p_ImplType swig_types[14]
#define SWIGTYPE_p_InplaceFilterType swig_types[15]
#define SWIGTYPE_p_Iterator swig_types[16]
#define SWIGTYPE_p_LogNodeCPtr swig_types[17]
#define SWIGTYPE_p_LogNodePtr swig_types[18]
#define SWIGTYPE_p_MSRecord_s swig_types[19]
#define SWIGTYPE_p_MajorType swig_types[20]
#define SWIGTYPE_p_MicroSeconds swig_types[21]
#define SWIGTYPE_p_MilliSeconds swig_types[22]
#define SWIGTYPE_p_MinorType swig_types[23]
#define SWIGTYPE_p_Minutes swig_types[24]
#define SWIGTYPE_p_Notifiers swig_types[25]
#define SWIGTYPE_p_OID swig_types[26]
#define SWIGTYPE_p_PackType swig_types[27]
#define SWIGTYPE_p_PatchType swig_types[28]
#define SWIGTYPE_p_PopCallback swig_types[29]
#define SWIGTYPE_p_Properties swig_types[30]
#define SWIGTYPE_p_PropertyIndex swig_types[31]
#define SWIGTYPE_p_PropertyValue swig_types[32]
#define SWIGTYPE_p_PublicObjectMap swig_types[33]
#define SWIGTYPE_p_PushCallback swig_types[34]
#define SWIGTYPE_p_ReferenceType swig_types[35]
#define SWIGTYPE_p_RootType swig_types[36]
#define SWIGTYPE_p_Seconds swig_types[37]
#define SWIGTYPE_p_Seiscomp__Array swig_types[38]
#define SWIGTYPE_p_Seiscomp__BitSet swig_types[39]
#define SWIGTYPE_p_Seiscomp__Core__BaseObject swig_types[40]
#define SWIGTYPE_p_Seiscomp__Core__DataMessage swig_types[41]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t swig_types[42]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t swig_types[43]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t swig_types[44]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t swig_types[45]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t swig_types[46]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t swig_types[47]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t swig_types[48]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t swig_types[49]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t swig_types[50]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t swig_types[51]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t swig_types[52]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t swig_types[53]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t swig_types[54]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t swig_types[55]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t swig_types[56]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t swig_types[57]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t swig_types[58]
#define SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t swig_types[59]
#define SWIGTYPE_p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t swig_types[60]
#define SWIGTYPE_p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t swig_types[61]
#define SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t swig_types[62]
#define SWIGTYPE_p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t swig_types[63]
#define SWIGTYPE_p_Seiscomp__Core__GreensFunction swig_types[64]
#define SWIGTYPE_p_Seiscomp__Core__InterruptibleObject swig_types[65]
#define SWIGTYPE_p_Seiscomp__Core__Message swig_types[66]
#define SWIGTYPE_p_Seiscomp__Core__MetaObject swig_types[67]
#define SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl swig_types[68]
#define SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl swig_types[69]
#define SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl swig_types[70]
#define SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl swig_types[71]
#define SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl swig_types[72]
#define SWIGTYPE_p_Seiscomp__Core__RTTI swig_types[73]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl swig_types[74]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl swig_types[75]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl swig_types[76]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl swig_types[77]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl swig_types[78]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl swig_types[79]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl swig_types[80]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl swig_types[81]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl swig_types[82]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl swig_types[83]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl swig_types[84]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl swig_types[85]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl swig_types[86]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl swig_types[87]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl swig_types[88]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl swig_types[89]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl swig_types[90]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl swig_types[91]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl swig_types[92]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl swig_types[93]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl swig_types[94]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl swig_types[95]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl swig_types[96]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl swig_types[97]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl swig_types[98]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl swig_types[99]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl swig_types[100]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl swig_types[101]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl swig_types[102]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl swig_types[103]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl swig_types[104]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl swig_types[105]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl swig_types[106]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl swig_types[107]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl swig_types[108]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl swig_types[109]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl swig_types[110]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl swig_types[111]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl swig_types[112]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl swig_types[113]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl swig_types[114]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl swig_types[115]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl swig_types[116]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl swig_types[117]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl swig_types[118]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl swig_types[119]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl swig_types[120]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl swig_types[121]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl swig_types[122]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl swig_types[123]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl swig_types[124]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl swig_types[125]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl swig_types[126]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl swig_types[127]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl swig_types[128]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl swig_types[129]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl swig_types[130]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl swig_types[131]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl swig_types[132]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl swig_types[133]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl swig_types[134]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl swig_types[135]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl swig_types[136]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl swig_types[137]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl swig_types[138]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl swig_types[139]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl swig_types[140]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl swig_types[141]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl swig_types[142]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl swig_types[143]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl swig_types[144]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl swig_types[145]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl swig_types[146]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl swig_types[147]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl swig_types[148]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl swig_types[149]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl swig_types[150]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl swig_types[151]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl swig_types[152]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl swig_types[153]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl swig_types[154]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl swig_types[155]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl swig_types[156]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl swig_types[157]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl swig_types[158]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl swig_types[159]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl swig_types[160]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl swig_types[161]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl swig_types[162]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl swig_types[163]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl swig_types[164]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl swig_types[165]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl swig_types[166]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl swig_types[167]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl swig_types[168]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl swig_types[169]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl swig_types[170]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl swig_types[171]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl swig_types[172]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl swig_types[173]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl swig_types[174]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl swig_types[175]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl swig_types[176]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl swig_types[177]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl swig_types[178]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl swig_types[179]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl swig_types[180]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl swig_types[181]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl swig_types[182]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl swig_types[183]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl swig_types[184]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl swig_types[185]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl swig_types[186]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl swig_types[187]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl swig_types[188]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl swig_types[189]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl swig_types[190]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl swig_types[191]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl swig_types[192]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl swig_types[193]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl swig_types[194]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl swig_types[195]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl swig_types[196]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl swig_types[197]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl swig_types[198]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl swig_types[199]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl swig_types[200]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl swig_types[201]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl swig_types[202]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl swig_types[203]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl swig_types[204]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl swig_types[205]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl swig_types[206]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl swig_types[207]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl swig_types[208]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl swig_types[209]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl swig_types[210]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl swig_types[211]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl swig_types[212]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl swig_types[213]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl swig_types[214]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl swig_types[215]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl swig_types[216]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl swig_types[217]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl swig_types[218]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl swig_types[219]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl swig_types[220]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl swig_types[221]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl swig_types[222]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl swig_types[223]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl swig_types[224]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl swig_types[225]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl swig_types[226]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl swig_types[227]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl swig_types[228]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl swig_types[229]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl swig_types[230]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl swig_types[231]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl swig_types[232]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl swig_types[233]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl swig_types[234]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl swig_types[235]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl swig_types[236]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl swig_types[237]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl swig_types[238]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl swig_types[239]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl swig_types[240]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl swig_types[241]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl swig_types[242]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl swig_types[243]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl swig_types[244]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl swig_types[245]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl swig_types[246]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl swig_types[247]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl swig_types[248]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl swig_types[249]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl swig_types[250]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl swig_types[251]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl swig_types[252]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl swig_types[253]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl swig_types[254]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl swig_types[255]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl swig_types[256]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl swig_types[257]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl swig_types[258]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl swig_types[259]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl swig_types[260]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl swig_types[261]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl swig_types[262]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl swig_types[263]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl swig_types[264]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl swig_types[265]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl swig_types[266]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl swig_types[267]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl swig_types[268]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl swig_types[269]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl swig_types[270]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl swig_types[271]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl swig_types[272]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl swig_types[273]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl swig_types[274]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl swig_types[275]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl swig_types[276]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl swig_types[277]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl swig_types[278]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl swig_types[279]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl swig_types[280]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl swig_types[281]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl swig_types[282]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl swig_types[283]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl swig_types[284]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl swig_types[285]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl swig_types[286]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl swig_types[287]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl swig_types[288]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl swig_types[289]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl swig_types[290]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl swig_types[291]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl swig_types[292]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl swig_types[293]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl swig_types[294]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl swig_types[295]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl swig_types[296]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl swig_types[297]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl swig_types[298]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl swig_types[299]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl swig_types[300]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl swig_types[301]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl swig_types[302]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl swig_types[303]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl swig_types[304]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl swig_types[305]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl swig_types[306]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl swig_types[307]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl swig_types[308]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl swig_types[309]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl swig_types[310]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl swig_types[311]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl swig_types[312]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl swig_types[313]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl swig_types[314]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl swig_types[315]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl swig_types[316]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl swig_types[317]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl swig_types[318]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl swig_types[319]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl swig_types[320]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl swig_types[321]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl swig_types[322]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl swig_types[323]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl swig_types[324]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl swig_types[325]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl swig_types[326]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl swig_types[327]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl swig_types[328]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl swig_types[329]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl swig_types[330]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl swig_types[331]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl swig_types[332]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl swig_types[333]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl swig_types[334]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl swig_types[335]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl swig_types[336]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl swig_types[337]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl swig_types[338]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl swig_types[339]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl swig_types[340]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl swig_types[341]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl swig_types[342]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl swig_types[343]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl swig_types[344]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl swig_types[345]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl swig_types[346]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl swig_types[347]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl swig_types[348]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl swig_types[349]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl swig_types[350]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl swig_types[351]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl swig_types[352]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl swig_types[353]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl swig_types[354]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl swig_types[355]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl swig_types[356]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl swig_types[357]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl swig_types[358]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl swig_types[359]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl swig_types[360]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl swig_types[361]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl swig_types[362]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl swig_types[363]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl swig_types[364]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl swig_types[365]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl swig_types[366]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl swig_types[367]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl swig_types[368]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl swig_types[369]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl swig_types[370]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl swig_types[371]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl swig_types[372]
#define SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl swig_types[373]
#define SWIGTYPE_p_Seiscomp__Core__Time swig_types[374]
#define SWIGTYPE_p_Seiscomp__DataModel__Access swig_types[375]
#define SWIGTYPE_p_Seiscomp__DataModel__Amplitude swig_types[376]
#define SWIGTYPE_p_Seiscomp__DataModel__AmplitudeReference swig_types[377]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkLog swig_types[378]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkRequest swig_types[379]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkRequestLine swig_types[380]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkRequestSummary swig_types[381]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkStatusLine swig_types[382]
#define SWIGTYPE_p_Seiscomp__DataModel__ArclinkUser swig_types[383]
#define SWIGTYPE_p_Seiscomp__DataModel__Arrival swig_types[384]
#define SWIGTYPE_p_Seiscomp__DataModel__ArtificialEventParametersMessage swig_types[385]
#define SWIGTYPE_p_Seiscomp__DataModel__ArtificialOriginMessage swig_types[386]
#define SWIGTYPE_p_Seiscomp__DataModel__AuxDevice swig_types[387]
#define SWIGTYPE_p_Seiscomp__DataModel__AuxSource swig_types[388]
#define SWIGTYPE_p_Seiscomp__DataModel__AuxStream swig_types[389]
#define SWIGTYPE_p_Seiscomp__DataModel__Axis swig_types[390]
#define SWIGTYPE_p_Seiscomp__DataModel__Blob swig_types[391]
#define SWIGTYPE_p_Seiscomp__DataModel__Comment swig_types[392]
#define SWIGTYPE_p_Seiscomp__DataModel__ComplexArray swig_types[393]
#define SWIGTYPE_p_Seiscomp__DataModel__CompositeTime swig_types[394]
#define SWIGTYPE_p_Seiscomp__DataModel__ConfidenceEllipsoid swig_types[395]
#define SWIGTYPE_p_Seiscomp__DataModel__Config swig_types[396]
#define SWIGTYPE_p_Seiscomp__DataModel__ConfigModule swig_types[397]
#define SWIGTYPE_p_Seiscomp__DataModel__ConfigStation swig_types[398]
#define SWIGTYPE_p_Seiscomp__DataModel__ConfigSyncMessage swig_types[399]
#define SWIGTYPE_p_Seiscomp__DataModel__CreationInfo swig_types[400]
#define SWIGTYPE_p_Seiscomp__DataModel__DataAttributeExtent swig_types[401]
#define SWIGTYPE_p_Seiscomp__DataModel__DataAvailability swig_types[402]
#define SWIGTYPE_p_Seiscomp__DataModel__DataExtent swig_types[403]
#define SWIGTYPE_p_Seiscomp__DataModel__DataSegment swig_types[404]
#define SWIGTYPE_p_Seiscomp__DataModel__DataUsed swig_types[405]
#define SWIGTYPE_p_Seiscomp__DataModel__DatabaseArchive swig_types[406]
#define SWIGTYPE_p_Seiscomp__DataModel__DatabaseIterator swig_types[407]
#define SWIGTYPE_p_Seiscomp__DataModel__DatabaseObjectWriter swig_types[408]
#define SWIGTYPE_p_Seiscomp__DataModel__DatabaseQuery swig_types[409]
#define SWIGTYPE_p_Seiscomp__DataModel__DatabaseReader swig_types[410]
#define SWIGTYPE_p_Seiscomp__DataModel__Datalogger swig_types[411]
#define SWIGTYPE_p_Seiscomp__DataModel__DataloggerCalibration swig_types[412]
#define SWIGTYPE_p_Seiscomp__DataModel__Decimation swig_types[413]
#define SWIGTYPE_p_Seiscomp__DataModel__Event swig_types[414]
#define SWIGTYPE_p_Seiscomp__DataModel__EventDescription swig_types[415]
#define SWIGTYPE_p_Seiscomp__DataModel__EventParameters swig_types[416]
#define SWIGTYPE_p_Seiscomp__DataModel__FocalMechanism swig_types[417]
#define SWIGTYPE_p_Seiscomp__DataModel__FocalMechanismReference swig_types[418]
#define SWIGTYPE_p_Seiscomp__DataModel__IntegerQuantity swig_types[419]
#define SWIGTYPE_p_Seiscomp__DataModel__Inventory swig_types[420]
#define SWIGTYPE_p_Seiscomp__DataModel__InventorySyncMessage swig_types[421]
#define SWIGTYPE_p_Seiscomp__DataModel__JournalEntry swig_types[422]
#define SWIGTYPE_p_Seiscomp__DataModel__Journaling swig_types[423]
#define SWIGTYPE_p_Seiscomp__DataModel__Magnitude swig_types[424]
#define SWIGTYPE_p_Seiscomp__DataModel__MomentTensor swig_types[425]
#define SWIGTYPE_p_Seiscomp__DataModel__MomentTensorComponentContribution swig_types[426]
#define SWIGTYPE_p_Seiscomp__DataModel__MomentTensorPhaseSetting swig_types[427]
#define SWIGTYPE_p_Seiscomp__DataModel__MomentTensorStationContribution swig_types[428]
#define SWIGTYPE_p_Seiscomp__DataModel__Network swig_types[429]
#define SWIGTYPE_p_Seiscomp__DataModel__NodalPlane swig_types[430]
#define SWIGTYPE_p_Seiscomp__DataModel__NodalPlanes swig_types[431]
#define SWIGTYPE_p_Seiscomp__DataModel__Notifier swig_types[432]
#define SWIGTYPE_p_Seiscomp__DataModel__NotifierCreator swig_types[433]
#define SWIGTYPE_p_Seiscomp__DataModel__NotifierMessage swig_types[434]
#define SWIGTYPE_p_Seiscomp__DataModel__Object swig_types[435]
#define SWIGTYPE_p_Seiscomp__DataModel__Observer swig_types[436]
#define SWIGTYPE_p_Seiscomp__DataModel__Origin swig_types[437]
#define SWIGTYPE_p_Seiscomp__DataModel__OriginQuality swig_types[438]
#define SWIGTYPE_p_Seiscomp__DataModel__OriginReference swig_types[439]
#define SWIGTYPE_p_Seiscomp__DataModel__OriginUncertainty swig_types[440]
#define SWIGTYPE_p_Seiscomp__DataModel__Outage swig_types[441]
#define SWIGTYPE_p_Seiscomp__DataModel__Parameter swig_types[442]
#define SWIGTYPE_p_Seiscomp__DataModel__ParameterSet swig_types[443]
#define SWIGTYPE_p_Seiscomp__DataModel__Phase swig_types[444]
#define SWIGTYPE_p_Seiscomp__DataModel__Pick swig_types[445]
#define SWIGTYPE_p_Seiscomp__DataModel__PickReference swig_types[446]
#define SWIGTYPE_p_Seiscomp__DataModel__PrincipalAxes swig_types[447]
#define SWIGTYPE_p_Seiscomp__DataModel__PublicObject swig_types[448]
#define SWIGTYPE_p_Seiscomp__DataModel__PublicObjectCache swig_types[449]
#define SWIGTYPE_p_Seiscomp__DataModel__PublicObjectRingBuffer swig_types[450]
#define SWIGTYPE_p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer swig_types[451]
#define SWIGTYPE_p_Seiscomp__DataModel__QCLog swig_types[452]
#define SWIGTYPE_p_Seiscomp__DataModel__QualityControl swig_types[453]
#define SWIGTYPE_p_Seiscomp__DataModel__Reading swig_types[454]
#define SWIGTYPE_p_Seiscomp__DataModel__RealArray swig_types[455]
#define SWIGTYPE_p_Seiscomp__DataModel__RealPDF1D swig_types[456]
#define SWIGTYPE_p_Seiscomp__DataModel__RealQuantity swig_types[457]
#define SWIGTYPE_p_Seiscomp__DataModel__ResponseFAP swig_types[458]
#define SWIGTYPE_p_Seiscomp__DataModel__ResponseFIR swig_types[459]
#define SWIGTYPE_p_Seiscomp__DataModel__ResponseIIR swig_types[460]
#define SWIGTYPE_p_Seiscomp__DataModel__ResponsePAZ swig_types[461]
#define SWIGTYPE_p_Seiscomp__DataModel__ResponsePolynomial swig_types[462]
#define SWIGTYPE_p_Seiscomp__DataModel__Route swig_types[463]
#define SWIGTYPE_p_Seiscomp__DataModel__RouteArclink swig_types[464]
#define SWIGTYPE_p_Seiscomp__DataModel__RouteSeedlink swig_types[465]
#define SWIGTYPE_p_Seiscomp__DataModel__Routing swig_types[466]
#define SWIGTYPE_p_Seiscomp__DataModel__Sensor swig_types[467]
#define SWIGTYPE_p_Seiscomp__DataModel__SensorCalibration swig_types[468]
#define SWIGTYPE_p_Seiscomp__DataModel__SensorLocation swig_types[469]
#define SWIGTYPE_p_Seiscomp__DataModel__Setup swig_types[470]
#define SWIGTYPE_p_Seiscomp__DataModel__SourceTimeFunction swig_types[471]
#define SWIGTYPE_p_Seiscomp__DataModel__Station swig_types[472]
#define SWIGTYPE_p_Seiscomp__DataModel__StationGroup swig_types[473]
#define SWIGTYPE_p_Seiscomp__DataModel__StationMagnitude swig_types[474]
#define SWIGTYPE_p_Seiscomp__DataModel__StationMagnitudeContribution swig_types[475]
#define SWIGTYPE_p_Seiscomp__DataModel__StationReference swig_types[476]
#define SWIGTYPE_p_Seiscomp__DataModel__Stream swig_types[477]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact swig_types[478]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames swig_types[479]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference swig_types[480]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource swig_types[481]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter swig_types[482]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource swig_types[483]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion swig_types[484]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record swig_types[485]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture swig_types[486]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter swig_types[487]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember swig_types[488]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex swig_types[489]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters swig_types[490]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader swig_types[491]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription swig_types[492]
#define SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture swig_types[493]
#define SWIGTYPE_p_Seiscomp__DataModel__Tensor swig_types[494]
#define SWIGTYPE_p_Seiscomp__DataModel__TimeArray swig_types[495]
#define SWIGTYPE_p_Seiscomp__DataModel__TimePDF1D swig_types[496]
#define SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity swig_types[497]
#define SWIGTYPE_p_Seiscomp__DataModel__TimeWindow swig_types[498]
#define SWIGTYPE_p_Seiscomp__DataModel__Visitor swig_types[499]
#define SWIGTYPE_p_Seiscomp__DataModel__WaveformQuality swig_types[500]
#define SWIGTYPE_p_Seiscomp__DataModel__WaveformStreamID swig_types[501]
#define SWIGTYPE_p_Seiscomp__GenericRecord swig_types[502]
#define SWIGTYPE_p_Seiscomp__Geo__GeoCoordinate swig_types[503]
#define SWIGTYPE_p_Seiscomp__Geo__GeoFeature swig_types[504]
#define SWIGTYPE_p_Seiscomp__Geo__GeoFeatureSet swig_types[505]
#define SWIGTYPE_p_Seiscomp__IO__BinaryArchive swig_types[506]
#define SWIGTYPE_p_Seiscomp__IO__Cropper swig_types[507]
#define SWIGTYPE_p_Seiscomp__IO__DatabaseInterface swig_types[508]
#define SWIGTYPE_p_Seiscomp__IO__Exporter swig_types[509]
#define SWIGTYPE_p_Seiscomp__IO__GFArchive swig_types[510]
#define SWIGTYPE_p_Seiscomp__IO__GFReceiver swig_types[511]
#define SWIGTYPE_p_Seiscomp__IO__GFSource swig_types[512]
#define SWIGTYPE_p_Seiscomp__IO__Importer swig_types[513]
#define SWIGTYPE_p_Seiscomp__IO__MSeedRecord swig_types[514]
#define SWIGTYPE_p_Seiscomp__IO__PipeFilter swig_types[515]
#define SWIGTYPE_p_Seiscomp__IO__RecordDemuxFilter swig_types[516]
#define SWIGTYPE_p_Seiscomp__IO__RecordFilterInterface swig_types[517]
#define SWIGTYPE_p_Seiscomp__IO__RecordIIRFilterT_double_t swig_types[518]
#define SWIGTYPE_p_Seiscomp__IO__RecordIIRFilterT_float_t swig_types[519]
#define SWIGTYPE_p_Seiscomp__IO__RecordInput swig_types[520]
#define SWIGTYPE_p_Seiscomp__IO__RecordResamplerBase swig_types[521]
#define SWIGTYPE_p_Seiscomp__IO__RecordResamplerT_double_t swig_types[522]
#define SWIGTYPE_p_Seiscomp__IO__RecordResamplerT_float_t swig_types[523]
#define SWIGTYPE_p_Seiscomp__IO__RecordResamplerT_int_t swig_types[524]
#define SWIGTYPE_p_Seiscomp__IO__RecordStream swig_types[525]
#define SWIGTYPE_p_Seiscomp__IO__VBinaryArchive swig_types[526]
#define SWIGTYPE_p_Seiscomp__IO__XMLArchive swig_types[527]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__AverageT_double_t swig_types[528]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__AverageT_float_t swig_types[529]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__ChainFilterT_double_t swig_types[530]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__ChainFilterT_float_t swig_types[531]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t swig_types[532]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t swig_types[533]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t swig_types[534]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t swig_types[535]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t swig_types[536]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t swig_types[537]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t swig_types[538]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t swig_types[539]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t swig_types[540]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t swig_types[541]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t swig_types[542]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t swig_types[543]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__FilterT_double_t swig_types[544]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__FilterT_float_t swig_types[545]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t swig_types[546]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t swig_types[547]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t swig_types[548]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t swig_types[549]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t swig_types[550]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t swig_types[551]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t swig_types[552]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t swig_types[553]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t swig_types[554]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t swig_types[555]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__InitialTaperT_double_t swig_types[556]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__InitialTaperT_float_t swig_types[557]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t swig_types[558]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t swig_types[559]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__RunningMeanT_double_t swig_types[560]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__RunningMeanT_float_t swig_types[561]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTA2T_double_t swig_types[562]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTA2T_float_t swig_types[563]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTAT_double_t swig_types[564]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTAT_float_t swig_types[565]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t swig_types[566]
#define SWIGTYPE_p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t swig_types[567]
#define SWIGTYPE_p_Seiscomp__Math__Geo__CityT_double_t swig_types[568]
#define SWIGTYPE_p_Seiscomp__Math__Geo__CityT_float_t swig_types[569]
#define SWIGTYPE_p_Seiscomp__Math__Geo__CoordT_double_t swig_types[570]
#define SWIGTYPE_p_Seiscomp__Math__Geo__CoordT_float_t swig_types[571]
#define SWIGTYPE_p_Seiscomp__Math__Geo__NamedCoordT_double_t swig_types[572]
#define SWIGTYPE_p_Seiscomp__Math__Geo__NamedCoordT_float_t swig_types[573]
#define SWIGTYPE_p_Seiscomp__Math__Restitution__FFT__PolesAndZeros swig_types[574]
#define SWIGTYPE_p_Seiscomp__Math__Restitution__FFT__ResponseList swig_types[575]
#define SWIGTYPE_p_Seiscomp__Math__Restitution__FFT__TransferFunction swig_types[576]
#define SWIGTYPE_p_Seiscomp__NumericArrayT_char_t swig_types[577]
#define SWIGTYPE_p_Seiscomp__NumericArrayT_double_t swig_types[578]
#define SWIGTYPE_p_Seiscomp__NumericArrayT_float_t swig_types[579]
#define SWIGTYPE_p_Seiscomp__NumericArrayT_int_t swig_types[580]
#define SWIGTYPE_p_Seiscomp__Record swig_types[581]
#define SWIGTYPE_p_Seiscomp__RecordStream__Arclink__ArclinkConnection swig_types[582]
#define SWIGTYPE_p_Seiscomp__RecordStream__CombinedConnection swig_types[583]
#define SWIGTYPE_p_Seiscomp__RecordStream__File swig_types[584]
#define SWIGTYPE_p_Seiscomp__RecordStream__SLConnection swig_types[585]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t swig_types[586]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_char_t swig_types[587]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_double_t swig_types[588]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_float_t swig_types[589]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_int_t swig_types[590]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_std__complexT_double_t_t swig_types[591]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_std__complexT_float_t_t swig_types[592]
#define SWIGTYPE_p_Seiscomp__TypedArrayT_std__string_t swig_types[593]
#define SWIGTYPE_p_Storage swig_types[594]
#define SWIGTYPE_p_TimePoint swig_types[595]
#define SWIGTYPE_p_Type swig_types[596]
#define SWIGTYPE_p_ValueType swig_types[597]
#define SWIGTYPE_p_Weeks swig_types[598]
#define SWIGTYPE_p_allocator_type swig_types[599]
#define SWIGTYPE_p_boost__any swig_types[600]
#define SWIGTYPE_p_char swig_types[601]
#define SWIGTYPE_p_char_type swig_types[602]
#define SWIGTYPE_p_const_iterator swig_types[603]
#define SWIGTYPE_p_difference_type swig_types[604]
#define SWIGTYPE_p_fmtflags swig_types[605]
#define SWIGTYPE_p_int swig_types[606]
#define SWIGTYPE_p_int_type swig_types[607]
#define SWIGTYPE_p_iostate swig_types[608]
#define SWIGTYPE_p_iterator swig_types[609]
#define SWIGTYPE_p_iterator_category swig_types[610]
#define SWIGTYPE_p_long swig_types[611]
#define SWIGTYPE_p_long_long swig_types[612]
#define SWIGTYPE_p_off_type swig_types[613]
#define SWIGTYPE_p_openmode swig_types[614]
#define SWIGTYPE_p_pos_type swig_types[615]
#define SWIGTYPE_p_seekdir swig_types[616]
#define SWIGTYPE_p_short swig_types[617]
#define SWIGTYPE_p_signed_char swig_types[618]
#define SWIGTYPE_p_size_t swig_types[619]
#define SWIGTYPE_p_size_type swig_types[620]
#define SWIGTYPE_p_state_type swig_types[621]
#define SWIGTYPE_p_std__basic_iosT_char_t swig_types[622]
#define SWIGTYPE_p_std__complexT_double_t swig_types[623]
#define SWIGTYPE_p_std__invalid_argument swig_types[624]
#define SWIGTYPE_p_std__shared_ptrT_Seiscomp__Core__MetaObject_t swig_types[625]
#define SWIGTYPE_p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t swig_types[626]
#define SWIGTYPE_p_std__vectorT_Seiscomp__Core__BaseObject_p_t swig_types[627]
#define SWIGTYPE_p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t swig_types[628]
#define SWIGTYPE_p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t swig_types[629]
#define SWIGTYPE_p_std__vectorT_std__complexT_double_t_t swig_types[630]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[631]
#define SWIGTYPE_p_traits_type swig_types[632]
#define SWIGTYPE_p_unsigned_char swig_types[633]
#define SWIGTYPE_p_unsigned_int swig_types[634]
#define SWIGTYPE_p_unsigned_long_long swig_types[635]
#define SWIGTYPE_p_unsigned_short swig_types[636]
#define SWIGTYPE_p_value_type swig_types[637]
static swig_type_info *swig_types[639];
static swig_module_info swig_module = {swig_types, 638, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _strongmotion.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__strongmotion

#else
#  define SWIG_init    init_strongmotion

#endif

#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      SWIG_Py_XINCREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        SWIG_Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      SWIG_Py_XINCREF(item._obj);
      SWIG_Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      SWIG_Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      SWIG_Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#define SWIG_FILE_WITH_INIT
#include <seiscomp/core/typedarray.h>
#include <seiscomp/core/record.h>
#include <seiscomp/core/greensfunction.h>
#include <seiscomp/core/genericrecord.h>
#include <seiscomp/core/datamessage.h>
#include <seiscomp/geo/coordinate.h>
#include <seiscomp/geo/boundingbox.h>
#include <seiscomp/geo/feature.h>
#include <seiscomp/geo/featureset.h>
#include <seiscomp/math/geo.h>
#include <seiscomp/math/coord.h>
#include <seiscomp/math/math.h>
#include <seiscomp/math/filter.h>
#include <seiscomp/math/filter/rmhp.h>
#include <seiscomp/math/filter/taper.h>
#include <seiscomp/math/filter/average.h>
#include <seiscomp/math/filter/stalta.h>
#include <seiscomp/math/filter/chainfilter.h>
#include <seiscomp/math/filter/biquad.h>
#include <seiscomp/math/filter/butterworth.h>
#include <seiscomp/math/filter/taper.h>
#include <seiscomp/math/filter/seismometers.h>
#include <seiscomp/math/restitution/transferfunction.h>
#include <seiscomp/io/database.h>
#include <seiscomp/io/recordinput.h>
#include <seiscomp/io/recordinput.h>
#include <seiscomp/io/recordfilter.h>
#include <seiscomp/io/recordfilter/crop.h>
#include <seiscomp/io/recordfilter/demux.h>
#include <seiscomp/io/recordfilter/iirfilter.h>
#include <seiscomp/io/recordfilter/pipe.h>
#include <seiscomp/io/recordfilter/resample.h>
#include <seiscomp/io/importer.h>
#include <seiscomp/io/exporter.h>
#include <seiscomp/io/gfarchive.h>
#include <seiscomp/io/archive/binarchive.h>
#include <seiscomp/io/archive/xmlarchive.h>
#include <seiscomp/io/records/mseedrecord.h>
#include <seiscomp/datamodel/notifier.h>
#include <seiscomp/datamodel/publicobjectcache.h>
#include <seiscomp/datamodel/utils.h>
#include <seiscomp/datamodel/diff.h>
#include <seiscomp/datamodel/messages.h>
#include <seiscomp/io/recordstream/file.h>
#include <seiscomp/io/recordstream/slconnection.h>
#include <seiscomp/io/recordstream/arclink.h>
#include <seiscomp/io/recordstream/combined.h>

#include <seiscomp/datamodel/strongmotion/strongmotionparameters_package.h>
#include <seiscomp/datamodel/strongmotion/databasereader.h>
#include <seiscomp/core/interruptible.h>


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICEOBJECT PyObject
#else
# define SWIGPY_SLICEOBJECT PySliceObject
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static swig_type_info* desc = SWIG_TypeQuery("swig::SwigPyIterator *");
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    SWIG_Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx, cx, rd;
   errno = 0;
   fx = floor(x);
   cx = ceil(x);
   rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      // Largest double not larger than ULONG_MAX (not portably calculated easily)
      // Note that double(ULONG_MAX) is stored in a double rounded up by one (for 64-bit unsigned long)
      // 0xfffffffffffff800ULL == (uint64_t)std::nextafter(double(__uint128_t(ULONG_MAX)+1), double(0))
      const double ulong_max = sizeof(unsigned long) == 8 ? 0xfffffffffffff800ULL : ULONG_MAX;
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ulong_max)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      // Largest double not larger than LONG_MAX (not portably calculated easily)
      // Note that double(LONG_MAX) is stored in a double rounded up by one (for 64-bit long)
      // 0x7ffffffffffffc00LL == (int64_t)std::nextafter(double(__uint128_t(LONG_MAX)+1), double(0))
      const double long_max = sizeof(long) == 8 ? 0x7ffffffffffffc00LL : LONG_MAX;
      // No equivalent needed for 64-bit double(LONG_MIN) is exactly LONG_MIN
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, long_max)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include <utility>


#include <map>


#include <algorithm>


#include <complex> 


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static swig_type_info* info = 0;
  if (!info) {
    info = SWIG_TypeQuery("_p_char");
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


/* Return string from Python obj. NOTE: obj must remain in scope in order
   to use the returned cptr (but only when alloc is set to SWIG_OLDOBJ) */
SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char **cptr, size_t *psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    PyObject *bytes = NULL;
    int ret = SWIG_OK;
    if (alloc)
      *alloc = SWIG_OLDOBJ;
#if PY_VERSION_HEX>=0x03000000 && defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    cstr = (char *)SWIG_PyUnicode_AsUTF8AndSize(obj, &len, &bytes);
    if (!cstr)
      return SWIG_TypeError;
    /* The returned string is only duplicated if the char * returned is not owned and memory managed by obj */
    if (bytes && cptr) {
      if (alloc) {
        cstr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        *alloc = SWIG_NEWOBJ;
      } else {
        /* alloc must be set in order to clean up allocated memory */
        return SWIG_RuntimeError;
      }
    }
#endif
    if (cptr) *cptr = cstr;
    if (psize) *psize = len + 1;
    SWIG_Py_XDECREF(bytes);
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        SWIG_Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        SWIG_Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    PyErr_Clear();
    static swig_type_info *descriptor = SWIG_TypeQuery("std::string" " *");
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "strongmotionPYTHON_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ptrdiff_t result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_distance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_advance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(SWIG_STD_MOVE(arg2));
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_EFwHwIndicatorNames(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "new_EFwHwIndicatorNames", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *)new Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EFwHwIndicatorNames_name(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "EFwHwIndicatorNames_name" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames::name(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EFwHwIndicatorNames(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *arg1 = (Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EFwHwIndicatorNames" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames * >(argp1);
  {
    try {
      delete arg1;
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EFwHwIndicatorNames_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *EFwHwIndicatorNames_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMemberIndex__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *)new Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMemberIndex__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SimpleFilterChainMemberIndex" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *)new Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMemberIndex__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimpleFilterChainMemberIndex" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_SimpleFilterChainMemberIndex" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *)new Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMemberIndex(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SimpleFilterChainMemberIndex", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_SimpleFilterChainMemberIndex__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimpleFilterChainMemberIndex__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SimpleFilterChainMemberIndex__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SimpleFilterChainMemberIndex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex::SimpleFilterChainMemberIndex()\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex::SimpleFilterChainMemberIndex(int)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex::SimpleFilterChainMemberIndex(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMemberIndex___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMemberIndex___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMemberIndex___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMemberIndex___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMemberIndex___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMemberIndex___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMemberIndex___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMemberIndex___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMemberIndex___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMemberIndex___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMemberIndex_sequenceNo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMemberIndex_sequenceNo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMemberIndex_sequenceNo_set" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimpleFilterChainMemberIndex_sequenceNo_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sequenceNo = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMemberIndex_sequenceNo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMemberIndex_sequenceNo_get" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  result = (int) ((arg1)->sequenceNo);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SimpleFilterChainMemberIndex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimpleFilterChainMemberIndex" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp1);
  {
    try {
      delete arg1;
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimpleFilterChainMemberIndex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SimpleFilterChainMemberIndex_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilterChainMember_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilterChainMember_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SimpleFilterChainMember_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilterChainMember_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilterChainMember_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SimpleFilterChainMember_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMember__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)new Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMember__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_SimpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)new Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilterChainMember(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SimpleFilterChainMember", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_SimpleFilterChainMember__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimpleFilterChainMember__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SimpleFilterChainMember'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::SimpleFilterChainMember()\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember::SimpleFilterChainMember(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimpleFilterChainMember(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_setSequenceNo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_setSequenceNo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_setSequenceNo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimpleFilterChainMember_setSequenceNo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setSequenceNo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_sequenceNo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_sequenceNo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->sequenceNo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_setSimpleFilterID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_setSimpleFilterID", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_setSimpleFilterID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_setSimpleFilterID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilterChainMember_setSimpleFilterID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setSimpleFilterID((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_simpleFilterID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_simpleFilterID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->simpleFilterID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_index(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_index" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *) &((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->index();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_equalIndex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_equalIndex", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_equalIndex" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_equalIndex" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->equalIndex((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_record(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->record();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilterChainMember_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilterChainMember_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilterChainMember_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilterChainMember_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimpleFilterChainMember_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SimpleFilterChainMember_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SimpleFilter_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::SimpleFilter::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::SimpleFilter::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SimpleFilter_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilter_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilter_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SimpleFilter_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SimpleFilter_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilter_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilter_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SimpleFilter_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilter__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_SimpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)new Seiscomp::DataModel::StrongMotion::SimpleFilter((Seiscomp::DataModel::StrongMotion::SimpleFilter const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilter__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimpleFilter" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_SimpleFilter" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)new Seiscomp::DataModel::StrongMotion::SimpleFilter((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimpleFilter(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SimpleFilter", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimpleFilter__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimpleFilter__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SimpleFilter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::SimpleFilter(Seiscomp::DataModel::StrongMotion::SimpleFilter const &)\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::SimpleFilter(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimpleFilter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Create__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Create();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Create__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Create((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Create(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SimpleFilter_Create", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_SimpleFilter_Create__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimpleFilter_Create__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SimpleFilter_Create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::Create()\n"
    "    Seiscomp::DataModel::StrongMotion::SimpleFilter::Create(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_Find(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)Seiscomp::DataModel::StrongMotion::SimpleFilter::Find((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::SimpleFilter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilter___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::SimpleFilter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::SimpleFilter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_setType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_setType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_setType" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SimpleFilter_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setType((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_type(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_type" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->type();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_add(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_remove(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_remove", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_removeFilterParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_removeFilterParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_removeFilterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimpleFilter_removeFilterParameter" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeFilterParameter(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_filterParameterCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_filterParameterCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->filterParameterCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_filterParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_filterParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_filterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimpleFilter_filterParameter" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->filterParameter(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_findFilterParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_findFilterParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_findFilterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_findFilterParameter" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->findFilterParameter(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_strongMotionParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_strongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->strongMotionParameters();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::SimpleFilter const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_updateChild(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_updateChild", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_updateChild" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_updateChild" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->updateChild(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleFilter_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg1 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SimpleFilter_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleFilter_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleFilter_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimpleFilter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SimpleFilter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Contact_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::Contact::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::Contact::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)Seiscomp::DataModel::StrongMotion::Contact::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)Seiscomp::DataModel::StrongMotion::Contact::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)Seiscomp::DataModel::StrongMotion::Contact::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Contact_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Contact_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Contact_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Contact_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Contact_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)Seiscomp::DataModel::StrongMotion::Contact::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Contact_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Contact_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Contact_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Contact_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Contact_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::Contact::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Contact__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)new Seiscomp::DataModel::StrongMotion::Contact();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Contact__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Contact" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_Contact" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *)new Seiscomp::DataModel::StrongMotion::Contact((Seiscomp::DataModel::StrongMotion::Contact const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Contact(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Contact", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Contact__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Contact__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Contact'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::Contact()\n"
    "    Seiscomp::DataModel::StrongMotion::Contact::Contact(Seiscomp::DataModel::StrongMotion::Contact const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Contact(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Contact" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::Contact const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Contact___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::Contact const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Contact_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::Contact const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setName" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setName((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_name(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_name" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->name();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setForename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setForename", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setForename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setForename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setForename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setForename((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_forename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_forename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->forename();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setAgency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setAgency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setAgency" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setAgency" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setAgency" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setAgency((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_agency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_agency" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->agency();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setDepartment(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setDepartment", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setDepartment" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setDepartment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setDepartment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setDepartment((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_department(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_department" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->department();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setAddress(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setAddress", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setAddress" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setAddress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setAddress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setAddress((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_address(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_address" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->address();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setPhone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setPhone", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setPhone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setPhone" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setPhone" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setPhone((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_phone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_phone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->phone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_setEmail(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Contact_setEmail", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_setEmail" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Contact_setEmail" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Contact_setEmail" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setEmail((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Contact_email(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Contact *arg1 = (Seiscomp::DataModel::StrongMotion::Contact *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Contact_email" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Contact const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Contact * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Contact const *)arg1)->email();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Contact_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Contact_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_EventRecordReference_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::EventRecordReference::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::EventRecordReference::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)Seiscomp::DataModel::StrongMotion::EventRecordReference::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)Seiscomp::DataModel::StrongMotion::EventRecordReference::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)Seiscomp::DataModel::StrongMotion::EventRecordReference::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)Seiscomp::DataModel::StrongMotion::EventRecordReference::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::EventRecordReference::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EventRecordReference__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)new Seiscomp::DataModel::StrongMotion::EventRecordReference();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EventRecordReference__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)new Seiscomp::DataModel::StrongMotion::EventRecordReference((Seiscomp::DataModel::StrongMotion::EventRecordReference const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EventRecordReference__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)new Seiscomp::DataModel::StrongMotion::EventRecordReference((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EventRecordReference__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg3 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg4 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg5 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg6 = 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg7 = 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg8 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp3 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp4 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp5 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp6 ;
  Seiscomp::Core::Optional< double >::Impl tmp7 ;
  Seiscomp::Core::Optional< double >::Impl tmp8 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_EventRecordReference" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    if ( swig_obj[2] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[2], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp3 = *value;
    }
    
    arg3 = &tmp3;
  }
  {
    if ( swig_obj[3] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[3], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp4 = *value;
    }
    
    arg4 = &tmp4;
  }
  {
    if ( swig_obj[4] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[4], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp5 = *value;
    }
    
    arg5 = &tmp5;
  }
  {
    if ( swig_obj[5] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[5], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp6 = *value;
    }
    
    arg6 = &tmp6;
  }
  {
    if ( swig_obj[6] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[6]) &&
        !PyInt_Check(swig_obj[6]) &&
        !PyLong_Check(swig_obj[6]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[6]);
      tmp7 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg7 = &tmp7;
  }
  {
    if ( swig_obj[7] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[7]) &&
        !PyInt_Check(swig_obj[7]) &&
        !PyLong_Check(swig_obj[7]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[7]);
      tmp8 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg8 = &tmp8;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)new Seiscomp::DataModel::StrongMotion::EventRecordReference((std::string const &)*arg1,(Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2,(Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg3,(Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg4,(Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg5,(Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg6,(Seiscomp::Core::Optional< double >::Impl const &)*arg7,(Seiscomp::Core::Optional< double >::Impl const &)*arg8);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EventRecordReference(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_EventRecordReference", 0, 8, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_EventRecordReference__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_EventRecordReference__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_EventRecordReference__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 8) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if ( argv[1] == Py_None )
        _v = 1;
        else {
          void* ptr = 0;
          _v = SWIG_ConvertPtr(argv[1], (void**)&ptr, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0) == -1 ? 0 : 1;
        }
      }
      if (_v) {
        {
          if ( argv[2] == Py_None )
          _v = 1;
          else {
            void* ptr = 0;
            _v = SWIG_ConvertPtr(argv[2], (void**)&ptr, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0) == -1 ? 0 : 1;
          }
        }
        if (_v) {
          {
            if ( argv[3] == Py_None )
            _v = 1;
            else {
              void* ptr = 0;
              _v = SWIG_ConvertPtr(argv[3], (void**)&ptr, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0) == -1 ? 0 : 1;
            }
          }
          if (_v) {
            {
              if ( argv[4] == Py_None )
              _v = 1;
              else {
                void* ptr = 0;
                _v = SWIG_ConvertPtr(argv[4], (void**)&ptr, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0) == -1 ? 0 : 1;
              }
            }
            if (_v) {
              {
                if ( argv[5] == Py_None )
                _v = 1;
                else {
                  void* ptr = 0;
                  _v = SWIG_ConvertPtr(argv[5], (void**)&ptr, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0) == -1 ? 0 : 1;
                }
              }
              if (_v) {
                {
                  _v = argv[6] == Py_None ||
                  PyFloat_Check(argv[6]) ||
                  PyInt_Check(argv[6]) ||
                  PyLong_Check(argv[6]) ? 1 : 0;
                }
                if (_v) {
                  {
                    _v = argv[7] == Py_None ||
                    PyFloat_Check(argv[7]) ||
                    PyInt_Check(argv[7]) ||
                    PyLong_Check(argv[7]) ? 1 : 0;
                  }
                  if (_v) {
                    return _wrap_new_EventRecordReference__SWIG_3(self, argc, argv);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_EventRecordReference'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::EventRecordReference()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::EventRecordReference(Seiscomp::DataModel::StrongMotion::EventRecordReference const &)\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::EventRecordReference(std::string const &)\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::EventRecordReference(std::string const &,Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &,Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &,Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &,Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &,Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &,Seiscomp::Core::Optional< double >::Impl const &,Seiscomp::Core::Optional< double >::Impl const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_EventRecordReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::EventRecordReference const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_EventRecordReference___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::EventRecordReference const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::EventRecordReference const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setRecordID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setRecordID", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setRecordID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_setRecordID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "EventRecordReference_setRecordID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setRecordID((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_recordID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_recordID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->recordID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setCampbellDistance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setCampbellDistance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setCampbellDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setCampbellDistance((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_campbellDistance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_campbellDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->campbellDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_campbellDistance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_campbellDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->campbellDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_campbellDistance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_campbellDistance", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_campbellDistance__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_campbellDistance__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_campbellDistance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::campbellDistance()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::campbellDistance() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setRuptureToStationAzimuth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setRuptureToStationAzimuth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setRuptureToStationAzimuth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setRuptureToStationAzimuth((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureToStationAzimuth__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ruptureToStationAzimuth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->ruptureToStationAzimuth();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureToStationAzimuth__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ruptureToStationAzimuth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->ruptureToStationAzimuth();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureToStationAzimuth(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_ruptureToStationAzimuth", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ruptureToStationAzimuth__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ruptureToStationAzimuth__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_ruptureToStationAzimuth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ruptureToStationAzimuth()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ruptureToStationAzimuth() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setRuptureAreaDistance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setRuptureAreaDistance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setRuptureAreaDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setRuptureAreaDistance((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureAreaDistance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ruptureAreaDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->ruptureAreaDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureAreaDistance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_ruptureAreaDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->ruptureAreaDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_ruptureAreaDistance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_ruptureAreaDistance", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ruptureAreaDistance__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_ruptureAreaDistance__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_ruptureAreaDistance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ruptureAreaDistance()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::ruptureAreaDistance() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setJoynerBooreDistance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setJoynerBooreDistance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setJoynerBooreDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setJoynerBooreDistance((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_JoynerBooreDistance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_JoynerBooreDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->JoynerBooreDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_JoynerBooreDistance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_JoynerBooreDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->JoynerBooreDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_JoynerBooreDistance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_JoynerBooreDistance", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_JoynerBooreDistance__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_JoynerBooreDistance__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_JoynerBooreDistance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::JoynerBooreDistance()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::JoynerBooreDistance() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setClosestFaultDistance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setClosestFaultDistance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setClosestFaultDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setClosestFaultDistance((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_closestFaultDistance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_closestFaultDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->closestFaultDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_closestFaultDistance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_closestFaultDistance" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->closestFaultDistance();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_closestFaultDistance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "EventRecordReference_closestFaultDistance", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_closestFaultDistance__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EventRecordReference_closestFaultDistance__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'EventRecordReference_closestFaultDistance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::closestFaultDistance()\n"
    "    Seiscomp::DataModel::StrongMotion::EventRecordReference::closestFaultDistance() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setPreEventLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< double >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setPreEventLength", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setPreEventLength" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setPreEventLength((Seiscomp::Core::Optional< double >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_preEventLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_preEventLength" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (double)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->preEventLength();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_setPostEventLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< double >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_setPostEventLength", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_setPostEventLength" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setPostEventLength((Seiscomp::Core::Optional< double >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_postEventLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_postEventLength" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (double)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->postEventLength();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_strongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_strongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->strongOriginDescription();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::EventRecordReference const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EventRecordReference_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg1 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "EventRecordReference_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EventRecordReference_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EventRecordReference_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EventRecordReference_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *EventRecordReference_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_FileResource_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::FileResource::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::FileResource::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)Seiscomp::DataModel::StrongMotion::FileResource::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)Seiscomp::DataModel::StrongMotion::FileResource::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)Seiscomp::DataModel::StrongMotion::FileResource::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileResource_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileResource_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileResource_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)Seiscomp::DataModel::StrongMotion::FileResource::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileResource_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileResource_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileResource_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::FileResource::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileResource__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)new Seiscomp::DataModel::StrongMotion::FileResource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileResource__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileResource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_FileResource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *)new Seiscomp::DataModel::StrongMotion::FileResource((Seiscomp::DataModel::StrongMotion::FileResource const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileResource(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileResource", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileResource__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileResource__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileResource'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::FileResource()\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::FileResource(Seiscomp::DataModel::StrongMotion::FileResource const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileResource(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileResource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::FileResource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_FileResource___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::FileResource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_FileResource_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::FileResource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_setCreationInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setCreationInfo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setCreationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::CreationInfo* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setCreationInfo((Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_creationInfo__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &(arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_creationInfo__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_creationInfo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileResource_creationInfo", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_creationInfo__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileResource_creationInfo__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileResource_creationInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::creationInfo()\n"
    "    Seiscomp::DataModel::StrongMotion::FileResource::creationInfo() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileResource_setClass(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setClass", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setClass" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_setClass" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_setClass" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setClass((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_Class(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_Class" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->Class();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_setType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setType" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setType((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_type(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_type" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->type();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_setFilename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setFilename", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setFilename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_setFilename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_setFilename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setFilename((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_filename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_filename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->filename();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_setUrl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setUrl", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setUrl" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_setUrl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_setUrl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setUrl((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_url(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_url" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->url();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_setDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FileResource_setDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_setDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileResource_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FileResource_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setDescription((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileResource_description(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FileResource *arg1 = (Seiscomp::DataModel::StrongMotion::FileResource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileResource_description" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FileResource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FileResource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FileResource const *)arg1)->description();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FileResource_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileResource_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_FilterParameter_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::FilterParameter::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::FilterParameter::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)Seiscomp::DataModel::StrongMotion::FilterParameter::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)Seiscomp::DataModel::StrongMotion::FilterParameter::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)Seiscomp::DataModel::StrongMotion::FilterParameter::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FilterParameter_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FilterParameter_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FilterParameter_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)Seiscomp::DataModel::StrongMotion::FilterParameter::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FilterParameter_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FilterParameter_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FilterParameter_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::FilterParameter::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterParameter__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)new Seiscomp::DataModel::StrongMotion::FilterParameter();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterParameter__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FilterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_FilterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FilterParameter *)new Seiscomp::DataModel::StrongMotion::FilterParameter((Seiscomp::DataModel::StrongMotion::FilterParameter const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterParameter(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FilterParameter", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FilterParameter__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FilterParameter__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FilterParameter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::FilterParameter()\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::FilterParameter(Seiscomp::DataModel::StrongMotion::FilterParameter const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FilterParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FilterParameter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::FilterParameter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_FilterParameter___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::FilterParameter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_FilterParameter_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::FilterParameter const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_setValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::RealQuantity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_setValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_setValue" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_setValue" "', argument " "2"" of type '" "Seiscomp::DataModel::RealQuantity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_setValue" "', argument " "2"" of type '" "Seiscomp::DataModel::RealQuantity const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::RealQuantity * >(argp2);
  {
    try {
      (arg1)->setValue((Seiscomp::DataModel::RealQuantity const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_value__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_value" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->value();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_value__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_value" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->value();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_value(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FilterParameter_value", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_value__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FilterParameter_value__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FilterParameter_value'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::value()\n"
    "    Seiscomp::DataModel::StrongMotion::FilterParameter::value() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FilterParameter_setName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_setName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_setName" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "FilterParameter_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setName((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_name(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_name" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->name();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_simpleFilter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_simpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->simpleFilter();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::FilterParameter const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterParameter_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::FilterParameter *arg1 = (Seiscomp::DataModel::StrongMotion::FilterParameter *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "FilterParameter_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterParameter_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::FilterParameter *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::FilterParameter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterParameter_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FilterParameter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FilterParameter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FilterParameter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_LiteratureSource_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::LiteratureSource::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::LiteratureSource::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)Seiscomp::DataModel::StrongMotion::LiteratureSource::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)Seiscomp::DataModel::StrongMotion::LiteratureSource::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)Seiscomp::DataModel::StrongMotion::LiteratureSource::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LiteratureSource_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LiteratureSource_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LiteratureSource_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LiteratureSource_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)Seiscomp::DataModel::StrongMotion::LiteratureSource::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LiteratureSource_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LiteratureSource_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LiteratureSource_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LiteratureSource_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::LiteratureSource::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LiteratureSource__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)new Seiscomp::DataModel::StrongMotion::LiteratureSource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LiteratureSource__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)new Seiscomp::DataModel::StrongMotion::LiteratureSource((Seiscomp::DataModel::StrongMotion::LiteratureSource const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LiteratureSource__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)new Seiscomp::DataModel::StrongMotion::LiteratureSource((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LiteratureSource__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg11 = 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg12 = 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg13 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  Seiscomp::Core::Optional< int >::Impl tmp6 ;
  int res7 = SWIG_OLDOBJ ;
  int res8 = SWIG_OLDOBJ ;
  int res9 = SWIG_OLDOBJ ;
  int res10 = SWIG_OLDOBJ ;
  Seiscomp::Core::Optional< int >::Impl tmp11 ;
  Seiscomp::Core::Optional< int >::Impl tmp12 ;
  Seiscomp::Core::Optional< int >::Impl tmp13 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 13) || (nobjs > 13)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LiteratureSource" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_LiteratureSource" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_LiteratureSource" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string(swig_obj[4], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_LiteratureSource" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    if ( swig_obj[5] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[5]) &&
        !PyInt_Check(swig_obj[5]) &&
        !PyLong_Check(swig_obj[5]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[5]);
      tmp6 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg6 = &tmp6;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string(swig_obj[6], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_LiteratureSource" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string(swig_obj[7], &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_LiteratureSource" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res9 = SWIG_AsPtr_std_string(swig_obj[8], &ptr);
    if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_LiteratureSource" "', argument " "9"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "9"" of type '" "std::string const &""'"); 
    }
    arg9 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res10 = SWIG_AsPtr_std_string(swig_obj[9], &ptr);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "new_LiteratureSource" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_LiteratureSource" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    arg10 = ptr;
  }
  {
    if ( swig_obj[10] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[10]) &&
        !PyInt_Check(swig_obj[10]) &&
        !PyLong_Check(swig_obj[10]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[10]);
      tmp11 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg11 = &tmp11;
  }
  {
    if ( swig_obj[11] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[11]) &&
        !PyInt_Check(swig_obj[11]) &&
        !PyLong_Check(swig_obj[11]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[11]);
      tmp12 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg12 = &tmp12;
  }
  {
    if ( swig_obj[12] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[12]) &&
        !PyInt_Check(swig_obj[12]) &&
        !PyLong_Check(swig_obj[12]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[12]);
      tmp13 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg13 = &tmp13;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *)new Seiscomp::DataModel::StrongMotion::LiteratureSource((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(Seiscomp::Core::Optional< int >::Impl const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(Seiscomp::Core::Optional< int >::Impl const &)*arg11,(Seiscomp::Core::Optional< int >::Impl const &)*arg12,(Seiscomp::Core::Optional< int >::Impl const &)*arg13);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  if (SWIG_IsNewObj(res9)) delete arg9;
  if (SWIG_IsNewObj(res10)) delete arg10;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  if (SWIG_IsNewObj(res9)) delete arg9;
  if (SWIG_IsNewObj(res10)) delete arg10;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LiteratureSource(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[14] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_LiteratureSource", 0, 13, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_LiteratureSource__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_LiteratureSource__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_LiteratureSource__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 13) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                _v = argv[5] == Py_None ||
                PyFloat_Check(argv[5]) ||
                PyInt_Check(argv[5]) ||
                PyLong_Check(argv[5]) ? 1 : 0;
              }
              if (_v) {
                int res = SWIG_AsPtr_std_string(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsPtr_std_string(argv[7], (std::string**)(0));
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_AsPtr_std_string(argv[8], (std::string**)(0));
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      int res = SWIG_AsPtr_std_string(argv[9], (std::string**)(0));
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          _v = argv[10] == Py_None ||
                          PyFloat_Check(argv[10]) ||
                          PyInt_Check(argv[10]) ||
                          PyLong_Check(argv[10]) ? 1 : 0;
                        }
                        if (_v) {
                          {
                            _v = argv[11] == Py_None ||
                            PyFloat_Check(argv[11]) ||
                            PyInt_Check(argv[11]) ||
                            PyLong_Check(argv[11]) ? 1 : 0;
                          }
                          if (_v) {
                            {
                              _v = argv[12] == Py_None ||
                              PyFloat_Check(argv[12]) ||
                              PyInt_Check(argv[12]) ||
                              PyLong_Check(argv[12]) ? 1 : 0;
                            }
                            if (_v) {
                              return _wrap_new_LiteratureSource__SWIG_3(self, argc, argv);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_LiteratureSource'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::LiteratureSource()\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::LiteratureSource(Seiscomp::DataModel::StrongMotion::LiteratureSource const &)\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::LiteratureSource(std::string const &)\n"
    "    Seiscomp::DataModel::StrongMotion::LiteratureSource::LiteratureSource(std::string const &,std::string const &,std::string const &,std::string const &,std::string const &,Seiscomp::Core::Optional< int >::Impl const &,std::string const &,std::string const &,std::string const &,std::string const &,Seiscomp::Core::Optional< int >::Impl const &,Seiscomp::Core::Optional< int >::Impl const &,Seiscomp::Core::Optional< int >::Impl const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_LiteratureSource(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LiteratureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::LiteratureSource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_LiteratureSource___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::LiteratureSource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::LiteratureSource const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setTitle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setTitle", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setTitle" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setTitle" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setTitle" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setTitle((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_title(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_title" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->title();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setFirstAuthorName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setFirstAuthorName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setFirstAuthorName" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setFirstAuthorName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setFirstAuthorName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setFirstAuthorName((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_firstAuthorName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_firstAuthorName" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->firstAuthorName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setFirstAuthorForename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setFirstAuthorForename", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setFirstAuthorForename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setFirstAuthorForename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setFirstAuthorForename" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setFirstAuthorForename((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_firstAuthorForename(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_firstAuthorForename" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->firstAuthorForename();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setSecondaryAuthors(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setSecondaryAuthors", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setSecondaryAuthors" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setSecondaryAuthors" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setSecondaryAuthors" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setSecondaryAuthors((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_secondaryAuthors(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_secondaryAuthors" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->secondaryAuthors();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setDoi(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setDoi", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setDoi" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setDoi" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setDoi" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setDoi((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_doi(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_doi" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->doi();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setYear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setYear", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setYear" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setYear((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_year(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_year" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->year();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setInTitle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setInTitle", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setInTitle" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setInTitle" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setInTitle" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setInTitle((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_inTitle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_inTitle" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->inTitle();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setEditor(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setEditor", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setEditor" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setEditor" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setEditor" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setEditor((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_editor(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_editor" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->editor();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setPlace(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setPlace", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setPlace" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setPlace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setPlace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setPlace((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_place(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_place" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->place();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setLanguage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setLanguage", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setLanguage" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LiteratureSource_setLanguage" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "LiteratureSource_setLanguage" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setLanguage((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_language(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_language" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->language();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setTome(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setTome", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setTome" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setTome((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_tome(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_tome" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->tome();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setPageFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setPageFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setPageFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setPageFrom((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_pageFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_pageFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->pageFrom();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_setPageTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "LiteratureSource_setPageTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_setPageTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setPageTo((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LiteratureSource_pageTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *arg1 = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LiteratureSource_pageTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::LiteratureSource const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::LiteratureSource * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::LiteratureSource const *)arg1)->pageTo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LiteratureSource_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LiteratureSource_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SurfaceRupture_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::SurfaceRupture::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SurfaceRupture_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SurfaceRupture_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SurfaceRupture_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SurfaceRupture_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::SurfaceRupture::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SurfaceRupture__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)new Seiscomp::DataModel::StrongMotion::SurfaceRupture();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SurfaceRupture__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SurfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_SurfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *)new Seiscomp::DataModel::StrongMotion::SurfaceRupture((Seiscomp::DataModel::StrongMotion::SurfaceRupture const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SurfaceRupture(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SurfaceRupture", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_SurfaceRupture__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SurfaceRupture__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SurfaceRupture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::SurfaceRupture()\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::SurfaceRupture(Seiscomp::DataModel::StrongMotion::SurfaceRupture const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SurfaceRupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SurfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::SurfaceRupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::SurfaceRupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::SurfaceRupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_setObserved(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_setObserved", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_setObserved" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SurfaceRupture_setObserved" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setObserved(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_observed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_observed" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->observed();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_setEvidence(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_setEvidence", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_setEvidence" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture_setEvidence" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_setEvidence" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setEvidence((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_evidence(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_evidence" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->evidence();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_setLiteratureSource(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "SurfaceRupture_setLiteratureSource", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_setLiteratureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SurfaceRupture_setLiteratureSource" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "SurfaceRupture_setLiteratureSource" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl * >(argp2);
  {
    try {
      (arg1)->setLiteratureSource((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_literatureSource__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_literatureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) &(arg1)->literatureSource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_literatureSource__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *arg1 = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SurfaceRupture_literatureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::SurfaceRupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SurfaceRupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) &((Seiscomp::DataModel::StrongMotion::SurfaceRupture const *)arg1)->literatureSource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SurfaceRupture_literatureSource(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SurfaceRupture_literatureSource", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_literatureSource__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SurfaceRupture_literatureSource__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SurfaceRupture_literatureSource'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::literatureSource()\n"
    "    Seiscomp::DataModel::StrongMotion::SurfaceRupture::literatureSource() const\n");
  return 0;
}


SWIGINTERN PyObject *SurfaceRupture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SurfaceRupture_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_PeakMotion_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::PeakMotion::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::PeakMotion::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)Seiscomp::DataModel::StrongMotion::PeakMotion::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)Seiscomp::DataModel::StrongMotion::PeakMotion::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)Seiscomp::DataModel::StrongMotion::PeakMotion::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PeakMotion_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PeakMotion_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PeakMotion_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)Seiscomp::DataModel::StrongMotion::PeakMotion::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PeakMotion_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PeakMotion_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PeakMotion_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::PeakMotion::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PeakMotion__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)new Seiscomp::DataModel::StrongMotion::PeakMotion();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PeakMotion__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PeakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_PeakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)new Seiscomp::DataModel::StrongMotion::PeakMotion((Seiscomp::DataModel::StrongMotion::PeakMotion const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PeakMotion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_PeakMotion", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PeakMotion__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PeakMotion__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_PeakMotion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::PeakMotion()\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::PeakMotion(Seiscomp::DataModel::StrongMotion::PeakMotion const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PeakMotion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PeakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::PeakMotion const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_PeakMotion___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::PeakMotion const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_PeakMotion_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::PeakMotion const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setMotion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::RealQuantity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setMotion", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_setMotion" "', argument " "2"" of type '" "Seiscomp::DataModel::RealQuantity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_setMotion" "', argument " "2"" of type '" "Seiscomp::DataModel::RealQuantity const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::RealQuantity * >(argp2);
  {
    try {
      (arg1)->setMotion((Seiscomp::DataModel::RealQuantity const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_motion__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_motion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->motion();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_motion__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_motion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->motion();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_motion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PeakMotion_motion", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_motion__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_motion__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PeakMotion_motion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::motion()\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::motion() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setType" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_setType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setType((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_type(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_type" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->type();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setPeriod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< double >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setPeriod", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setPeriod" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setPeriod((Seiscomp::Core::Optional< double >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_period(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_period" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (double)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->period();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setDamping(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< double >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setDamping", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setDamping" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setDamping((Seiscomp::Core::Optional< double >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_damping(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_damping" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (double)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->damping();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setMethod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setMethod", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setMethod" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_setMethod" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "PeakMotion_setMethod" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setMethod((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_method(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_method" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->method();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_setAtTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::TimeQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::TimeQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_setAtTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_setAtTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::TimeQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setAtTime((Seiscomp::Core::Optional< Seiscomp::DataModel::TimeQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_atTime__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::TimeQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_atTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::TimeQuantity *) &(arg1)->atTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_atTime__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::TimeQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_atTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::TimeQuantity *) &((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->atTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_atTime(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PeakMotion_atTime", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_atTime__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PeakMotion_atTime__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PeakMotion_atTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::atTime()\n"
    "    Seiscomp::DataModel::StrongMotion::PeakMotion::atTime() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PeakMotion_record(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->record();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::PeakMotion const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PeakMotion_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg1 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "PeakMotion_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PeakMotion_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PeakMotion_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PeakMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PeakMotion_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Record_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::Record::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::Record::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::Record::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Record__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_Record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)new Seiscomp::DataModel::StrongMotion::Record((Seiscomp::DataModel::StrongMotion::Record const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Record__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Record" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_Record" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)new Seiscomp::DataModel::StrongMotion::Record((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Record(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Record", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Record__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Record__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Record'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Record(Seiscomp::DataModel::StrongMotion::Record const &)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Record(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Record(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Create__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::Create();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Create__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::Create((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_Create(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_Create", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_Record_Create__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_Create__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_Create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Create()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::Create(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_Find(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)Seiscomp::DataModel::StrongMotion::Record::Find((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::Record const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Record___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::Record const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Record_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::Record const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_setCreationInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setCreationInfo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setCreationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::CreationInfo* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setCreationInfo((Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_creationInfo__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &(arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_creationInfo__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_creationInfo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_creationInfo", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_creationInfo__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_creationInfo__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_creationInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::creationInfo()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::creationInfo() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_setGainUnit(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setGainUnit", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setGainUnit" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_setGainUnit" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_setGainUnit" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setGainUnit((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_gainUnit(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_gainUnit" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->gainUnit();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_setDuration(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< double >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< double >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setDuration", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setDuration" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'float' is expected");
        SWIG_fail;
      }
      double v = PyFloat_AsDouble(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<double>::Impl(static_cast<double>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setDuration((Seiscomp::Core::Optional< double >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_duration(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_duration" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (double)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->duration();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_setStartTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::TimeQuantity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setStartTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setStartTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_setStartTime" "', argument " "2"" of type '" "Seiscomp::DataModel::TimeQuantity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_setStartTime" "', argument " "2"" of type '" "Seiscomp::DataModel::TimeQuantity const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::TimeQuantity * >(argp2);
  {
    try {
      (arg1)->setStartTime((Seiscomp::DataModel::TimeQuantity const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_startTime__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::TimeQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_startTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::TimeQuantity *) &(arg1)->startTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_startTime__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::TimeQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_startTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::TimeQuantity *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->startTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__TimeQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_startTime(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_startTime", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_startTime__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_startTime__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_startTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::startTime()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::startTime() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_setOwner(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setOwner", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setOwner" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_setOwner" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_setOwner" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl * >(argp2);
  {
    try {
      (arg1)->setOwner((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_owner__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_owner" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *) &(arg1)->owner();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_owner__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Contact *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_owner" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Contact *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->owner();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Contact, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_owner(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_owner", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_owner__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_owner__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_owner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::owner()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::owner() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_setResampleRateNumerator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setResampleRateNumerator", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setResampleRateNumerator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setResampleRateNumerator((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_resampleRateNumerator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_resampleRateNumerator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->resampleRateNumerator();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_setResampleRateDenominator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setResampleRateDenominator", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setResampleRateDenominator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setResampleRateDenominator((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_resampleRateDenominator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_resampleRateDenominator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->resampleRateDenominator();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_setWaveformID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::WaveformStreamID *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setWaveformID", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setWaveformID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__WaveformStreamID,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_setWaveformID" "', argument " "2"" of type '" "Seiscomp::DataModel::WaveformStreamID const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_setWaveformID" "', argument " "2"" of type '" "Seiscomp::DataModel::WaveformStreamID const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::WaveformStreamID * >(argp2);
  {
    try {
      (arg1)->setWaveformID((Seiscomp::DataModel::WaveformStreamID const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformID__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::WaveformStreamID *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_waveformID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::WaveformStreamID *) &(arg1)->waveformID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__WaveformStreamID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformID__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::WaveformStreamID *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_waveformID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::WaveformStreamID *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->waveformID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__WaveformStreamID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformID(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_waveformID", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_waveformID__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_waveformID__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_waveformID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::waveformID()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::waveformID() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_setWaveformFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_setWaveformFile", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_setWaveformFile" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_setWaveformFile" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_setWaveformFile" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl * >(argp2);
  {
    try {
      (arg1)->setWaveformFile((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformFile__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_waveformFile" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *) &(arg1)->waveformFile();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformFile__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::FileResource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_waveformFile" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::FileResource *) &((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->waveformFile();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__FileResource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_waveformFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_waveformFile", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_waveformFile__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Record_waveformFile__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_waveformFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::waveformFile()\n"
    "    Seiscomp::DataModel::StrongMotion::Record::waveformFile() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_add__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_add__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_add(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_add", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_add__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_add__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::add(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::add(Seiscomp::DataModel::StrongMotion::PeakMotion *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_remove__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_remove__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_remove(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_remove", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_remove__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_remove__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_remove'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::remove(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::remove(Seiscomp::DataModel::StrongMotion::PeakMotion *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_removeSimpleFilterChainMember__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_removeSimpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Record_removeSimpleFilterChainMember" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeSimpleFilterChainMember(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_removeSimpleFilterChainMember__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_removeSimpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_removeSimpleFilterChainMember" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_removeSimpleFilterChainMember" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp2);
  {
    try {
      result = (bool)(arg1)->removeSimpleFilterChainMember((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_removeSimpleFilterChainMember(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_removeSimpleFilterChainMember", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_removeSimpleFilterChainMember__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Record_removeSimpleFilterChainMember__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_removeSimpleFilterChainMember'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::removeSimpleFilterChainMember(size_t)\n"
    "    Seiscomp::DataModel::StrongMotion::Record::removeSimpleFilterChainMember(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_removePeakMotion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_removePeakMotion", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_removePeakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Record_removePeakMotion" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removePeakMotion(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_simpleFilterChainMemberCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_simpleFilterChainMemberCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->simpleFilterChainMemberCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_peakMotionCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_peakMotionCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->peakMotionCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_simpleFilterChainMember__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_simpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Record_simpleFilterChainMember" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->simpleFilterChainMember(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_simpleFilterChainMember__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *result = 0 ;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_simpleFilterChainMember" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_simpleFilterChainMember" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Record_simpleFilterChainMember" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex * >(argp2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->simpleFilterChainMember((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_simpleFilterChainMember(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Record_simpleFilterChainMember", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Record_simpleFilterChainMember__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Record_simpleFilterChainMember__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Record_simpleFilterChainMember'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Record::simpleFilterChainMember(size_t) const\n"
    "    Seiscomp::DataModel::StrongMotion::Record::simpleFilterChainMember(Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Record_peakMotion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_peakMotion", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_peakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Record_peakMotion" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->peakMotion(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_findPeakMotion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *arg2 = (Seiscomp::DataModel::StrongMotion::PeakMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::PeakMotion *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_findPeakMotion", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_findPeakMotion" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_findPeakMotion" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::PeakMotion *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::PeakMotion * >(argp2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::PeakMotion *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->findPeakMotion(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_strongMotionParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_strongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->strongMotionParameters();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::Record const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_updateChild(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_updateChild", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_updateChild" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_updateChild" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->updateChild(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Record_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Record *arg1 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Record_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Record_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Record_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Record_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Record_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Rupture_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::Rupture::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::Rupture::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::Rupture::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rupture__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Rupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_Rupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)new Seiscomp::DataModel::StrongMotion::Rupture((Seiscomp::DataModel::StrongMotion::Rupture const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rupture__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Rupture" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_Rupture" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)new Seiscomp::DataModel::StrongMotion::Rupture((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rupture(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Rupture", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Rupture__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Rupture__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Rupture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Rupture(Seiscomp::DataModel::StrongMotion::Rupture const &)\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Rupture(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Rupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Rupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Create__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::Create();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Create__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::Create((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_Create(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_Create", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_Rupture_Create__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_Create__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_Create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Create()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::Create(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_Find(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)Seiscomp::DataModel::StrongMotion::Rupture::Find((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::Rupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rupture___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::Rupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rupture_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::Rupture const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_setWidth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setWidth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setWidth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setWidth((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_width__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_width" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->width();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_width__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_width" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->width();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_width(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_width", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_width__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_width__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_width'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::width()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::width() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setDisplacement(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setDisplacement", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setDisplacement" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setDisplacement((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_displacement__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_displacement" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->displacement();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_displacement__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_displacement" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->displacement();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_displacement(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_displacement", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_displacement__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_displacement__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_displacement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::displacement()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::displacement() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setRiseTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setRiseTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setRiseTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setRiseTime((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_riseTime__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_riseTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->riseTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_riseTime__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_riseTime" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->riseTime();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_riseTime(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_riseTime", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_riseTime__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_riseTime__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_riseTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::riseTime()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::riseTime() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setVtToVs(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setVtToVs", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setVtToVs" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setVtToVs((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_vtToVs__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_vtToVs" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->vtToVs();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_vtToVs__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_vtToVs" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->vtToVs();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_vtToVs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_vtToVs", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_vtToVs__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_vtToVs__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_vtToVs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::vtToVs()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::vtToVs() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setShallowAsperityDepth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setShallowAsperityDepth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setShallowAsperityDepth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setShallowAsperityDepth((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_shallowAsperityDepth__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_shallowAsperityDepth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->shallowAsperityDepth();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_shallowAsperityDepth__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_shallowAsperityDepth" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->shallowAsperityDepth();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_shallowAsperityDepth(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_shallowAsperityDepth", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_shallowAsperityDepth__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_shallowAsperityDepth__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_shallowAsperityDepth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::shallowAsperityDepth()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::shallowAsperityDepth() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setShallowAsperity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< bool >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< bool >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setShallowAsperity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setShallowAsperity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyBool_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'bool' is expected");
        SWIG_fail;
      }
      int v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<bool>::Impl(static_cast<bool>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setShallowAsperity((Seiscomp::Core::Optional< bool >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_shallowAsperity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_shallowAsperity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->shallowAsperity();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_setLiteratureSource(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setLiteratureSource", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setLiteratureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setLiteratureSource" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setLiteratureSource" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl * >(argp2);
  {
    try {
      (arg1)->setLiteratureSource((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_literatureSource__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_literatureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) &(arg1)->literatureSource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_literatureSource__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::LiteratureSource *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_literatureSource" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::LiteratureSource *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->literatureSource();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_literatureSource(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_literatureSource", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_literatureSource__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_literatureSource__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_literatureSource'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::literatureSource()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::literatureSource() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setSlipVelocity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setSlipVelocity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setSlipVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setSlipVelocity((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_slipVelocity__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_slipVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->slipVelocity();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_slipVelocity__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_slipVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->slipVelocity();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_slipVelocity(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_slipVelocity", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_slipVelocity__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_slipVelocity__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_slipVelocity'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::slipVelocity()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::slipVelocity() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setStrike(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setStrike", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setStrike" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setStrike((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_strike__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_strike" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->strike();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_strike__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_strike" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->strike();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_strike(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_strike", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_strike__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_strike__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_strike'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::strike()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::strike() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setLength", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setLength" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setLength((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_length__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_length" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->length();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_length__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_length" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->length();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_length(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_length", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_length__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_length__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_length'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::length()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::length() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setArea(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setArea", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setArea" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setArea((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_area__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_area" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->area();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_area__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_area" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->area();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_area(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_area", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_area__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_area__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_area'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::area()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::area() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setRuptureVelocity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setRuptureVelocity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setRuptureVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setRuptureVelocity((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ruptureVelocity__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_ruptureVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->ruptureVelocity();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ruptureVelocity__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_ruptureVelocity" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->ruptureVelocity();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ruptureVelocity(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_ruptureVelocity", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_ruptureVelocity__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_ruptureVelocity__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_ruptureVelocity'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::ruptureVelocity()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::ruptureVelocity() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setStressdrop(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setStressdrop", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setStressdrop" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setStressdrop((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_stressdrop__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_stressdrop" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->stressdrop();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_stressdrop__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_stressdrop" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->stressdrop();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_stressdrop(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_stressdrop", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_stressdrop__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_stressdrop__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_stressdrop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::stressdrop()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::stressdrop() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setMomentReleaseTop5km(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setMomentReleaseTop5km", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setMomentReleaseTop5km" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::RealQuantity* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setMomentReleaseTop5km((Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_momentReleaseTop5km__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_momentReleaseTop5km" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &(arg1)->momentReleaseTop5km();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_momentReleaseTop5km__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::RealQuantity *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_momentReleaseTop5km" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::RealQuantity *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->momentReleaseTop5km();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__RealQuantity, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_momentReleaseTop5km(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_momentReleaseTop5km", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_momentReleaseTop5km__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_momentReleaseTop5km__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_momentReleaseTop5km'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::momentReleaseTop5km()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::momentReleaseTop5km() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setFwHwIndicator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setFwHwIndicator", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setFwHwIndicator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setFwHwIndicator" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setFwHwIndicator" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl * >(argp2);
  {
    try {
      (arg1)->setFwHwIndicator((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_fwHwIndicator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< Seiscomp::Core::Enum< enum Seiscomp::DataModel::StrongMotion::EFwHwIndicator,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorQuantity,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames > > result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_fwHwIndicator" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->fwHwIndicator();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Seiscomp::DataModel::StrongMotion::FwHwIndicator(result)), SWIGTYPE_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_setRuptureGeometryWKT(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setRuptureGeometryWKT", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setRuptureGeometryWKT" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setRuptureGeometryWKT" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setRuptureGeometryWKT" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setRuptureGeometryWKT((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_ruptureGeometryWKT(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_ruptureGeometryWKT" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->ruptureGeometryWKT();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_setFaultID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setFaultID", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setFaultID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setFaultID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setFaultID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setFaultID((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_faultID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_faultID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->faultID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_setSurfaceRupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setSurfaceRupture", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setSurfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setSurfaceRupture" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setSurfaceRupture" "', argument " "2"" of type '" "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl * >(argp2);
  {
    try {
      (arg1)->setSurfaceRupture((Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_surfaceRupture__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_surfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) &(arg1)->surfaceRupture();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_surfaceRupture__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::SurfaceRupture *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_surfaceRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SurfaceRupture *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->surfaceRupture();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_surfaceRupture(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rupture_surfaceRupture", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_surfaceRupture__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rupture_surfaceRupture__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rupture_surfaceRupture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::surfaceRupture()\n"
    "    Seiscomp::DataModel::StrongMotion::Rupture::surfaceRupture() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rupture_setCentroidReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_setCentroidReference", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_setCentroidReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_setCentroidReference" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "Rupture_setCentroidReference" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setCentroidReference((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_centroidReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_centroidReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->centroidReference();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_strongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_strongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->strongOriginDescription();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::Rupture const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_updateChild(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_updateChild", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_updateChild" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_updateChild" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->updateChild(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rupture_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::Rupture *arg1 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "Rupture_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rupture_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rupture_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Rupture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Rupture_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_StrongOriginDescription_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::StrongOriginDescription::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongOriginDescription__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_StrongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)new Seiscomp::DataModel::StrongMotion::StrongOriginDescription((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongOriginDescription__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrongOriginDescription" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_StrongOriginDescription" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)new Seiscomp::DataModel::StrongMotion::StrongOriginDescription((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongOriginDescription(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StrongOriginDescription", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StrongOriginDescription__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StrongOriginDescription__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StrongOriginDescription'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::StrongOriginDescription(Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::StrongOriginDescription(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StrongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StrongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Create__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Create();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Create__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_Create" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Create((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Create(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_Create", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_StrongOriginDescription_Create__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_Create__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_Create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Create()\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Create(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_Find(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_Find" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)Seiscomp::DataModel::StrongMotion::StrongOriginDescription::Find((std::string const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_setOriginID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_setOriginID", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_setOriginID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_setOriginID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_setOriginID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setOriginID((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_originID(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_originID" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (std::string *) &((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->originID();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_setWaveformCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::Core::Optional< int >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< int >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_setWaveformCount", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_setWaveformCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      if ( !PyFloat_Check(swig_obj[1]) &&
        !PyInt_Check(swig_obj[1]) &&
        !PyLong_Check(swig_obj[1]) ) {
        SWIG_exception(SWIG_TypeError, "a 'integer' is expected");
        SWIG_fail;
      }
      long v = PyInt_AsLong(swig_obj[1]);
      tmp2 = Seiscomp::Core::Optional<int>::Impl(static_cast<int>(v));
    }
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setWaveformCount((Seiscomp::Core::Optional< int >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_waveformCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_waveformCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (int)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->waveformCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_setCreationInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl tmp2 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_setCreationInfo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_setCreationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    if ( swig_obj[1] != Py_None ) {
      Seiscomp::DataModel::CreationInfo* value;
      if ( SWIG_ConvertPtr(swig_obj[1], (void **) &value, SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, SWIG_POINTER_EXCEPTION | 0) == -1 ) {
        SWIG_fail;
      }
      tmp2 = *value;
    }
    
    arg2 = &tmp2;
  }
  {
    try {
      (arg1)->setCreationInfo((Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_creationInfo__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &(arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_creationInfo__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::CreationInfo *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_creationInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::CreationInfo *) &((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->creationInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__CreationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_creationInfo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_creationInfo", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_creationInfo__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongOriginDescription_creationInfo__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_creationInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::creationInfo()\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::creationInfo() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_add__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_add__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *arg2 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_add(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_add", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongOriginDescription_add__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongOriginDescription_add__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::add(Seiscomp::DataModel::StrongMotion::EventRecordReference *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::add(Seiscomp::DataModel::StrongMotion::Rupture *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_remove__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_remove__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::Rupture *arg2 = (Seiscomp::DataModel::StrongMotion::Rupture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Rupture *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Rupture * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_remove(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongOriginDescription_remove", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongOriginDescription_remove__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongOriginDescription_remove__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongOriginDescription_remove'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::remove(Seiscomp::DataModel::StrongMotion::EventRecordReference *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongOriginDescription::remove(Seiscomp::DataModel::StrongMotion::Rupture *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_removeEventRecordReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_removeEventRecordReference", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_removeEventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongOriginDescription_removeEventRecordReference" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeEventRecordReference(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_removeRupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_removeRupture", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_removeRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongOriginDescription_removeRupture" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeRupture(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_eventRecordReferenceCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_eventRecordReferenceCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->eventRecordReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_ruptureCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_ruptureCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->ruptureCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_eventRecordReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_eventRecordReference", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_eventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongOriginDescription_eventRecordReference" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->eventRecordReference(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_rupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_rupture", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_rupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongOriginDescription_rupture" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->rupture(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_findEventRecordReference(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *arg2 = (Seiscomp::DataModel::StrongMotion::EventRecordReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::EventRecordReference *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_findEventRecordReference", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_findEventRecordReference" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_findEventRecordReference" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::EventRecordReference *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::EventRecordReference * >(argp2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::EventRecordReference *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->findEventRecordReference(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_findRupture(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::Rupture *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_findRupture", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_findRupture" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_findRupture" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongOriginDescription_findRupture" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Rupture *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->findRupture((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Rupture, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_strongMotionParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_strongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->strongMotionParameters();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::StrongOriginDescription const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_updateChild(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_updateChild", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_updateChild" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_updateChild" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->updateChild(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongOriginDescription_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg1 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongOriginDescription_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongOriginDescription_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongOriginDescription_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StrongOriginDescription_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StrongOriginDescription_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_StrongMotionParameters_ClassName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_ClassName", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (char *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::ClassName();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_TypeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_TypeInfo", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::RTTI *) &Seiscomp::DataModel::StrongMotion::StrongMotionParameters::TypeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_className(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_className" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (char *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->className();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_typeInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::RTTI *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_typeInfo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (Seiscomp::Core::RTTI *) &((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->typeInfo();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__RTTI, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_Cast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::Cast(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_ConstCast__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::Core::BaseObject *arg1 = (Seiscomp::Core::BaseObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__Core__BaseObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObject const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::Core::BaseObject * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::ConstCast((Seiscomp::Core::BaseObject const *)arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_Cast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_Cast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectPtr""'");
    } else {
      Seiscomp::Core::BaseObjectPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::Cast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_Cast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongMotionParameters_Cast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongMotionParameters_Cast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongMotionParameters_Cast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongMotionParameters_Cast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::Cast(Seiscomp::Core::BaseObject *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::Cast(Seiscomp::Core::BaseObjectPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_ConstCast__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_ConstCast" "', argument " "1"" of type '" "Seiscomp::Core::BaseObjectCPtr""'");
    } else {
      Seiscomp::Core::BaseObjectCPtr * temp = reinterpret_cast< Seiscomp::Core::BaseObjectCPtr * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::ConstCast(SWIG_STD_MOVE(arg1));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_ConstCast(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongMotionParameters_ConstCast", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__Core__BaseObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongMotionParameters_ConstCast__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StrongMotionParameters_ConstCast__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongMotionParameters_ConstCast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::ConstCast(Seiscomp::Core::BaseObject const *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::ConstCast(Seiscomp::Core::BaseObjectCPtr)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_serialize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::Core::BaseObject::Archive *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_serialize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_serialize" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_serialize" "', argument " "2"" of type '" "Seiscomp::Core::BaseObject::Archive &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::Core::BaseObject::Archive * >(argp2);
  {
    try {
      (arg1)->serialize(*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_Meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_Meta", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::Core::MetaObject *)Seiscomp::DataModel::StrongMotion::StrongMotionParameters::Meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_meta(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::Core::MetaObject *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_meta" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (Seiscomp::Core::MetaObject *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->meta();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__Core__MetaObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongMotionParameters__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)new Seiscomp::DataModel::StrongMotion::StrongMotionParameters();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongMotionParameters__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "new_StrongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)new Seiscomp::DataModel::StrongMotion::StrongMotionParameters((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &)*arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrongMotionParameters(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StrongMotionParameters", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_StrongMotionParameters__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StrongMotionParameters__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StrongMotionParameters'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::StrongMotionParameters()\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::StrongMotionParameters(Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StrongMotionParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StrongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters___eq__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters___eq__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->operator ==((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters___ne__" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters___ne__" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->operator !=((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_TypeError)) {
    return NULL;
  }
  PyErr_Clear();
  SWIG_Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_equal" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_equal" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (bool)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->equal((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_add__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_add__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_add__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_add" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_add" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (bool)(arg1)->add(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_add(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongMotionParameters_add", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_add__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_add__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_add__SWIG_2(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongMotionParameters_add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::add(Seiscomp::DataModel::StrongMotion::SimpleFilter *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::add(Seiscomp::DataModel::StrongMotion::Record *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::add(Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_remove__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_remove__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_remove__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_remove" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_remove" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (bool)(arg1)->remove(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_remove(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongMotionParameters_remove", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_remove__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_remove__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionParameters_remove__SWIG_2(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongMotionParameters_remove'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::remove(Seiscomp::DataModel::StrongMotion::SimpleFilter *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::remove(Seiscomp::DataModel::StrongMotion::Record *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionParameters::remove(Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_removeSimpleFilter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_removeSimpleFilter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_removeSimpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_removeSimpleFilter" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeSimpleFilter(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_removeRecord(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_removeRecord", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_removeRecord" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_removeRecord" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeRecord(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_removeStrongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_removeStrongOriginDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_removeStrongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_removeStrongOriginDescription" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (bool)(arg1)->removeStrongOriginDescription(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_simpleFilterCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_simpleFilterCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->simpleFilterCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_recordCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_recordCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->recordCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_strongOriginDescriptionCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_strongOriginDescriptionCount" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->strongOriginDescriptionCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_simpleFilter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_simpleFilter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_simpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_simpleFilter" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->simpleFilter(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_record(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_record", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_record" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_record" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->record(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_strongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_strongOriginDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_strongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StrongMotionParameters_strongOriginDescription" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->strongOriginDescription(SWIG_STD_MOVE(arg2));
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_findSimpleFilter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_findSimpleFilter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_findSimpleFilter" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_findSimpleFilter" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_findSimpleFilter" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::SimpleFilter *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->findSimpleFilter((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_findRecord(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::Record *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_findRecord", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_findRecord" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_findRecord" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_findRecord" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::Record *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->findRecord((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_findStrongOriginDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *result = 0 ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_findStrongOriginDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_findStrongOriginDescription" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_findStrongOriginDescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_NullReferenceError, "invalid null reference " "in method '" "StrongMotionParameters_findStrongOriginDescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->findStrongOriginDescription((std::string const &)*arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_assign" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_assign" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->assign(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_attachTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_attachTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_attachTo" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_attachTo" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->attachTo(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_detachFrom(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::PublicObject *arg2 = (Seiscomp::DataModel::PublicObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_detachFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_detachFrom" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__PublicObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_detachFrom" "', argument " "2"" of type '" "Seiscomp::DataModel::PublicObject *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::PublicObject * >(argp2);
  {
    try {
      result = (bool)(arg1)->detachFrom(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_detach(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_detach" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (bool)(arg1)->detach();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_clone(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::Object *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_clone" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::Object *)((Seiscomp::DataModel::StrongMotion::StrongMotionParameters const *)arg1)->clone();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__Object, SWIG_POINTER_OWN |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_updateChild(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::Object *arg2 = (Seiscomp::DataModel::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_updateChild", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_updateChild" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_updateChild" "', argument " "2"" of type '" "Seiscomp::DataModel::Object *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Object * >(argp2);
  {
    try {
      result = (bool)(arg1)->updateChild(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionParameters_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  Seiscomp::DataModel::Visitor *arg2 = (Seiscomp::DataModel::Visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionParameters_accept", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionParameters_accept" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__Visitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionParameters_accept" "', argument " "2"" of type '" "Seiscomp::DataModel::Visitor *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::Visitor * >(argp2);
  {
    try {
      (arg1)->accept(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StrongMotionParameters_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StrongMotionParameters_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StrongMotionReader(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::IO::DatabaseInterface *arg1 = (Seiscomp::IO::DatabaseInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__IO__DatabaseInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrongMotionReader" "', argument " "1"" of type '" "Seiscomp::IO::DatabaseInterface *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::IO::DatabaseInterface * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *)new Seiscomp::DataModel::StrongMotion::StrongMotionReader(arg1);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, SWIG_POINTER_NEW |  0 );
  if (result) result->incrementReferenceCount();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StrongMotionReader(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StrongMotionReader" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  {
    try {
      if (arg1) arg1->decrementReferenceCount();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadStrongMotionParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *result = 0 ;
  
  (void)self;
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadStrongMotionParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  {
    try {
      result = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)(arg1)->loadStrongMotionParameters();
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_load__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_load" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_load" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (int)(arg1)->load(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadSimpleFilters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadSimpleFilters", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadSimpleFilters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadSimpleFilters" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (int)(arg1)->loadSimpleFilters(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadRecords(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadRecords", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadRecords" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadRecords" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (int)(arg1)->loadRecords(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadStrongOriginDescriptions(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongMotionParameters *arg2 = (Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadStrongOriginDescriptions", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadStrongOriginDescriptions" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadStrongOriginDescriptions" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionParameters * >(argp2);
  {
    try {
      result = (int)(arg1)->loadStrongOriginDescriptions(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_load__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_load" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_load" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (int)(arg1)->load(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadFilterParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::SimpleFilter *arg2 = (Seiscomp::DataModel::StrongMotion::SimpleFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadFilterParameters", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadFilterParameters" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadFilterParameters" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::SimpleFilter *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::SimpleFilter * >(argp2);
  {
    try {
      result = (int)(arg1)->loadFilterParameters(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_load__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_load" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_load" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (int)(arg1)->load(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadSimpleFilterChainMembers(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadSimpleFilterChainMembers", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadSimpleFilterChainMembers" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadSimpleFilterChainMembers" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (int)(arg1)->loadSimpleFilterChainMembers(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadPeakMotions(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::Record *arg2 = (Seiscomp::DataModel::StrongMotion::Record *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadPeakMotions", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadPeakMotions" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadPeakMotions" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::Record *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::Record * >(argp2);
  {
    try {
      result = (int)(arg1)->loadPeakMotions(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_load__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int result;
  
  (void)self;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_load" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_load" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (int)(arg1)->load(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_load(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StrongMotionReader_load", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionReader_load__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionReader_load__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__Record, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionReader_load__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StrongMotionReader_load__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StrongMotionReader_load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionReader::load(Seiscomp::DataModel::StrongMotion::StrongMotionParameters *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionReader::load(Seiscomp::DataModel::StrongMotion::SimpleFilter *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionReader::load(Seiscomp::DataModel::StrongMotion::Record *)\n"
    "    Seiscomp::DataModel::StrongMotion::StrongMotionReader::load(Seiscomp::DataModel::StrongMotion::StrongOriginDescription *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadEventRecordReferences(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadEventRecordReferences", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadEventRecordReferences" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadEventRecordReferences" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (int)(arg1)->loadEventRecordReferences(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrongMotionReader_loadRuptures(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  Seiscomp::DataModel::StrongMotion::StrongMotionReader *arg1 = (Seiscomp::DataModel::StrongMotion::StrongMotionReader *) 0 ;
  Seiscomp::DataModel::StrongMotion::StrongOriginDescription *arg2 = (Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  (void)self;
  if (!SWIG_Python_UnpackTuple(args, "StrongMotionReader_loadRuptures", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrongMotionReader_loadRuptures" "', argument " "1"" of type '" "Seiscomp::DataModel::StrongMotion::StrongMotionReader *""'"); 
  }
  arg1 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongMotionReader * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrongMotionReader_loadRuptures" "', argument " "2"" of type '" "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *""'"); 
  }
  arg2 = reinterpret_cast< Seiscomp::DataModel::StrongMotion::StrongOriginDescription * >(argp2);
  {
    try {
      result = (int)(arg1)->loadRuptures(arg2);
    }
    catch ( const Swig::DirectorException &e ) {
      SWIG_fail;
    }
    catch ( const Seiscomp::Core::ValueException &e ) {
      SWIG_exception(SWIG_ValueError, e.what());
    }
    catch ( const std::exception &e ) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch ( ... ) {
      SWIG_exception(SWIG_UnknownError, "C++ anonymous exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StrongMotionReader_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj = NULL;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StrongMotionReader_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "new_EFwHwIndicatorNames", _wrap_new_EFwHwIndicatorNames, METH_NOARGS, "new_EFwHwIndicatorNames() -> EFwHwIndicatorNames"},
	 { "EFwHwIndicatorNames_name", _wrap_EFwHwIndicatorNames_name, METH_O, "EFwHwIndicatorNames_name(int i) -> char const *"},
	 { "delete_EFwHwIndicatorNames", _wrap_delete_EFwHwIndicatorNames, METH_O, "delete_EFwHwIndicatorNames(EFwHwIndicatorNames self)"},
	 { "EFwHwIndicatorNames_swigregister", EFwHwIndicatorNames_swigregister, METH_O, NULL},
	 { "EFwHwIndicatorNames_swiginit", EFwHwIndicatorNames_swiginit, METH_VARARGS, NULL},
	 { "new_SimpleFilterChainMemberIndex", _wrap_new_SimpleFilterChainMemberIndex, METH_VARARGS, "\n"
		"SimpleFilterChainMemberIndex()\n"
		"SimpleFilterChainMemberIndex(int sequenceNo)\n"
		"new_SimpleFilterChainMemberIndex(SimpleFilterChainMemberIndex arg1) -> SimpleFilterChainMemberIndex\n"
		""},
	 { "SimpleFilterChainMemberIndex___eq__", _wrap_SimpleFilterChainMemberIndex___eq__, METH_VARARGS, "SimpleFilterChainMemberIndex___eq__(SimpleFilterChainMemberIndex self, SimpleFilterChainMemberIndex arg2) -> bool"},
	 { "SimpleFilterChainMemberIndex___ne__", _wrap_SimpleFilterChainMemberIndex___ne__, METH_VARARGS, "SimpleFilterChainMemberIndex___ne__(SimpleFilterChainMemberIndex self, SimpleFilterChainMemberIndex arg2) -> bool"},
	 { "SimpleFilterChainMemberIndex_sequenceNo_set", _wrap_SimpleFilterChainMemberIndex_sequenceNo_set, METH_VARARGS, "SimpleFilterChainMemberIndex_sequenceNo_set(SimpleFilterChainMemberIndex self, int sequenceNo)"},
	 { "SimpleFilterChainMemberIndex_sequenceNo_get", _wrap_SimpleFilterChainMemberIndex_sequenceNo_get, METH_O, "SimpleFilterChainMemberIndex_sequenceNo_get(SimpleFilterChainMemberIndex self) -> int"},
	 { "delete_SimpleFilterChainMemberIndex", _wrap_delete_SimpleFilterChainMemberIndex, METH_O, "delete_SimpleFilterChainMemberIndex(SimpleFilterChainMemberIndex self)"},
	 { "SimpleFilterChainMemberIndex_swigregister", SimpleFilterChainMemberIndex_swigregister, METH_O, NULL},
	 { "SimpleFilterChainMemberIndex_swiginit", SimpleFilterChainMemberIndex_swiginit, METH_VARARGS, NULL},
	 { "SimpleFilterChainMember_ClassName", _wrap_SimpleFilterChainMember_ClassName, METH_NOARGS, "SimpleFilterChainMember_ClassName() -> char const *"},
	 { "SimpleFilterChainMember_TypeInfo", _wrap_SimpleFilterChainMember_TypeInfo, METH_NOARGS, "SimpleFilterChainMember_TypeInfo() -> RTTI"},
	 { "SimpleFilterChainMember_className", _wrap_SimpleFilterChainMember_className, METH_O, "SimpleFilterChainMember_className(SimpleFilterChainMember self) -> char const *"},
	 { "SimpleFilterChainMember_typeInfo", _wrap_SimpleFilterChainMember_typeInfo, METH_O, "SimpleFilterChainMember_typeInfo(SimpleFilterChainMember self) -> RTTI"},
	 { "SimpleFilterChainMember_Cast", _wrap_SimpleFilterChainMember_Cast, METH_VARARGS, "\n"
		"SimpleFilterChainMember_Cast(BaseObject o) -> SimpleFilterChainMember\n"
		"SimpleFilterChainMember_Cast(Seiscomp::Core::BaseObjectPtr o) -> SimpleFilterChainMember\n"
		""},
	 { "SimpleFilterChainMember_ConstCast", _wrap_SimpleFilterChainMember_ConstCast, METH_VARARGS, "\n"
		"SimpleFilterChainMember_ConstCast(BaseObject o) -> SimpleFilterChainMember\n"
		"SimpleFilterChainMember_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> SimpleFilterChainMember\n"
		""},
	 { "SimpleFilterChainMember_serialize", _wrap_SimpleFilterChainMember_serialize, METH_VARARGS, "SimpleFilterChainMember_serialize(SimpleFilterChainMember self, GenericArchive ar)"},
	 { "SimpleFilterChainMember_Meta", _wrap_SimpleFilterChainMember_Meta, METH_NOARGS, "SimpleFilterChainMember_Meta() -> MetaObject"},
	 { "SimpleFilterChainMember_meta", _wrap_SimpleFilterChainMember_meta, METH_O, "SimpleFilterChainMember_meta(SimpleFilterChainMember self) -> MetaObject"},
	 { "new_SimpleFilterChainMember", _wrap_new_SimpleFilterChainMember, METH_VARARGS, "\n"
		"SimpleFilterChainMember()\n"
		"new_SimpleFilterChainMember(SimpleFilterChainMember other) -> SimpleFilterChainMember\n"
		""},
	 { "delete_SimpleFilterChainMember", _wrap_delete_SimpleFilterChainMember, METH_O, "delete_SimpleFilterChainMember(SimpleFilterChainMember self)"},
	 { "SimpleFilterChainMember___eq__", _wrap_SimpleFilterChainMember___eq__, METH_VARARGS, "SimpleFilterChainMember___eq__(SimpleFilterChainMember self, SimpleFilterChainMember other) -> bool"},
	 { "SimpleFilterChainMember___ne__", _wrap_SimpleFilterChainMember___ne__, METH_VARARGS, "SimpleFilterChainMember___ne__(SimpleFilterChainMember self, SimpleFilterChainMember other) -> bool"},
	 { "SimpleFilterChainMember_equal", _wrap_SimpleFilterChainMember_equal, METH_VARARGS, "SimpleFilterChainMember_equal(SimpleFilterChainMember self, SimpleFilterChainMember other) -> bool"},
	 { "SimpleFilterChainMember_setSequenceNo", _wrap_SimpleFilterChainMember_setSequenceNo, METH_VARARGS, "SimpleFilterChainMember_setSequenceNo(SimpleFilterChainMember self, int sequenceNo)"},
	 { "SimpleFilterChainMember_sequenceNo", _wrap_SimpleFilterChainMember_sequenceNo, METH_O, "SimpleFilterChainMember_sequenceNo(SimpleFilterChainMember self) -> int"},
	 { "SimpleFilterChainMember_setSimpleFilterID", _wrap_SimpleFilterChainMember_setSimpleFilterID, METH_VARARGS, "SimpleFilterChainMember_setSimpleFilterID(SimpleFilterChainMember self, std::string const & simpleFilterID)"},
	 { "SimpleFilterChainMember_simpleFilterID", _wrap_SimpleFilterChainMember_simpleFilterID, METH_O, "SimpleFilterChainMember_simpleFilterID(SimpleFilterChainMember self) -> std::string const &"},
	 { "SimpleFilterChainMember_index", _wrap_SimpleFilterChainMember_index, METH_O, "SimpleFilterChainMember_index(SimpleFilterChainMember self) -> SimpleFilterChainMemberIndex"},
	 { "SimpleFilterChainMember_equalIndex", _wrap_SimpleFilterChainMember_equalIndex, METH_VARARGS, "SimpleFilterChainMember_equalIndex(SimpleFilterChainMember self, SimpleFilterChainMember lhs) -> bool"},
	 { "SimpleFilterChainMember_record", _wrap_SimpleFilterChainMember_record, METH_O, "SimpleFilterChainMember_record(SimpleFilterChainMember self) -> Record"},
	 { "SimpleFilterChainMember_assign", _wrap_SimpleFilterChainMember_assign, METH_VARARGS, "SimpleFilterChainMember_assign(SimpleFilterChainMember self, Object other) -> bool"},
	 { "SimpleFilterChainMember_attachTo", _wrap_SimpleFilterChainMember_attachTo, METH_VARARGS, "SimpleFilterChainMember_attachTo(SimpleFilterChainMember self, PublicObject parent) -> bool"},
	 { "SimpleFilterChainMember_detachFrom", _wrap_SimpleFilterChainMember_detachFrom, METH_VARARGS, "SimpleFilterChainMember_detachFrom(SimpleFilterChainMember self, PublicObject parent) -> bool"},
	 { "SimpleFilterChainMember_detach", _wrap_SimpleFilterChainMember_detach, METH_O, "SimpleFilterChainMember_detach(SimpleFilterChainMember self) -> bool"},
	 { "SimpleFilterChainMember_clone", _wrap_SimpleFilterChainMember_clone, METH_O, "SimpleFilterChainMember_clone(SimpleFilterChainMember self) -> Object"},
	 { "SimpleFilterChainMember_accept", _wrap_SimpleFilterChainMember_accept, METH_VARARGS, "SimpleFilterChainMember_accept(SimpleFilterChainMember self, Visitor arg2)"},
	 { "SimpleFilterChainMember_swigregister", SimpleFilterChainMember_swigregister, METH_O, NULL},
	 { "SimpleFilterChainMember_swiginit", SimpleFilterChainMember_swiginit, METH_VARARGS, NULL},
	 { "SimpleFilter_ClassName", _wrap_SimpleFilter_ClassName, METH_NOARGS, "SimpleFilter_ClassName() -> char const *"},
	 { "SimpleFilter_TypeInfo", _wrap_SimpleFilter_TypeInfo, METH_NOARGS, "SimpleFilter_TypeInfo() -> RTTI"},
	 { "SimpleFilter_className", _wrap_SimpleFilter_className, METH_O, "SimpleFilter_className(SimpleFilter self) -> char const *"},
	 { "SimpleFilter_typeInfo", _wrap_SimpleFilter_typeInfo, METH_O, "SimpleFilter_typeInfo(SimpleFilter self) -> RTTI"},
	 { "SimpleFilter_Cast", _wrap_SimpleFilter_Cast, METH_VARARGS, "\n"
		"SimpleFilter_Cast(BaseObject o) -> SimpleFilter\n"
		"SimpleFilter_Cast(Seiscomp::Core::BaseObjectPtr o) -> SimpleFilter\n"
		""},
	 { "SimpleFilter_ConstCast", _wrap_SimpleFilter_ConstCast, METH_VARARGS, "\n"
		"SimpleFilter_ConstCast(BaseObject o) -> SimpleFilter\n"
		"SimpleFilter_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> SimpleFilter\n"
		""},
	 { "SimpleFilter_serialize", _wrap_SimpleFilter_serialize, METH_VARARGS, "SimpleFilter_serialize(SimpleFilter self, GenericArchive ar)"},
	 { "SimpleFilter_Meta", _wrap_SimpleFilter_Meta, METH_NOARGS, "SimpleFilter_Meta() -> MetaObject"},
	 { "SimpleFilter_meta", _wrap_SimpleFilter_meta, METH_O, "SimpleFilter_meta(SimpleFilter self) -> MetaObject"},
	 { "new_SimpleFilter", _wrap_new_SimpleFilter, METH_VARARGS, "\n"
		"SimpleFilter(SimpleFilter other)\n"
		"new_SimpleFilter(std::string const & publicID) -> SimpleFilter\n"
		""},
	 { "delete_SimpleFilter", _wrap_delete_SimpleFilter, METH_O, "delete_SimpleFilter(SimpleFilter self)"},
	 { "SimpleFilter_Create", _wrap_SimpleFilter_Create, METH_VARARGS, "\n"
		"SimpleFilter_Create() -> SimpleFilter\n"
		"SimpleFilter_Create(std::string const & publicID) -> SimpleFilter\n"
		""},
	 { "SimpleFilter_Find", _wrap_SimpleFilter_Find, METH_O, "SimpleFilter_Find(std::string const & publicID) -> SimpleFilter"},
	 { "SimpleFilter___eq__", _wrap_SimpleFilter___eq__, METH_VARARGS, "SimpleFilter___eq__(SimpleFilter self, SimpleFilter other) -> bool"},
	 { "SimpleFilter___ne__", _wrap_SimpleFilter___ne__, METH_VARARGS, "SimpleFilter___ne__(SimpleFilter self, SimpleFilter other) -> bool"},
	 { "SimpleFilter_equal", _wrap_SimpleFilter_equal, METH_VARARGS, "SimpleFilter_equal(SimpleFilter self, SimpleFilter other) -> bool"},
	 { "SimpleFilter_setType", _wrap_SimpleFilter_setType, METH_VARARGS, "SimpleFilter_setType(SimpleFilter self, std::string const & type)"},
	 { "SimpleFilter_type", _wrap_SimpleFilter_type, METH_O, "SimpleFilter_type(SimpleFilter self) -> std::string const &"},
	 { "SimpleFilter_add", _wrap_SimpleFilter_add, METH_VARARGS, "SimpleFilter_add(SimpleFilter self, FilterParameter obj) -> bool"},
	 { "SimpleFilter_remove", _wrap_SimpleFilter_remove, METH_VARARGS, "SimpleFilter_remove(SimpleFilter self, FilterParameter obj) -> bool"},
	 { "SimpleFilter_removeFilterParameter", _wrap_SimpleFilter_removeFilterParameter, METH_VARARGS, "SimpleFilter_removeFilterParameter(SimpleFilter self, size_t i) -> bool"},
	 { "SimpleFilter_filterParameterCount", _wrap_SimpleFilter_filterParameterCount, METH_O, "SimpleFilter_filterParameterCount(SimpleFilter self) -> size_t"},
	 { "SimpleFilter_filterParameter", _wrap_SimpleFilter_filterParameter, METH_VARARGS, "SimpleFilter_filterParameter(SimpleFilter self, size_t i) -> FilterParameter"},
	 { "SimpleFilter_findFilterParameter", _wrap_SimpleFilter_findFilterParameter, METH_VARARGS, "SimpleFilter_findFilterParameter(SimpleFilter self, FilterParameter filterParameter) -> FilterParameter"},
	 { "SimpleFilter_strongMotionParameters", _wrap_SimpleFilter_strongMotionParameters, METH_O, "SimpleFilter_strongMotionParameters(SimpleFilter self) -> StrongMotionParameters"},
	 { "SimpleFilter_assign", _wrap_SimpleFilter_assign, METH_VARARGS, "SimpleFilter_assign(SimpleFilter self, Object other) -> bool"},
	 { "SimpleFilter_attachTo", _wrap_SimpleFilter_attachTo, METH_VARARGS, "SimpleFilter_attachTo(SimpleFilter self, PublicObject parent) -> bool"},
	 { "SimpleFilter_detachFrom", _wrap_SimpleFilter_detachFrom, METH_VARARGS, "SimpleFilter_detachFrom(SimpleFilter self, PublicObject parent) -> bool"},
	 { "SimpleFilter_detach", _wrap_SimpleFilter_detach, METH_O, "SimpleFilter_detach(SimpleFilter self) -> bool"},
	 { "SimpleFilter_clone", _wrap_SimpleFilter_clone, METH_O, "SimpleFilter_clone(SimpleFilter self) -> Object"},
	 { "SimpleFilter_updateChild", _wrap_SimpleFilter_updateChild, METH_VARARGS, "SimpleFilter_updateChild(SimpleFilter self, Object child) -> bool"},
	 { "SimpleFilter_accept", _wrap_SimpleFilter_accept, METH_VARARGS, "SimpleFilter_accept(SimpleFilter self, Visitor arg2)"},
	 { "SimpleFilter_swigregister", SimpleFilter_swigregister, METH_O, NULL},
	 { "SimpleFilter_swiginit", SimpleFilter_swiginit, METH_VARARGS, NULL},
	 { "Contact_ClassName", _wrap_Contact_ClassName, METH_NOARGS, "Contact_ClassName() -> char const *"},
	 { "Contact_TypeInfo", _wrap_Contact_TypeInfo, METH_NOARGS, "Contact_TypeInfo() -> RTTI"},
	 { "Contact_className", _wrap_Contact_className, METH_O, "Contact_className(Contact self) -> char const *"},
	 { "Contact_typeInfo", _wrap_Contact_typeInfo, METH_O, "Contact_typeInfo(Contact self) -> RTTI"},
	 { "Contact_Cast", _wrap_Contact_Cast, METH_VARARGS, "\n"
		"Contact_Cast(BaseObject o) -> Contact\n"
		"Contact_Cast(Seiscomp::Core::BaseObjectPtr o) -> Contact\n"
		""},
	 { "Contact_ConstCast", _wrap_Contact_ConstCast, METH_VARARGS, "\n"
		"Contact_ConstCast(BaseObject o) -> Contact\n"
		"Contact_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> Contact\n"
		""},
	 { "Contact_serialize", _wrap_Contact_serialize, METH_VARARGS, "Contact_serialize(Contact self, GenericArchive ar)"},
	 { "Contact_Meta", _wrap_Contact_Meta, METH_NOARGS, "Contact_Meta() -> MetaObject"},
	 { "Contact_meta", _wrap_Contact_meta, METH_O, "Contact_meta(Contact self) -> MetaObject"},
	 { "new_Contact", _wrap_new_Contact, METH_VARARGS, "\n"
		"Contact()\n"
		"new_Contact(Contact other) -> Contact\n"
		""},
	 { "delete_Contact", _wrap_delete_Contact, METH_O, "delete_Contact(Contact self)"},
	 { "Contact___eq__", _wrap_Contact___eq__, METH_VARARGS, "Contact___eq__(Contact self, Contact other) -> bool"},
	 { "Contact___ne__", _wrap_Contact___ne__, METH_VARARGS, "Contact___ne__(Contact self, Contact other) -> bool"},
	 { "Contact_equal", _wrap_Contact_equal, METH_VARARGS, "Contact_equal(Contact self, Contact other) -> bool"},
	 { "Contact_setName", _wrap_Contact_setName, METH_VARARGS, "Contact_setName(Contact self, std::string const & name)"},
	 { "Contact_name", _wrap_Contact_name, METH_O, "Contact_name(Contact self) -> std::string const &"},
	 { "Contact_setForename", _wrap_Contact_setForename, METH_VARARGS, "Contact_setForename(Contact self, std::string const & forename)"},
	 { "Contact_forename", _wrap_Contact_forename, METH_O, "Contact_forename(Contact self) -> std::string const &"},
	 { "Contact_setAgency", _wrap_Contact_setAgency, METH_VARARGS, "Contact_setAgency(Contact self, std::string const & agency)"},
	 { "Contact_agency", _wrap_Contact_agency, METH_O, "Contact_agency(Contact self) -> std::string const &"},
	 { "Contact_setDepartment", _wrap_Contact_setDepartment, METH_VARARGS, "Contact_setDepartment(Contact self, std::string const & department)"},
	 { "Contact_department", _wrap_Contact_department, METH_O, "Contact_department(Contact self) -> std::string const &"},
	 { "Contact_setAddress", _wrap_Contact_setAddress, METH_VARARGS, "Contact_setAddress(Contact self, std::string const & address)"},
	 { "Contact_address", _wrap_Contact_address, METH_O, "Contact_address(Contact self) -> std::string const &"},
	 { "Contact_setPhone", _wrap_Contact_setPhone, METH_VARARGS, "Contact_setPhone(Contact self, std::string const & phone)"},
	 { "Contact_phone", _wrap_Contact_phone, METH_O, "Contact_phone(Contact self) -> std::string const &"},
	 { "Contact_setEmail", _wrap_Contact_setEmail, METH_VARARGS, "Contact_setEmail(Contact self, std::string const & email)"},
	 { "Contact_email", _wrap_Contact_email, METH_O, "Contact_email(Contact self) -> std::string const &"},
	 { "Contact_swigregister", Contact_swigregister, METH_O, NULL},
	 { "Contact_swiginit", Contact_swiginit, METH_VARARGS, NULL},
	 { "EventRecordReference_ClassName", _wrap_EventRecordReference_ClassName, METH_NOARGS, "EventRecordReference_ClassName() -> char const *"},
	 { "EventRecordReference_TypeInfo", _wrap_EventRecordReference_TypeInfo, METH_NOARGS, "EventRecordReference_TypeInfo() -> RTTI"},
	 { "EventRecordReference_className", _wrap_EventRecordReference_className, METH_O, "EventRecordReference_className(EventRecordReference self) -> char const *"},
	 { "EventRecordReference_typeInfo", _wrap_EventRecordReference_typeInfo, METH_O, "EventRecordReference_typeInfo(EventRecordReference self) -> RTTI"},
	 { "EventRecordReference_Cast", _wrap_EventRecordReference_Cast, METH_VARARGS, "\n"
		"EventRecordReference_Cast(BaseObject o) -> EventRecordReference\n"
		"EventRecordReference_Cast(Seiscomp::Core::BaseObjectPtr o) -> EventRecordReference\n"
		""},
	 { "EventRecordReference_ConstCast", _wrap_EventRecordReference_ConstCast, METH_VARARGS, "\n"
		"EventRecordReference_ConstCast(BaseObject o) -> EventRecordReference\n"
		"EventRecordReference_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> EventRecordReference\n"
		""},
	 { "EventRecordReference_serialize", _wrap_EventRecordReference_serialize, METH_VARARGS, "EventRecordReference_serialize(EventRecordReference self, GenericArchive ar)"},
	 { "EventRecordReference_Meta", _wrap_EventRecordReference_Meta, METH_NOARGS, "EventRecordReference_Meta() -> MetaObject"},
	 { "EventRecordReference_meta", _wrap_EventRecordReference_meta, METH_O, "EventRecordReference_meta(EventRecordReference self) -> MetaObject"},
	 { "new_EventRecordReference", _wrap_new_EventRecordReference, METH_VARARGS, "\n"
		"EventRecordReference()\n"
		"EventRecordReference(EventRecordReference other)\n"
		"EventRecordReference(std::string const & recordID)\n"
		"new_EventRecordReference(std::string const & recordID, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & campbellDistance, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & ruptureToStationAzimuth, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & ruptureAreaDistance, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & JoynerBooreDistance, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & closestFaultDistance, Seiscomp::Core::Optional< double >::Impl const & preEventLength, Seiscomp::Core::Optional< double >::Impl const & postEventLength) -> EventRecordReference\n"
		""},
	 { "delete_EventRecordReference", _wrap_delete_EventRecordReference, METH_O, "delete_EventRecordReference(EventRecordReference self)"},
	 { "EventRecordReference___eq__", _wrap_EventRecordReference___eq__, METH_VARARGS, "EventRecordReference___eq__(EventRecordReference self, EventRecordReference other) -> bool"},
	 { "EventRecordReference___ne__", _wrap_EventRecordReference___ne__, METH_VARARGS, "EventRecordReference___ne__(EventRecordReference self, EventRecordReference other) -> bool"},
	 { "EventRecordReference_equal", _wrap_EventRecordReference_equal, METH_VARARGS, "EventRecordReference_equal(EventRecordReference self, EventRecordReference other) -> bool"},
	 { "EventRecordReference_setRecordID", _wrap_EventRecordReference_setRecordID, METH_VARARGS, "EventRecordReference_setRecordID(EventRecordReference self, std::string const & recordID)"},
	 { "EventRecordReference_recordID", _wrap_EventRecordReference_recordID, METH_O, "EventRecordReference_recordID(EventRecordReference self) -> std::string const &"},
	 { "EventRecordReference_setCampbellDistance", _wrap_EventRecordReference_setCampbellDistance, METH_VARARGS, "EventRecordReference_setCampbellDistance(EventRecordReference self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & campbellDistance)"},
	 { "EventRecordReference_campbellDistance", _wrap_EventRecordReference_campbellDistance, METH_VARARGS, "\n"
		"EventRecordReference_campbellDistance(EventRecordReference self) -> RealQuantity\n"
		"EventRecordReference_campbellDistance(EventRecordReference self) -> RealQuantity\n"
		""},
	 { "EventRecordReference_setRuptureToStationAzimuth", _wrap_EventRecordReference_setRuptureToStationAzimuth, METH_VARARGS, "EventRecordReference_setRuptureToStationAzimuth(EventRecordReference self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & ruptureToStationAzimuth)"},
	 { "EventRecordReference_ruptureToStationAzimuth", _wrap_EventRecordReference_ruptureToStationAzimuth, METH_VARARGS, "\n"
		"EventRecordReference_ruptureToStationAzimuth(EventRecordReference self) -> RealQuantity\n"
		"EventRecordReference_ruptureToStationAzimuth(EventRecordReference self) -> RealQuantity\n"
		""},
	 { "EventRecordReference_setRuptureAreaDistance", _wrap_EventRecordReference_setRuptureAreaDistance, METH_VARARGS, "EventRecordReference_setRuptureAreaDistance(EventRecordReference self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & ruptureAreaDistance)"},
	 { "EventRecordReference_ruptureAreaDistance", _wrap_EventRecordReference_ruptureAreaDistance, METH_VARARGS, "\n"
		"EventRecordReference_ruptureAreaDistance(EventRecordReference self) -> RealQuantity\n"
		"EventRecordReference_ruptureAreaDistance(EventRecordReference self) -> RealQuantity\n"
		""},
	 { "EventRecordReference_setJoynerBooreDistance", _wrap_EventRecordReference_setJoynerBooreDistance, METH_VARARGS, "EventRecordReference_setJoynerBooreDistance(EventRecordReference self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & JoynerBooreDistance)"},
	 { "EventRecordReference_JoynerBooreDistance", _wrap_EventRecordReference_JoynerBooreDistance, METH_VARARGS, "\n"
		"EventRecordReference_JoynerBooreDistance(EventRecordReference self) -> RealQuantity\n"
		"EventRecordReference_JoynerBooreDistance(EventRecordReference self) -> RealQuantity\n"
		""},
	 { "EventRecordReference_setClosestFaultDistance", _wrap_EventRecordReference_setClosestFaultDistance, METH_VARARGS, "EventRecordReference_setClosestFaultDistance(EventRecordReference self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & closestFaultDistance)"},
	 { "EventRecordReference_closestFaultDistance", _wrap_EventRecordReference_closestFaultDistance, METH_VARARGS, "\n"
		"EventRecordReference_closestFaultDistance(EventRecordReference self) -> RealQuantity\n"
		"EventRecordReference_closestFaultDistance(EventRecordReference self) -> RealQuantity\n"
		""},
	 { "EventRecordReference_setPreEventLength", _wrap_EventRecordReference_setPreEventLength, METH_VARARGS, "EventRecordReference_setPreEventLength(EventRecordReference self, Seiscomp::Core::Optional< double >::Impl const & preEventLength)"},
	 { "EventRecordReference_preEventLength", _wrap_EventRecordReference_preEventLength, METH_O, "EventRecordReference_preEventLength(EventRecordReference self) -> double"},
	 { "EventRecordReference_setPostEventLength", _wrap_EventRecordReference_setPostEventLength, METH_VARARGS, "EventRecordReference_setPostEventLength(EventRecordReference self, Seiscomp::Core::Optional< double >::Impl const & postEventLength)"},
	 { "EventRecordReference_postEventLength", _wrap_EventRecordReference_postEventLength, METH_O, "EventRecordReference_postEventLength(EventRecordReference self) -> double"},
	 { "EventRecordReference_strongOriginDescription", _wrap_EventRecordReference_strongOriginDescription, METH_O, "EventRecordReference_strongOriginDescription(EventRecordReference self) -> StrongOriginDescription"},
	 { "EventRecordReference_assign", _wrap_EventRecordReference_assign, METH_VARARGS, "EventRecordReference_assign(EventRecordReference self, Object other) -> bool"},
	 { "EventRecordReference_attachTo", _wrap_EventRecordReference_attachTo, METH_VARARGS, "EventRecordReference_attachTo(EventRecordReference self, PublicObject parent) -> bool"},
	 { "EventRecordReference_detachFrom", _wrap_EventRecordReference_detachFrom, METH_VARARGS, "EventRecordReference_detachFrom(EventRecordReference self, PublicObject parent) -> bool"},
	 { "EventRecordReference_detach", _wrap_EventRecordReference_detach, METH_O, "EventRecordReference_detach(EventRecordReference self) -> bool"},
	 { "EventRecordReference_clone", _wrap_EventRecordReference_clone, METH_O, "EventRecordReference_clone(EventRecordReference self) -> Object"},
	 { "EventRecordReference_accept", _wrap_EventRecordReference_accept, METH_VARARGS, "EventRecordReference_accept(EventRecordReference self, Visitor arg2)"},
	 { "EventRecordReference_swigregister", EventRecordReference_swigregister, METH_O, NULL},
	 { "EventRecordReference_swiginit", EventRecordReference_swiginit, METH_VARARGS, NULL},
	 { "FileResource_ClassName", _wrap_FileResource_ClassName, METH_NOARGS, "FileResource_ClassName() -> char const *"},
	 { "FileResource_TypeInfo", _wrap_FileResource_TypeInfo, METH_NOARGS, "FileResource_TypeInfo() -> RTTI"},
	 { "FileResource_className", _wrap_FileResource_className, METH_O, "FileResource_className(FileResource self) -> char const *"},
	 { "FileResource_typeInfo", _wrap_FileResource_typeInfo, METH_O, "FileResource_typeInfo(FileResource self) -> RTTI"},
	 { "FileResource_Cast", _wrap_FileResource_Cast, METH_VARARGS, "\n"
		"FileResource_Cast(BaseObject o) -> FileResource\n"
		"FileResource_Cast(Seiscomp::Core::BaseObjectPtr o) -> FileResource\n"
		""},
	 { "FileResource_ConstCast", _wrap_FileResource_ConstCast, METH_VARARGS, "\n"
		"FileResource_ConstCast(BaseObject o) -> FileResource\n"
		"FileResource_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> FileResource\n"
		""},
	 { "FileResource_serialize", _wrap_FileResource_serialize, METH_VARARGS, "FileResource_serialize(FileResource self, GenericArchive ar)"},
	 { "FileResource_Meta", _wrap_FileResource_Meta, METH_NOARGS, "FileResource_Meta() -> MetaObject"},
	 { "FileResource_meta", _wrap_FileResource_meta, METH_O, "FileResource_meta(FileResource self) -> MetaObject"},
	 { "new_FileResource", _wrap_new_FileResource, METH_VARARGS, "\n"
		"FileResource()\n"
		"new_FileResource(FileResource other) -> FileResource\n"
		""},
	 { "delete_FileResource", _wrap_delete_FileResource, METH_O, "delete_FileResource(FileResource self)"},
	 { "FileResource___eq__", _wrap_FileResource___eq__, METH_VARARGS, "FileResource___eq__(FileResource self, FileResource other) -> bool"},
	 { "FileResource___ne__", _wrap_FileResource___ne__, METH_VARARGS, "FileResource___ne__(FileResource self, FileResource other) -> bool"},
	 { "FileResource_equal", _wrap_FileResource_equal, METH_VARARGS, "FileResource_equal(FileResource self, FileResource other) -> bool"},
	 { "FileResource_setCreationInfo", _wrap_FileResource_setCreationInfo, METH_VARARGS, "FileResource_setCreationInfo(FileResource self, Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const & creationInfo)"},
	 { "FileResource_creationInfo", _wrap_FileResource_creationInfo, METH_VARARGS, "\n"
		"FileResource_creationInfo(FileResource self) -> CreationInfo\n"
		"FileResource_creationInfo(FileResource self) -> CreationInfo\n"
		""},
	 { "FileResource_setClass", _wrap_FileResource_setClass, METH_VARARGS, "FileResource_setClass(FileResource self, std::string const & Class)"},
	 { "FileResource_Class", _wrap_FileResource_Class, METH_O, "FileResource_Class(FileResource self) -> std::string const &"},
	 { "FileResource_setType", _wrap_FileResource_setType, METH_VARARGS, "FileResource_setType(FileResource self, std::string const & type)"},
	 { "FileResource_type", _wrap_FileResource_type, METH_O, "FileResource_type(FileResource self) -> std::string const &"},
	 { "FileResource_setFilename", _wrap_FileResource_setFilename, METH_VARARGS, "FileResource_setFilename(FileResource self, std::string const & filename)"},
	 { "FileResource_filename", _wrap_FileResource_filename, METH_O, "FileResource_filename(FileResource self) -> std::string const &"},
	 { "FileResource_setUrl", _wrap_FileResource_setUrl, METH_VARARGS, "FileResource_setUrl(FileResource self, std::string const & url)"},
	 { "FileResource_url", _wrap_FileResource_url, METH_O, "FileResource_url(FileResource self) -> std::string const &"},
	 { "FileResource_setDescription", _wrap_FileResource_setDescription, METH_VARARGS, "FileResource_setDescription(FileResource self, std::string const & description)"},
	 { "FileResource_description", _wrap_FileResource_description, METH_O, "FileResource_description(FileResource self) -> std::string const &"},
	 { "FileResource_swigregister", FileResource_swigregister, METH_O, NULL},
	 { "FileResource_swiginit", FileResource_swiginit, METH_VARARGS, NULL},
	 { "FilterParameter_ClassName", _wrap_FilterParameter_ClassName, METH_NOARGS, "FilterParameter_ClassName() -> char const *"},
	 { "FilterParameter_TypeInfo", _wrap_FilterParameter_TypeInfo, METH_NOARGS, "FilterParameter_TypeInfo() -> RTTI"},
	 { "FilterParameter_className", _wrap_FilterParameter_className, METH_O, "FilterParameter_className(FilterParameter self) -> char const *"},
	 { "FilterParameter_typeInfo", _wrap_FilterParameter_typeInfo, METH_O, "FilterParameter_typeInfo(FilterParameter self) -> RTTI"},
	 { "FilterParameter_Cast", _wrap_FilterParameter_Cast, METH_VARARGS, "\n"
		"FilterParameter_Cast(BaseObject o) -> FilterParameter\n"
		"FilterParameter_Cast(Seiscomp::Core::BaseObjectPtr o) -> FilterParameter\n"
		""},
	 { "FilterParameter_ConstCast", _wrap_FilterParameter_ConstCast, METH_VARARGS, "\n"
		"FilterParameter_ConstCast(BaseObject o) -> FilterParameter\n"
		"FilterParameter_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> FilterParameter\n"
		""},
	 { "FilterParameter_serialize", _wrap_FilterParameter_serialize, METH_VARARGS, "FilterParameter_serialize(FilterParameter self, GenericArchive ar)"},
	 { "FilterParameter_Meta", _wrap_FilterParameter_Meta, METH_NOARGS, "FilterParameter_Meta() -> MetaObject"},
	 { "FilterParameter_meta", _wrap_FilterParameter_meta, METH_O, "FilterParameter_meta(FilterParameter self) -> MetaObject"},
	 { "new_FilterParameter", _wrap_new_FilterParameter, METH_VARARGS, "\n"
		"FilterParameter()\n"
		"new_FilterParameter(FilterParameter other) -> FilterParameter\n"
		""},
	 { "delete_FilterParameter", _wrap_delete_FilterParameter, METH_O, "delete_FilterParameter(FilterParameter self)"},
	 { "FilterParameter___eq__", _wrap_FilterParameter___eq__, METH_VARARGS, "FilterParameter___eq__(FilterParameter self, FilterParameter other) -> bool"},
	 { "FilterParameter___ne__", _wrap_FilterParameter___ne__, METH_VARARGS, "FilterParameter___ne__(FilterParameter self, FilterParameter other) -> bool"},
	 { "FilterParameter_equal", _wrap_FilterParameter_equal, METH_VARARGS, "FilterParameter_equal(FilterParameter self, FilterParameter other) -> bool"},
	 { "FilterParameter_setValue", _wrap_FilterParameter_setValue, METH_VARARGS, "FilterParameter_setValue(FilterParameter self, RealQuantity value)"},
	 { "FilterParameter_value", _wrap_FilterParameter_value, METH_VARARGS, "\n"
		"FilterParameter_value(FilterParameter self) -> RealQuantity\n"
		"FilterParameter_value(FilterParameter self) -> RealQuantity\n"
		""},
	 { "FilterParameter_setName", _wrap_FilterParameter_setName, METH_VARARGS, "FilterParameter_setName(FilterParameter self, std::string const & name)"},
	 { "FilterParameter_name", _wrap_FilterParameter_name, METH_O, "FilterParameter_name(FilterParameter self) -> std::string const &"},
	 { "FilterParameter_simpleFilter", _wrap_FilterParameter_simpleFilter, METH_O, "FilterParameter_simpleFilter(FilterParameter self) -> SimpleFilter"},
	 { "FilterParameter_assign", _wrap_FilterParameter_assign, METH_VARARGS, "FilterParameter_assign(FilterParameter self, Object other) -> bool"},
	 { "FilterParameter_attachTo", _wrap_FilterParameter_attachTo, METH_VARARGS, "FilterParameter_attachTo(FilterParameter self, PublicObject parent) -> bool"},
	 { "FilterParameter_detachFrom", _wrap_FilterParameter_detachFrom, METH_VARARGS, "FilterParameter_detachFrom(FilterParameter self, PublicObject parent) -> bool"},
	 { "FilterParameter_detach", _wrap_FilterParameter_detach, METH_O, "FilterParameter_detach(FilterParameter self) -> bool"},
	 { "FilterParameter_clone", _wrap_FilterParameter_clone, METH_O, "FilterParameter_clone(FilterParameter self) -> Object"},
	 { "FilterParameter_accept", _wrap_FilterParameter_accept, METH_VARARGS, "FilterParameter_accept(FilterParameter self, Visitor arg2)"},
	 { "FilterParameter_swigregister", FilterParameter_swigregister, METH_O, NULL},
	 { "FilterParameter_swiginit", FilterParameter_swiginit, METH_VARARGS, NULL},
	 { "LiteratureSource_ClassName", _wrap_LiteratureSource_ClassName, METH_NOARGS, "LiteratureSource_ClassName() -> char const *"},
	 { "LiteratureSource_TypeInfo", _wrap_LiteratureSource_TypeInfo, METH_NOARGS, "LiteratureSource_TypeInfo() -> RTTI"},
	 { "LiteratureSource_className", _wrap_LiteratureSource_className, METH_O, "LiteratureSource_className(LiteratureSource self) -> char const *"},
	 { "LiteratureSource_typeInfo", _wrap_LiteratureSource_typeInfo, METH_O, "LiteratureSource_typeInfo(LiteratureSource self) -> RTTI"},
	 { "LiteratureSource_Cast", _wrap_LiteratureSource_Cast, METH_VARARGS, "\n"
		"LiteratureSource_Cast(BaseObject o) -> LiteratureSource\n"
		"LiteratureSource_Cast(Seiscomp::Core::BaseObjectPtr o) -> LiteratureSource\n"
		""},
	 { "LiteratureSource_ConstCast", _wrap_LiteratureSource_ConstCast, METH_VARARGS, "\n"
		"LiteratureSource_ConstCast(BaseObject o) -> LiteratureSource\n"
		"LiteratureSource_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> LiteratureSource\n"
		""},
	 { "LiteratureSource_serialize", _wrap_LiteratureSource_serialize, METH_VARARGS, "LiteratureSource_serialize(LiteratureSource self, GenericArchive ar)"},
	 { "LiteratureSource_Meta", _wrap_LiteratureSource_Meta, METH_NOARGS, "LiteratureSource_Meta() -> MetaObject"},
	 { "LiteratureSource_meta", _wrap_LiteratureSource_meta, METH_O, "LiteratureSource_meta(LiteratureSource self) -> MetaObject"},
	 { "new_LiteratureSource", _wrap_new_LiteratureSource, METH_VARARGS, "\n"
		"LiteratureSource()\n"
		"LiteratureSource(LiteratureSource other)\n"
		"LiteratureSource(std::string const & title)\n"
		"new_LiteratureSource(std::string const & title, std::string const & firstAuthorName, std::string const & firstAuthorForename, std::string const & secondaryAuthors, std::string const & doi, Seiscomp::Core::Optional< int >::Impl const & year, std::string const & in_title, std::string const & editor, std::string const & place, std::string const & language, Seiscomp::Core::Optional< int >::Impl const & tome, Seiscomp::Core::Optional< int >::Impl const & page_from, Seiscomp::Core::Optional< int >::Impl const & page_to) -> LiteratureSource\n"
		""},
	 { "delete_LiteratureSource", _wrap_delete_LiteratureSource, METH_O, "delete_LiteratureSource(LiteratureSource self)"},
	 { "LiteratureSource___eq__", _wrap_LiteratureSource___eq__, METH_VARARGS, "LiteratureSource___eq__(LiteratureSource self, LiteratureSource other) -> bool"},
	 { "LiteratureSource___ne__", _wrap_LiteratureSource___ne__, METH_VARARGS, "LiteratureSource___ne__(LiteratureSource self, LiteratureSource other) -> bool"},
	 { "LiteratureSource_equal", _wrap_LiteratureSource_equal, METH_VARARGS, "LiteratureSource_equal(LiteratureSource self, LiteratureSource other) -> bool"},
	 { "LiteratureSource_setTitle", _wrap_LiteratureSource_setTitle, METH_VARARGS, "LiteratureSource_setTitle(LiteratureSource self, std::string const & title)"},
	 { "LiteratureSource_title", _wrap_LiteratureSource_title, METH_O, "LiteratureSource_title(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setFirstAuthorName", _wrap_LiteratureSource_setFirstAuthorName, METH_VARARGS, "LiteratureSource_setFirstAuthorName(LiteratureSource self, std::string const & firstAuthorName)"},
	 { "LiteratureSource_firstAuthorName", _wrap_LiteratureSource_firstAuthorName, METH_O, "LiteratureSource_firstAuthorName(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setFirstAuthorForename", _wrap_LiteratureSource_setFirstAuthorForename, METH_VARARGS, "LiteratureSource_setFirstAuthorForename(LiteratureSource self, std::string const & firstAuthorForename)"},
	 { "LiteratureSource_firstAuthorForename", _wrap_LiteratureSource_firstAuthorForename, METH_O, "LiteratureSource_firstAuthorForename(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setSecondaryAuthors", _wrap_LiteratureSource_setSecondaryAuthors, METH_VARARGS, "LiteratureSource_setSecondaryAuthors(LiteratureSource self, std::string const & secondaryAuthors)"},
	 { "LiteratureSource_secondaryAuthors", _wrap_LiteratureSource_secondaryAuthors, METH_O, "LiteratureSource_secondaryAuthors(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setDoi", _wrap_LiteratureSource_setDoi, METH_VARARGS, "LiteratureSource_setDoi(LiteratureSource self, std::string const & doi)"},
	 { "LiteratureSource_doi", _wrap_LiteratureSource_doi, METH_O, "LiteratureSource_doi(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setYear", _wrap_LiteratureSource_setYear, METH_VARARGS, "LiteratureSource_setYear(LiteratureSource self, Seiscomp::Core::Optional< int >::Impl const & year)"},
	 { "LiteratureSource_year", _wrap_LiteratureSource_year, METH_O, "LiteratureSource_year(LiteratureSource self) -> int"},
	 { "LiteratureSource_setInTitle", _wrap_LiteratureSource_setInTitle, METH_VARARGS, "LiteratureSource_setInTitle(LiteratureSource self, std::string const & inTitle)"},
	 { "LiteratureSource_inTitle", _wrap_LiteratureSource_inTitle, METH_O, "LiteratureSource_inTitle(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setEditor", _wrap_LiteratureSource_setEditor, METH_VARARGS, "LiteratureSource_setEditor(LiteratureSource self, std::string const & editor)"},
	 { "LiteratureSource_editor", _wrap_LiteratureSource_editor, METH_O, "LiteratureSource_editor(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setPlace", _wrap_LiteratureSource_setPlace, METH_VARARGS, "LiteratureSource_setPlace(LiteratureSource self, std::string const & place)"},
	 { "LiteratureSource_place", _wrap_LiteratureSource_place, METH_O, "LiteratureSource_place(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setLanguage", _wrap_LiteratureSource_setLanguage, METH_VARARGS, "LiteratureSource_setLanguage(LiteratureSource self, std::string const & language)"},
	 { "LiteratureSource_language", _wrap_LiteratureSource_language, METH_O, "LiteratureSource_language(LiteratureSource self) -> std::string const &"},
	 { "LiteratureSource_setTome", _wrap_LiteratureSource_setTome, METH_VARARGS, "LiteratureSource_setTome(LiteratureSource self, Seiscomp::Core::Optional< int >::Impl const & tome)"},
	 { "LiteratureSource_tome", _wrap_LiteratureSource_tome, METH_O, "LiteratureSource_tome(LiteratureSource self) -> int"},
	 { "LiteratureSource_setPageFrom", _wrap_LiteratureSource_setPageFrom, METH_VARARGS, "LiteratureSource_setPageFrom(LiteratureSource self, Seiscomp::Core::Optional< int >::Impl const & pageFrom)"},
	 { "LiteratureSource_pageFrom", _wrap_LiteratureSource_pageFrom, METH_O, "LiteratureSource_pageFrom(LiteratureSource self) -> int"},
	 { "LiteratureSource_setPageTo", _wrap_LiteratureSource_setPageTo, METH_VARARGS, "LiteratureSource_setPageTo(LiteratureSource self, Seiscomp::Core::Optional< int >::Impl const & pageTo)"},
	 { "LiteratureSource_pageTo", _wrap_LiteratureSource_pageTo, METH_O, "LiteratureSource_pageTo(LiteratureSource self) -> int"},
	 { "LiteratureSource_swigregister", LiteratureSource_swigregister, METH_O, NULL},
	 { "LiteratureSource_swiginit", LiteratureSource_swiginit, METH_VARARGS, NULL},
	 { "SurfaceRupture_ClassName", _wrap_SurfaceRupture_ClassName, METH_NOARGS, "SurfaceRupture_ClassName() -> char const *"},
	 { "SurfaceRupture_TypeInfo", _wrap_SurfaceRupture_TypeInfo, METH_NOARGS, "SurfaceRupture_TypeInfo() -> RTTI"},
	 { "SurfaceRupture_className", _wrap_SurfaceRupture_className, METH_O, "SurfaceRupture_className(SurfaceRupture self) -> char const *"},
	 { "SurfaceRupture_typeInfo", _wrap_SurfaceRupture_typeInfo, METH_O, "SurfaceRupture_typeInfo(SurfaceRupture self) -> RTTI"},
	 { "SurfaceRupture_Cast", _wrap_SurfaceRupture_Cast, METH_VARARGS, "\n"
		"SurfaceRupture_Cast(BaseObject o) -> SurfaceRupture\n"
		"SurfaceRupture_Cast(Seiscomp::Core::BaseObjectPtr o) -> SurfaceRupture\n"
		""},
	 { "SurfaceRupture_ConstCast", _wrap_SurfaceRupture_ConstCast, METH_VARARGS, "\n"
		"SurfaceRupture_ConstCast(BaseObject o) -> SurfaceRupture\n"
		"SurfaceRupture_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> SurfaceRupture\n"
		""},
	 { "SurfaceRupture_serialize", _wrap_SurfaceRupture_serialize, METH_VARARGS, "SurfaceRupture_serialize(SurfaceRupture self, GenericArchive ar)"},
	 { "SurfaceRupture_Meta", _wrap_SurfaceRupture_Meta, METH_NOARGS, "SurfaceRupture_Meta() -> MetaObject"},
	 { "SurfaceRupture_meta", _wrap_SurfaceRupture_meta, METH_O, "SurfaceRupture_meta(SurfaceRupture self) -> MetaObject"},
	 { "new_SurfaceRupture", _wrap_new_SurfaceRupture, METH_VARARGS, "\n"
		"SurfaceRupture()\n"
		"new_SurfaceRupture(SurfaceRupture other) -> SurfaceRupture\n"
		""},
	 { "delete_SurfaceRupture", _wrap_delete_SurfaceRupture, METH_O, "delete_SurfaceRupture(SurfaceRupture self)"},
	 { "SurfaceRupture___eq__", _wrap_SurfaceRupture___eq__, METH_VARARGS, "SurfaceRupture___eq__(SurfaceRupture self, SurfaceRupture other) -> bool"},
	 { "SurfaceRupture___ne__", _wrap_SurfaceRupture___ne__, METH_VARARGS, "SurfaceRupture___ne__(SurfaceRupture self, SurfaceRupture other) -> bool"},
	 { "SurfaceRupture_equal", _wrap_SurfaceRupture_equal, METH_VARARGS, "SurfaceRupture_equal(SurfaceRupture self, SurfaceRupture other) -> bool"},
	 { "SurfaceRupture_setObserved", _wrap_SurfaceRupture_setObserved, METH_VARARGS, "SurfaceRupture_setObserved(SurfaceRupture self, bool observed)"},
	 { "SurfaceRupture_observed", _wrap_SurfaceRupture_observed, METH_O, "SurfaceRupture_observed(SurfaceRupture self) -> bool"},
	 { "SurfaceRupture_setEvidence", _wrap_SurfaceRupture_setEvidence, METH_VARARGS, "SurfaceRupture_setEvidence(SurfaceRupture self, std::string const & evidence)"},
	 { "SurfaceRupture_evidence", _wrap_SurfaceRupture_evidence, METH_O, "SurfaceRupture_evidence(SurfaceRupture self) -> std::string const &"},
	 { "SurfaceRupture_setLiteratureSource", _wrap_SurfaceRupture_setLiteratureSource, METH_VARARGS, "SurfaceRupture_setLiteratureSource(SurfaceRupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const & literatureSource)"},
	 { "SurfaceRupture_literatureSource", _wrap_SurfaceRupture_literatureSource, METH_VARARGS, "\n"
		"SurfaceRupture_literatureSource(SurfaceRupture self) -> LiteratureSource\n"
		"SurfaceRupture_literatureSource(SurfaceRupture self) -> LiteratureSource\n"
		""},
	 { "SurfaceRupture_swigregister", SurfaceRupture_swigregister, METH_O, NULL},
	 { "SurfaceRupture_swiginit", SurfaceRupture_swiginit, METH_VARARGS, NULL},
	 { "PeakMotion_ClassName", _wrap_PeakMotion_ClassName, METH_NOARGS, "PeakMotion_ClassName() -> char const *"},
	 { "PeakMotion_TypeInfo", _wrap_PeakMotion_TypeInfo, METH_NOARGS, "PeakMotion_TypeInfo() -> RTTI"},
	 { "PeakMotion_className", _wrap_PeakMotion_className, METH_O, "PeakMotion_className(PeakMotion self) -> char const *"},
	 { "PeakMotion_typeInfo", _wrap_PeakMotion_typeInfo, METH_O, "PeakMotion_typeInfo(PeakMotion self) -> RTTI"},
	 { "PeakMotion_Cast", _wrap_PeakMotion_Cast, METH_VARARGS, "\n"
		"PeakMotion_Cast(BaseObject o) -> PeakMotion\n"
		"PeakMotion_Cast(Seiscomp::Core::BaseObjectPtr o) -> PeakMotion\n"
		""},
	 { "PeakMotion_ConstCast", _wrap_PeakMotion_ConstCast, METH_VARARGS, "\n"
		"PeakMotion_ConstCast(BaseObject o) -> PeakMotion\n"
		"PeakMotion_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> PeakMotion\n"
		""},
	 { "PeakMotion_serialize", _wrap_PeakMotion_serialize, METH_VARARGS, "PeakMotion_serialize(PeakMotion self, GenericArchive ar)"},
	 { "PeakMotion_Meta", _wrap_PeakMotion_Meta, METH_NOARGS, "PeakMotion_Meta() -> MetaObject"},
	 { "PeakMotion_meta", _wrap_PeakMotion_meta, METH_O, "PeakMotion_meta(PeakMotion self) -> MetaObject"},
	 { "new_PeakMotion", _wrap_new_PeakMotion, METH_VARARGS, "\n"
		"PeakMotion()\n"
		"new_PeakMotion(PeakMotion other) -> PeakMotion\n"
		""},
	 { "delete_PeakMotion", _wrap_delete_PeakMotion, METH_O, "delete_PeakMotion(PeakMotion self)"},
	 { "PeakMotion___eq__", _wrap_PeakMotion___eq__, METH_VARARGS, "PeakMotion___eq__(PeakMotion self, PeakMotion other) -> bool"},
	 { "PeakMotion___ne__", _wrap_PeakMotion___ne__, METH_VARARGS, "PeakMotion___ne__(PeakMotion self, PeakMotion other) -> bool"},
	 { "PeakMotion_equal", _wrap_PeakMotion_equal, METH_VARARGS, "PeakMotion_equal(PeakMotion self, PeakMotion other) -> bool"},
	 { "PeakMotion_setMotion", _wrap_PeakMotion_setMotion, METH_VARARGS, "PeakMotion_setMotion(PeakMotion self, RealQuantity motion)"},
	 { "PeakMotion_motion", _wrap_PeakMotion_motion, METH_VARARGS, "\n"
		"PeakMotion_motion(PeakMotion self) -> RealQuantity\n"
		"PeakMotion_motion(PeakMotion self) -> RealQuantity\n"
		""},
	 { "PeakMotion_setType", _wrap_PeakMotion_setType, METH_VARARGS, "PeakMotion_setType(PeakMotion self, std::string const & type)"},
	 { "PeakMotion_type", _wrap_PeakMotion_type, METH_O, "PeakMotion_type(PeakMotion self) -> std::string const &"},
	 { "PeakMotion_setPeriod", _wrap_PeakMotion_setPeriod, METH_VARARGS, "PeakMotion_setPeriod(PeakMotion self, Seiscomp::Core::Optional< double >::Impl const & period)"},
	 { "PeakMotion_period", _wrap_PeakMotion_period, METH_O, "PeakMotion_period(PeakMotion self) -> double"},
	 { "PeakMotion_setDamping", _wrap_PeakMotion_setDamping, METH_VARARGS, "PeakMotion_setDamping(PeakMotion self, Seiscomp::Core::Optional< double >::Impl const & damping)"},
	 { "PeakMotion_damping", _wrap_PeakMotion_damping, METH_O, "PeakMotion_damping(PeakMotion self) -> double"},
	 { "PeakMotion_setMethod", _wrap_PeakMotion_setMethod, METH_VARARGS, "PeakMotion_setMethod(PeakMotion self, std::string const & method)"},
	 { "PeakMotion_method", _wrap_PeakMotion_method, METH_O, "PeakMotion_method(PeakMotion self) -> std::string const &"},
	 { "PeakMotion_setAtTime", _wrap_PeakMotion_setAtTime, METH_VARARGS, "PeakMotion_setAtTime(PeakMotion self, Seiscomp::Core::Optional< Seiscomp::DataModel::TimeQuantity >::Impl const & atTime)"},
	 { "PeakMotion_atTime", _wrap_PeakMotion_atTime, METH_VARARGS, "\n"
		"PeakMotion_atTime(PeakMotion self) -> TimeQuantity\n"
		"PeakMotion_atTime(PeakMotion self) -> TimeQuantity\n"
		""},
	 { "PeakMotion_record", _wrap_PeakMotion_record, METH_O, "PeakMotion_record(PeakMotion self) -> Record"},
	 { "PeakMotion_assign", _wrap_PeakMotion_assign, METH_VARARGS, "PeakMotion_assign(PeakMotion self, Object other) -> bool"},
	 { "PeakMotion_attachTo", _wrap_PeakMotion_attachTo, METH_VARARGS, "PeakMotion_attachTo(PeakMotion self, PublicObject parent) -> bool"},
	 { "PeakMotion_detachFrom", _wrap_PeakMotion_detachFrom, METH_VARARGS, "PeakMotion_detachFrom(PeakMotion self, PublicObject parent) -> bool"},
	 { "PeakMotion_detach", _wrap_PeakMotion_detach, METH_O, "PeakMotion_detach(PeakMotion self) -> bool"},
	 { "PeakMotion_clone", _wrap_PeakMotion_clone, METH_O, "PeakMotion_clone(PeakMotion self) -> Object"},
	 { "PeakMotion_accept", _wrap_PeakMotion_accept, METH_VARARGS, "PeakMotion_accept(PeakMotion self, Visitor arg2)"},
	 { "PeakMotion_swigregister", PeakMotion_swigregister, METH_O, NULL},
	 { "PeakMotion_swiginit", PeakMotion_swiginit, METH_VARARGS, NULL},
	 { "Record_ClassName", _wrap_Record_ClassName, METH_NOARGS, "Record_ClassName() -> char const *"},
	 { "Record_TypeInfo", _wrap_Record_TypeInfo, METH_NOARGS, "Record_TypeInfo() -> RTTI"},
	 { "Record_className", _wrap_Record_className, METH_O, "Record_className(Record self) -> char const *"},
	 { "Record_typeInfo", _wrap_Record_typeInfo, METH_O, "Record_typeInfo(Record self) -> RTTI"},
	 { "Record_Cast", _wrap_Record_Cast, METH_VARARGS, "\n"
		"Record_Cast(BaseObject o) -> Record\n"
		"Record_Cast(Seiscomp::Core::BaseObjectPtr o) -> Record\n"
		""},
	 { "Record_ConstCast", _wrap_Record_ConstCast, METH_VARARGS, "\n"
		"Record_ConstCast(BaseObject o) -> Record\n"
		"Record_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> Record\n"
		""},
	 { "Record_serialize", _wrap_Record_serialize, METH_VARARGS, "Record_serialize(Record self, GenericArchive ar)"},
	 { "Record_Meta", _wrap_Record_Meta, METH_NOARGS, "Record_Meta() -> MetaObject"},
	 { "Record_meta", _wrap_Record_meta, METH_O, "Record_meta(Record self) -> MetaObject"},
	 { "new_Record", _wrap_new_Record, METH_VARARGS, "\n"
		"Record(Record other)\n"
		"new_Record(std::string const & publicID) -> Record\n"
		""},
	 { "delete_Record", _wrap_delete_Record, METH_O, "delete_Record(Record self)"},
	 { "Record_Create", _wrap_Record_Create, METH_VARARGS, "\n"
		"Record_Create() -> Record\n"
		"Record_Create(std::string const & publicID) -> Record\n"
		""},
	 { "Record_Find", _wrap_Record_Find, METH_O, "Record_Find(std::string const & publicID) -> Record"},
	 { "Record___eq__", _wrap_Record___eq__, METH_VARARGS, "Record___eq__(Record self, Record other) -> bool"},
	 { "Record___ne__", _wrap_Record___ne__, METH_VARARGS, "Record___ne__(Record self, Record other) -> bool"},
	 { "Record_equal", _wrap_Record_equal, METH_VARARGS, "Record_equal(Record self, Record other) -> bool"},
	 { "Record_setCreationInfo", _wrap_Record_setCreationInfo, METH_VARARGS, "Record_setCreationInfo(Record self, Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const & creationInfo)"},
	 { "Record_creationInfo", _wrap_Record_creationInfo, METH_VARARGS, "\n"
		"Record_creationInfo(Record self) -> CreationInfo\n"
		"Record_creationInfo(Record self) -> CreationInfo\n"
		""},
	 { "Record_setGainUnit", _wrap_Record_setGainUnit, METH_VARARGS, "Record_setGainUnit(Record self, std::string const & gainUnit)"},
	 { "Record_gainUnit", _wrap_Record_gainUnit, METH_O, "Record_gainUnit(Record self) -> std::string const &"},
	 { "Record_setDuration", _wrap_Record_setDuration, METH_VARARGS, "Record_setDuration(Record self, Seiscomp::Core::Optional< double >::Impl const & duration)"},
	 { "Record_duration", _wrap_Record_duration, METH_O, "Record_duration(Record self) -> double"},
	 { "Record_setStartTime", _wrap_Record_setStartTime, METH_VARARGS, "Record_setStartTime(Record self, TimeQuantity startTime)"},
	 { "Record_startTime", _wrap_Record_startTime, METH_VARARGS, "\n"
		"Record_startTime(Record self) -> TimeQuantity\n"
		"Record_startTime(Record self) -> TimeQuantity\n"
		""},
	 { "Record_setOwner", _wrap_Record_setOwner, METH_VARARGS, "Record_setOwner(Record self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl const & owner)"},
	 { "Record_owner", _wrap_Record_owner, METH_VARARGS, "\n"
		"Record_owner(Record self) -> Contact\n"
		"Record_owner(Record self) -> Contact\n"
		""},
	 { "Record_setResampleRateNumerator", _wrap_Record_setResampleRateNumerator, METH_VARARGS, "Record_setResampleRateNumerator(Record self, Seiscomp::Core::Optional< int >::Impl const & resampleRateNumerator)"},
	 { "Record_resampleRateNumerator", _wrap_Record_resampleRateNumerator, METH_O, "Record_resampleRateNumerator(Record self) -> int"},
	 { "Record_setResampleRateDenominator", _wrap_Record_setResampleRateDenominator, METH_VARARGS, "Record_setResampleRateDenominator(Record self, Seiscomp::Core::Optional< int >::Impl const & resampleRateDenominator)"},
	 { "Record_resampleRateDenominator", _wrap_Record_resampleRateDenominator, METH_O, "Record_resampleRateDenominator(Record self) -> int"},
	 { "Record_setWaveformID", _wrap_Record_setWaveformID, METH_VARARGS, "Record_setWaveformID(Record self, WaveformStreamID waveformID)"},
	 { "Record_waveformID", _wrap_Record_waveformID, METH_VARARGS, "\n"
		"Record_waveformID(Record self) -> WaveformStreamID\n"
		"Record_waveformID(Record self) -> WaveformStreamID\n"
		""},
	 { "Record_setWaveformFile", _wrap_Record_setWaveformFile, METH_VARARGS, "Record_setWaveformFile(Record self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl const & waveformFile)"},
	 { "Record_waveformFile", _wrap_Record_waveformFile, METH_VARARGS, "\n"
		"Record_waveformFile(Record self) -> FileResource\n"
		"Record_waveformFile(Record self) -> FileResource\n"
		""},
	 { "Record_add", _wrap_Record_add, METH_VARARGS, "\n"
		"Record_add(Record self, SimpleFilterChainMember obj) -> bool\n"
		"Record_add(Record self, PeakMotion obj) -> bool\n"
		""},
	 { "Record_remove", _wrap_Record_remove, METH_VARARGS, "\n"
		"Record_remove(Record self, SimpleFilterChainMember obj) -> bool\n"
		"Record_remove(Record self, PeakMotion obj) -> bool\n"
		""},
	 { "Record_removeSimpleFilterChainMember", _wrap_Record_removeSimpleFilterChainMember, METH_VARARGS, "\n"
		"Record_removeSimpleFilterChainMember(Record self, size_t i) -> bool\n"
		"Record_removeSimpleFilterChainMember(Record self, SimpleFilterChainMemberIndex i) -> bool\n"
		""},
	 { "Record_removePeakMotion", _wrap_Record_removePeakMotion, METH_VARARGS, "Record_removePeakMotion(Record self, size_t i) -> bool"},
	 { "Record_simpleFilterChainMemberCount", _wrap_Record_simpleFilterChainMemberCount, METH_O, "Record_simpleFilterChainMemberCount(Record self) -> size_t"},
	 { "Record_peakMotionCount", _wrap_Record_peakMotionCount, METH_O, "Record_peakMotionCount(Record self) -> size_t"},
	 { "Record_simpleFilterChainMember", _wrap_Record_simpleFilterChainMember, METH_VARARGS, "\n"
		"Record_simpleFilterChainMember(Record self, size_t i) -> SimpleFilterChainMember\n"
		"Record_simpleFilterChainMember(Record self, SimpleFilterChainMemberIndex i) -> SimpleFilterChainMember\n"
		""},
	 { "Record_peakMotion", _wrap_Record_peakMotion, METH_VARARGS, "Record_peakMotion(Record self, size_t i) -> PeakMotion"},
	 { "Record_findPeakMotion", _wrap_Record_findPeakMotion, METH_VARARGS, "Record_findPeakMotion(Record self, PeakMotion peakMotion) -> PeakMotion"},
	 { "Record_strongMotionParameters", _wrap_Record_strongMotionParameters, METH_O, "Record_strongMotionParameters(Record self) -> StrongMotionParameters"},
	 { "Record_assign", _wrap_Record_assign, METH_VARARGS, "Record_assign(Record self, Object other) -> bool"},
	 { "Record_attachTo", _wrap_Record_attachTo, METH_VARARGS, "Record_attachTo(Record self, PublicObject parent) -> bool"},
	 { "Record_detachFrom", _wrap_Record_detachFrom, METH_VARARGS, "Record_detachFrom(Record self, PublicObject parent) -> bool"},
	 { "Record_detach", _wrap_Record_detach, METH_O, "Record_detach(Record self) -> bool"},
	 { "Record_clone", _wrap_Record_clone, METH_O, "Record_clone(Record self) -> Object"},
	 { "Record_updateChild", _wrap_Record_updateChild, METH_VARARGS, "Record_updateChild(Record self, Object child) -> bool"},
	 { "Record_accept", _wrap_Record_accept, METH_VARARGS, "Record_accept(Record self, Visitor arg2)"},
	 { "Record_swigregister", Record_swigregister, METH_O, NULL},
	 { "Record_swiginit", Record_swiginit, METH_VARARGS, NULL},
	 { "Rupture_ClassName", _wrap_Rupture_ClassName, METH_NOARGS, "Rupture_ClassName() -> char const *"},
	 { "Rupture_TypeInfo", _wrap_Rupture_TypeInfo, METH_NOARGS, "Rupture_TypeInfo() -> RTTI"},
	 { "Rupture_className", _wrap_Rupture_className, METH_O, "Rupture_className(Rupture self) -> char const *"},
	 { "Rupture_typeInfo", _wrap_Rupture_typeInfo, METH_O, "Rupture_typeInfo(Rupture self) -> RTTI"},
	 { "Rupture_Cast", _wrap_Rupture_Cast, METH_VARARGS, "\n"
		"Rupture_Cast(BaseObject o) -> Rupture\n"
		"Rupture_Cast(Seiscomp::Core::BaseObjectPtr o) -> Rupture\n"
		""},
	 { "Rupture_ConstCast", _wrap_Rupture_ConstCast, METH_VARARGS, "\n"
		"Rupture_ConstCast(BaseObject o) -> Rupture\n"
		"Rupture_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> Rupture\n"
		""},
	 { "Rupture_serialize", _wrap_Rupture_serialize, METH_VARARGS, "Rupture_serialize(Rupture self, GenericArchive ar)"},
	 { "Rupture_Meta", _wrap_Rupture_Meta, METH_NOARGS, "Rupture_Meta() -> MetaObject"},
	 { "Rupture_meta", _wrap_Rupture_meta, METH_O, "Rupture_meta(Rupture self) -> MetaObject"},
	 { "new_Rupture", _wrap_new_Rupture, METH_VARARGS, "\n"
		"Rupture(Rupture other)\n"
		"new_Rupture(std::string const & publicID) -> Rupture\n"
		""},
	 { "delete_Rupture", _wrap_delete_Rupture, METH_O, "delete_Rupture(Rupture self)"},
	 { "Rupture_Create", _wrap_Rupture_Create, METH_VARARGS, "\n"
		"Rupture_Create() -> Rupture\n"
		"Rupture_Create(std::string const & publicID) -> Rupture\n"
		""},
	 { "Rupture_Find", _wrap_Rupture_Find, METH_O, "Rupture_Find(std::string const & publicID) -> Rupture"},
	 { "Rupture___eq__", _wrap_Rupture___eq__, METH_VARARGS, "Rupture___eq__(Rupture self, Rupture other) -> bool"},
	 { "Rupture___ne__", _wrap_Rupture___ne__, METH_VARARGS, "Rupture___ne__(Rupture self, Rupture other) -> bool"},
	 { "Rupture_equal", _wrap_Rupture_equal, METH_VARARGS, "Rupture_equal(Rupture self, Rupture other) -> bool"},
	 { "Rupture_setWidth", _wrap_Rupture_setWidth, METH_VARARGS, "Rupture_setWidth(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & width)"},
	 { "Rupture_width", _wrap_Rupture_width, METH_VARARGS, "\n"
		"Rupture_width(Rupture self) -> RealQuantity\n"
		"Rupture_width(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setDisplacement", _wrap_Rupture_setDisplacement, METH_VARARGS, "Rupture_setDisplacement(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & displacement)"},
	 { "Rupture_displacement", _wrap_Rupture_displacement, METH_VARARGS, "\n"
		"Rupture_displacement(Rupture self) -> RealQuantity\n"
		"Rupture_displacement(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setRiseTime", _wrap_Rupture_setRiseTime, METH_VARARGS, "Rupture_setRiseTime(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & riseTime)"},
	 { "Rupture_riseTime", _wrap_Rupture_riseTime, METH_VARARGS, "\n"
		"Rupture_riseTime(Rupture self) -> RealQuantity\n"
		"Rupture_riseTime(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setVtToVs", _wrap_Rupture_setVtToVs, METH_VARARGS, "Rupture_setVtToVs(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & vtToVs)"},
	 { "Rupture_vtToVs", _wrap_Rupture_vtToVs, METH_VARARGS, "\n"
		"Rupture_vtToVs(Rupture self) -> RealQuantity\n"
		"Rupture_vtToVs(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setShallowAsperityDepth", _wrap_Rupture_setShallowAsperityDepth, METH_VARARGS, "Rupture_setShallowAsperityDepth(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & shallowAsperityDepth)"},
	 { "Rupture_shallowAsperityDepth", _wrap_Rupture_shallowAsperityDepth, METH_VARARGS, "\n"
		"Rupture_shallowAsperityDepth(Rupture self) -> RealQuantity\n"
		"Rupture_shallowAsperityDepth(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setShallowAsperity", _wrap_Rupture_setShallowAsperity, METH_VARARGS, "Rupture_setShallowAsperity(Rupture self, Seiscomp::Core::Optional< bool >::Impl const & shallowAsperity)"},
	 { "Rupture_shallowAsperity", _wrap_Rupture_shallowAsperity, METH_O, "Rupture_shallowAsperity(Rupture self) -> bool"},
	 { "Rupture_setLiteratureSource", _wrap_Rupture_setLiteratureSource, METH_VARARGS, "Rupture_setLiteratureSource(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl const & literatureSource)"},
	 { "Rupture_literatureSource", _wrap_Rupture_literatureSource, METH_VARARGS, "\n"
		"Rupture_literatureSource(Rupture self) -> LiteratureSource\n"
		"Rupture_literatureSource(Rupture self) -> LiteratureSource\n"
		""},
	 { "Rupture_setSlipVelocity", _wrap_Rupture_setSlipVelocity, METH_VARARGS, "Rupture_setSlipVelocity(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & slipVelocity)"},
	 { "Rupture_slipVelocity", _wrap_Rupture_slipVelocity, METH_VARARGS, "\n"
		"Rupture_slipVelocity(Rupture self) -> RealQuantity\n"
		"Rupture_slipVelocity(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setStrike", _wrap_Rupture_setStrike, METH_VARARGS, "Rupture_setStrike(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & strike)"},
	 { "Rupture_strike", _wrap_Rupture_strike, METH_VARARGS, "\n"
		"Rupture_strike(Rupture self) -> RealQuantity\n"
		"Rupture_strike(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setLength", _wrap_Rupture_setLength, METH_VARARGS, "Rupture_setLength(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & length)"},
	 { "Rupture_length", _wrap_Rupture_length, METH_VARARGS, "\n"
		"Rupture_length(Rupture self) -> RealQuantity\n"
		"Rupture_length(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setArea", _wrap_Rupture_setArea, METH_VARARGS, "Rupture_setArea(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & area)"},
	 { "Rupture_area", _wrap_Rupture_area, METH_VARARGS, "\n"
		"Rupture_area(Rupture self) -> RealQuantity\n"
		"Rupture_area(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setRuptureVelocity", _wrap_Rupture_setRuptureVelocity, METH_VARARGS, "Rupture_setRuptureVelocity(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & ruptureVelocity)"},
	 { "Rupture_ruptureVelocity", _wrap_Rupture_ruptureVelocity, METH_VARARGS, "\n"
		"Rupture_ruptureVelocity(Rupture self) -> RealQuantity\n"
		"Rupture_ruptureVelocity(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setStressdrop", _wrap_Rupture_setStressdrop, METH_VARARGS, "Rupture_setStressdrop(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & stressdrop)"},
	 { "Rupture_stressdrop", _wrap_Rupture_stressdrop, METH_VARARGS, "\n"
		"Rupture_stressdrop(Rupture self) -> RealQuantity\n"
		"Rupture_stressdrop(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setMomentReleaseTop5km", _wrap_Rupture_setMomentReleaseTop5km, METH_VARARGS, "Rupture_setMomentReleaseTop5km(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::RealQuantity >::Impl const & momentReleaseTop5km)"},
	 { "Rupture_momentReleaseTop5km", _wrap_Rupture_momentReleaseTop5km, METH_VARARGS, "\n"
		"Rupture_momentReleaseTop5km(Rupture self) -> RealQuantity\n"
		"Rupture_momentReleaseTop5km(Rupture self) -> RealQuantity\n"
		""},
	 { "Rupture_setFwHwIndicator", _wrap_Rupture_setFwHwIndicator, METH_VARARGS, "Rupture_setFwHwIndicator(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl const & fwHwIndicator)"},
	 { "Rupture_fwHwIndicator", _wrap_Rupture_fwHwIndicator, METH_O, "Rupture_fwHwIndicator(Rupture self) -> Seiscomp::DataModel::StrongMotion::FwHwIndicator"},
	 { "Rupture_setRuptureGeometryWKT", _wrap_Rupture_setRuptureGeometryWKT, METH_VARARGS, "Rupture_setRuptureGeometryWKT(Rupture self, std::string const & ruptureGeometryWKT)"},
	 { "Rupture_ruptureGeometryWKT", _wrap_Rupture_ruptureGeometryWKT, METH_O, "Rupture_ruptureGeometryWKT(Rupture self) -> std::string const &"},
	 { "Rupture_setFaultID", _wrap_Rupture_setFaultID, METH_VARARGS, "Rupture_setFaultID(Rupture self, std::string const & faultID)"},
	 { "Rupture_faultID", _wrap_Rupture_faultID, METH_O, "Rupture_faultID(Rupture self) -> std::string const &"},
	 { "Rupture_setSurfaceRupture", _wrap_Rupture_setSurfaceRupture, METH_VARARGS, "Rupture_setSurfaceRupture(Rupture self, Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl const & surfaceRupture)"},
	 { "Rupture_surfaceRupture", _wrap_Rupture_surfaceRupture, METH_VARARGS, "\n"
		"Rupture_surfaceRupture(Rupture self) -> SurfaceRupture\n"
		"Rupture_surfaceRupture(Rupture self) -> SurfaceRupture\n"
		""},
	 { "Rupture_setCentroidReference", _wrap_Rupture_setCentroidReference, METH_VARARGS, "Rupture_setCentroidReference(Rupture self, std::string const & centroidReference)"},
	 { "Rupture_centroidReference", _wrap_Rupture_centroidReference, METH_O, "Rupture_centroidReference(Rupture self) -> std::string const &"},
	 { "Rupture_strongOriginDescription", _wrap_Rupture_strongOriginDescription, METH_O, "Rupture_strongOriginDescription(Rupture self) -> StrongOriginDescription"},
	 { "Rupture_assign", _wrap_Rupture_assign, METH_VARARGS, "Rupture_assign(Rupture self, Object other) -> bool"},
	 { "Rupture_attachTo", _wrap_Rupture_attachTo, METH_VARARGS, "Rupture_attachTo(Rupture self, PublicObject parent) -> bool"},
	 { "Rupture_detachFrom", _wrap_Rupture_detachFrom, METH_VARARGS, "Rupture_detachFrom(Rupture self, PublicObject parent) -> bool"},
	 { "Rupture_detach", _wrap_Rupture_detach, METH_O, "Rupture_detach(Rupture self) -> bool"},
	 { "Rupture_clone", _wrap_Rupture_clone, METH_O, "Rupture_clone(Rupture self) -> Object"},
	 { "Rupture_updateChild", _wrap_Rupture_updateChild, METH_VARARGS, "Rupture_updateChild(Rupture self, Object child) -> bool"},
	 { "Rupture_accept", _wrap_Rupture_accept, METH_VARARGS, "Rupture_accept(Rupture self, Visitor arg2)"},
	 { "Rupture_swigregister", Rupture_swigregister, METH_O, NULL},
	 { "Rupture_swiginit", Rupture_swiginit, METH_VARARGS, NULL},
	 { "StrongOriginDescription_ClassName", _wrap_StrongOriginDescription_ClassName, METH_NOARGS, "StrongOriginDescription_ClassName() -> char const *"},
	 { "StrongOriginDescription_TypeInfo", _wrap_StrongOriginDescription_TypeInfo, METH_NOARGS, "StrongOriginDescription_TypeInfo() -> RTTI"},
	 { "StrongOriginDescription_className", _wrap_StrongOriginDescription_className, METH_O, "StrongOriginDescription_className(StrongOriginDescription self) -> char const *"},
	 { "StrongOriginDescription_typeInfo", _wrap_StrongOriginDescription_typeInfo, METH_O, "StrongOriginDescription_typeInfo(StrongOriginDescription self) -> RTTI"},
	 { "StrongOriginDescription_Cast", _wrap_StrongOriginDescription_Cast, METH_VARARGS, "\n"
		"StrongOriginDescription_Cast(BaseObject o) -> StrongOriginDescription\n"
		"StrongOriginDescription_Cast(Seiscomp::Core::BaseObjectPtr o) -> StrongOriginDescription\n"
		""},
	 { "StrongOriginDescription_ConstCast", _wrap_StrongOriginDescription_ConstCast, METH_VARARGS, "\n"
		"StrongOriginDescription_ConstCast(BaseObject o) -> StrongOriginDescription\n"
		"StrongOriginDescription_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> StrongOriginDescription\n"
		""},
	 { "StrongOriginDescription_serialize", _wrap_StrongOriginDescription_serialize, METH_VARARGS, "StrongOriginDescription_serialize(StrongOriginDescription self, GenericArchive ar)"},
	 { "StrongOriginDescription_Meta", _wrap_StrongOriginDescription_Meta, METH_NOARGS, "StrongOriginDescription_Meta() -> MetaObject"},
	 { "StrongOriginDescription_meta", _wrap_StrongOriginDescription_meta, METH_O, "StrongOriginDescription_meta(StrongOriginDescription self) -> MetaObject"},
	 { "new_StrongOriginDescription", _wrap_new_StrongOriginDescription, METH_VARARGS, "\n"
		"StrongOriginDescription(StrongOriginDescription other)\n"
		"new_StrongOriginDescription(std::string const & publicID) -> StrongOriginDescription\n"
		""},
	 { "delete_StrongOriginDescription", _wrap_delete_StrongOriginDescription, METH_O, "delete_StrongOriginDescription(StrongOriginDescription self)"},
	 { "StrongOriginDescription_Create", _wrap_StrongOriginDescription_Create, METH_VARARGS, "\n"
		"StrongOriginDescription_Create() -> StrongOriginDescription\n"
		"StrongOriginDescription_Create(std::string const & publicID) -> StrongOriginDescription\n"
		""},
	 { "StrongOriginDescription_Find", _wrap_StrongOriginDescription_Find, METH_O, "StrongOriginDescription_Find(std::string const & publicID) -> StrongOriginDescription"},
	 { "StrongOriginDescription___eq__", _wrap_StrongOriginDescription___eq__, METH_VARARGS, "StrongOriginDescription___eq__(StrongOriginDescription self, StrongOriginDescription other) -> bool"},
	 { "StrongOriginDescription___ne__", _wrap_StrongOriginDescription___ne__, METH_VARARGS, "StrongOriginDescription___ne__(StrongOriginDescription self, StrongOriginDescription other) -> bool"},
	 { "StrongOriginDescription_equal", _wrap_StrongOriginDescription_equal, METH_VARARGS, "StrongOriginDescription_equal(StrongOriginDescription self, StrongOriginDescription other) -> bool"},
	 { "StrongOriginDescription_setOriginID", _wrap_StrongOriginDescription_setOriginID, METH_VARARGS, "StrongOriginDescription_setOriginID(StrongOriginDescription self, std::string const & originID)"},
	 { "StrongOriginDescription_originID", _wrap_StrongOriginDescription_originID, METH_O, "StrongOriginDescription_originID(StrongOriginDescription self) -> std::string const &"},
	 { "StrongOriginDescription_setWaveformCount", _wrap_StrongOriginDescription_setWaveformCount, METH_VARARGS, "StrongOriginDescription_setWaveformCount(StrongOriginDescription self, Seiscomp::Core::Optional< int >::Impl const & waveformCount)"},
	 { "StrongOriginDescription_waveformCount", _wrap_StrongOriginDescription_waveformCount, METH_O, "StrongOriginDescription_waveformCount(StrongOriginDescription self) -> int"},
	 { "StrongOriginDescription_setCreationInfo", _wrap_StrongOriginDescription_setCreationInfo, METH_VARARGS, "StrongOriginDescription_setCreationInfo(StrongOriginDescription self, Seiscomp::Core::Optional< Seiscomp::DataModel::CreationInfo >::Impl const & creationInfo)"},
	 { "StrongOriginDescription_creationInfo", _wrap_StrongOriginDescription_creationInfo, METH_VARARGS, "\n"
		"StrongOriginDescription_creationInfo(StrongOriginDescription self) -> CreationInfo\n"
		"StrongOriginDescription_creationInfo(StrongOriginDescription self) -> CreationInfo\n"
		""},
	 { "StrongOriginDescription_add", _wrap_StrongOriginDescription_add, METH_VARARGS, "\n"
		"StrongOriginDescription_add(StrongOriginDescription self, EventRecordReference obj) -> bool\n"
		"StrongOriginDescription_add(StrongOriginDescription self, Rupture obj) -> bool\n"
		""},
	 { "StrongOriginDescription_remove", _wrap_StrongOriginDescription_remove, METH_VARARGS, "\n"
		"StrongOriginDescription_remove(StrongOriginDescription self, EventRecordReference obj) -> bool\n"
		"StrongOriginDescription_remove(StrongOriginDescription self, Rupture obj) -> bool\n"
		""},
	 { "StrongOriginDescription_removeEventRecordReference", _wrap_StrongOriginDescription_removeEventRecordReference, METH_VARARGS, "StrongOriginDescription_removeEventRecordReference(StrongOriginDescription self, size_t i) -> bool"},
	 { "StrongOriginDescription_removeRupture", _wrap_StrongOriginDescription_removeRupture, METH_VARARGS, "StrongOriginDescription_removeRupture(StrongOriginDescription self, size_t i) -> bool"},
	 { "StrongOriginDescription_eventRecordReferenceCount", _wrap_StrongOriginDescription_eventRecordReferenceCount, METH_O, "StrongOriginDescription_eventRecordReferenceCount(StrongOriginDescription self) -> size_t"},
	 { "StrongOriginDescription_ruptureCount", _wrap_StrongOriginDescription_ruptureCount, METH_O, "StrongOriginDescription_ruptureCount(StrongOriginDescription self) -> size_t"},
	 { "StrongOriginDescription_eventRecordReference", _wrap_StrongOriginDescription_eventRecordReference, METH_VARARGS, "StrongOriginDescription_eventRecordReference(StrongOriginDescription self, size_t i) -> EventRecordReference"},
	 { "StrongOriginDescription_rupture", _wrap_StrongOriginDescription_rupture, METH_VARARGS, "StrongOriginDescription_rupture(StrongOriginDescription self, size_t i) -> Rupture"},
	 { "StrongOriginDescription_findEventRecordReference", _wrap_StrongOriginDescription_findEventRecordReference, METH_VARARGS, "StrongOriginDescription_findEventRecordReference(StrongOriginDescription self, EventRecordReference eventRecordReference) -> EventRecordReference"},
	 { "StrongOriginDescription_findRupture", _wrap_StrongOriginDescription_findRupture, METH_VARARGS, "StrongOriginDescription_findRupture(StrongOriginDescription self, std::string const & publicID) -> Rupture"},
	 { "StrongOriginDescription_strongMotionParameters", _wrap_StrongOriginDescription_strongMotionParameters, METH_O, "StrongOriginDescription_strongMotionParameters(StrongOriginDescription self) -> StrongMotionParameters"},
	 { "StrongOriginDescription_assign", _wrap_StrongOriginDescription_assign, METH_VARARGS, "StrongOriginDescription_assign(StrongOriginDescription self, Object other) -> bool"},
	 { "StrongOriginDescription_attachTo", _wrap_StrongOriginDescription_attachTo, METH_VARARGS, "StrongOriginDescription_attachTo(StrongOriginDescription self, PublicObject parent) -> bool"},
	 { "StrongOriginDescription_detachFrom", _wrap_StrongOriginDescription_detachFrom, METH_VARARGS, "StrongOriginDescription_detachFrom(StrongOriginDescription self, PublicObject parent) -> bool"},
	 { "StrongOriginDescription_detach", _wrap_StrongOriginDescription_detach, METH_O, "StrongOriginDescription_detach(StrongOriginDescription self) -> bool"},
	 { "StrongOriginDescription_clone", _wrap_StrongOriginDescription_clone, METH_O, "StrongOriginDescription_clone(StrongOriginDescription self) -> Object"},
	 { "StrongOriginDescription_updateChild", _wrap_StrongOriginDescription_updateChild, METH_VARARGS, "StrongOriginDescription_updateChild(StrongOriginDescription self, Object child) -> bool"},
	 { "StrongOriginDescription_accept", _wrap_StrongOriginDescription_accept, METH_VARARGS, "StrongOriginDescription_accept(StrongOriginDescription self, Visitor arg2)"},
	 { "StrongOriginDescription_swigregister", StrongOriginDescription_swigregister, METH_O, NULL},
	 { "StrongOriginDescription_swiginit", StrongOriginDescription_swiginit, METH_VARARGS, NULL},
	 { "StrongMotionParameters_ClassName", _wrap_StrongMotionParameters_ClassName, METH_NOARGS, "StrongMotionParameters_ClassName() -> char const *"},
	 { "StrongMotionParameters_TypeInfo", _wrap_StrongMotionParameters_TypeInfo, METH_NOARGS, "StrongMotionParameters_TypeInfo() -> RTTI"},
	 { "StrongMotionParameters_className", _wrap_StrongMotionParameters_className, METH_O, "StrongMotionParameters_className(StrongMotionParameters self) -> char const *"},
	 { "StrongMotionParameters_typeInfo", _wrap_StrongMotionParameters_typeInfo, METH_O, "StrongMotionParameters_typeInfo(StrongMotionParameters self) -> RTTI"},
	 { "StrongMotionParameters_Cast", _wrap_StrongMotionParameters_Cast, METH_VARARGS, "\n"
		"StrongMotionParameters_Cast(BaseObject o) -> StrongMotionParameters\n"
		"StrongMotionParameters_Cast(Seiscomp::Core::BaseObjectPtr o) -> StrongMotionParameters\n"
		""},
	 { "StrongMotionParameters_ConstCast", _wrap_StrongMotionParameters_ConstCast, METH_VARARGS, "\n"
		"StrongMotionParameters_ConstCast(BaseObject o) -> StrongMotionParameters\n"
		"StrongMotionParameters_ConstCast(Seiscomp::Core::BaseObjectCPtr o) -> StrongMotionParameters\n"
		""},
	 { "StrongMotionParameters_serialize", _wrap_StrongMotionParameters_serialize, METH_VARARGS, "StrongMotionParameters_serialize(StrongMotionParameters self, GenericArchive ar)"},
	 { "StrongMotionParameters_Meta", _wrap_StrongMotionParameters_Meta, METH_NOARGS, "StrongMotionParameters_Meta() -> MetaObject"},
	 { "StrongMotionParameters_meta", _wrap_StrongMotionParameters_meta, METH_O, "StrongMotionParameters_meta(StrongMotionParameters self) -> MetaObject"},
	 { "new_StrongMotionParameters", _wrap_new_StrongMotionParameters, METH_VARARGS, "\n"
		"StrongMotionParameters()\n"
		"new_StrongMotionParameters(StrongMotionParameters other) -> StrongMotionParameters\n"
		""},
	 { "delete_StrongMotionParameters", _wrap_delete_StrongMotionParameters, METH_O, "delete_StrongMotionParameters(StrongMotionParameters self)"},
	 { "StrongMotionParameters___eq__", _wrap_StrongMotionParameters___eq__, METH_VARARGS, "StrongMotionParameters___eq__(StrongMotionParameters self, StrongMotionParameters other) -> bool"},
	 { "StrongMotionParameters___ne__", _wrap_StrongMotionParameters___ne__, METH_VARARGS, "StrongMotionParameters___ne__(StrongMotionParameters self, StrongMotionParameters other) -> bool"},
	 { "StrongMotionParameters_equal", _wrap_StrongMotionParameters_equal, METH_VARARGS, "StrongMotionParameters_equal(StrongMotionParameters self, StrongMotionParameters other) -> bool"},
	 { "StrongMotionParameters_add", _wrap_StrongMotionParameters_add, METH_VARARGS, "\n"
		"StrongMotionParameters_add(StrongMotionParameters self, SimpleFilter obj) -> bool\n"
		"StrongMotionParameters_add(StrongMotionParameters self, Record obj) -> bool\n"
		"StrongMotionParameters_add(StrongMotionParameters self, StrongOriginDescription obj) -> bool\n"
		""},
	 { "StrongMotionParameters_remove", _wrap_StrongMotionParameters_remove, METH_VARARGS, "\n"
		"StrongMotionParameters_remove(StrongMotionParameters self, SimpleFilter obj) -> bool\n"
		"StrongMotionParameters_remove(StrongMotionParameters self, Record obj) -> bool\n"
		"StrongMotionParameters_remove(StrongMotionParameters self, StrongOriginDescription obj) -> bool\n"
		""},
	 { "StrongMotionParameters_removeSimpleFilter", _wrap_StrongMotionParameters_removeSimpleFilter, METH_VARARGS, "StrongMotionParameters_removeSimpleFilter(StrongMotionParameters self, size_t i) -> bool"},
	 { "StrongMotionParameters_removeRecord", _wrap_StrongMotionParameters_removeRecord, METH_VARARGS, "StrongMotionParameters_removeRecord(StrongMotionParameters self, size_t i) -> bool"},
	 { "StrongMotionParameters_removeStrongOriginDescription", _wrap_StrongMotionParameters_removeStrongOriginDescription, METH_VARARGS, "StrongMotionParameters_removeStrongOriginDescription(StrongMotionParameters self, size_t i) -> bool"},
	 { "StrongMotionParameters_simpleFilterCount", _wrap_StrongMotionParameters_simpleFilterCount, METH_O, "StrongMotionParameters_simpleFilterCount(StrongMotionParameters self) -> size_t"},
	 { "StrongMotionParameters_recordCount", _wrap_StrongMotionParameters_recordCount, METH_O, "StrongMotionParameters_recordCount(StrongMotionParameters self) -> size_t"},
	 { "StrongMotionParameters_strongOriginDescriptionCount", _wrap_StrongMotionParameters_strongOriginDescriptionCount, METH_O, "StrongMotionParameters_strongOriginDescriptionCount(StrongMotionParameters self) -> size_t"},
	 { "StrongMotionParameters_simpleFilter", _wrap_StrongMotionParameters_simpleFilter, METH_VARARGS, "StrongMotionParameters_simpleFilter(StrongMotionParameters self, size_t i) -> SimpleFilter"},
	 { "StrongMotionParameters_record", _wrap_StrongMotionParameters_record, METH_VARARGS, "StrongMotionParameters_record(StrongMotionParameters self, size_t i) -> Record"},
	 { "StrongMotionParameters_strongOriginDescription", _wrap_StrongMotionParameters_strongOriginDescription, METH_VARARGS, "StrongMotionParameters_strongOriginDescription(StrongMotionParameters self, size_t i) -> StrongOriginDescription"},
	 { "StrongMotionParameters_findSimpleFilter", _wrap_StrongMotionParameters_findSimpleFilter, METH_VARARGS, "StrongMotionParameters_findSimpleFilter(StrongMotionParameters self, std::string const & publicID) -> SimpleFilter"},
	 { "StrongMotionParameters_findRecord", _wrap_StrongMotionParameters_findRecord, METH_VARARGS, "StrongMotionParameters_findRecord(StrongMotionParameters self, std::string const & publicID) -> Record"},
	 { "StrongMotionParameters_findStrongOriginDescription", _wrap_StrongMotionParameters_findStrongOriginDescription, METH_VARARGS, "StrongMotionParameters_findStrongOriginDescription(StrongMotionParameters self, std::string const & publicID) -> StrongOriginDescription"},
	 { "StrongMotionParameters_assign", _wrap_StrongMotionParameters_assign, METH_VARARGS, "StrongMotionParameters_assign(StrongMotionParameters self, Object other) -> bool"},
	 { "StrongMotionParameters_attachTo", _wrap_StrongMotionParameters_attachTo, METH_VARARGS, "StrongMotionParameters_attachTo(StrongMotionParameters self, PublicObject parent) -> bool"},
	 { "StrongMotionParameters_detachFrom", _wrap_StrongMotionParameters_detachFrom, METH_VARARGS, "StrongMotionParameters_detachFrom(StrongMotionParameters self, PublicObject parent) -> bool"},
	 { "StrongMotionParameters_detach", _wrap_StrongMotionParameters_detach, METH_O, "StrongMotionParameters_detach(StrongMotionParameters self) -> bool"},
	 { "StrongMotionParameters_clone", _wrap_StrongMotionParameters_clone, METH_O, "StrongMotionParameters_clone(StrongMotionParameters self) -> Object"},
	 { "StrongMotionParameters_updateChild", _wrap_StrongMotionParameters_updateChild, METH_VARARGS, "StrongMotionParameters_updateChild(StrongMotionParameters self, Object child) -> bool"},
	 { "StrongMotionParameters_accept", _wrap_StrongMotionParameters_accept, METH_VARARGS, "StrongMotionParameters_accept(StrongMotionParameters self, Visitor arg2)"},
	 { "StrongMotionParameters_swigregister", StrongMotionParameters_swigregister, METH_O, NULL},
	 { "StrongMotionParameters_swiginit", StrongMotionParameters_swiginit, METH_VARARGS, NULL},
	 { "new_StrongMotionReader", _wrap_new_StrongMotionReader, METH_O, "new_StrongMotionReader(DatabaseInterface dbDriver) -> StrongMotionReader"},
	 { "delete_StrongMotionReader", _wrap_delete_StrongMotionReader, METH_O, "delete_StrongMotionReader(StrongMotionReader self)"},
	 { "StrongMotionReader_loadStrongMotionParameters", _wrap_StrongMotionReader_loadStrongMotionParameters, METH_O, "StrongMotionReader_loadStrongMotionParameters(StrongMotionReader self) -> StrongMotionParameters"},
	 { "StrongMotionReader_loadSimpleFilters", _wrap_StrongMotionReader_loadSimpleFilters, METH_VARARGS, "StrongMotionReader_loadSimpleFilters(StrongMotionReader self, StrongMotionParameters arg2) -> int"},
	 { "StrongMotionReader_loadRecords", _wrap_StrongMotionReader_loadRecords, METH_VARARGS, "StrongMotionReader_loadRecords(StrongMotionReader self, StrongMotionParameters arg2) -> int"},
	 { "StrongMotionReader_loadStrongOriginDescriptions", _wrap_StrongMotionReader_loadStrongOriginDescriptions, METH_VARARGS, "StrongMotionReader_loadStrongOriginDescriptions(StrongMotionReader self, StrongMotionParameters arg2) -> int"},
	 { "StrongMotionReader_loadFilterParameters", _wrap_StrongMotionReader_loadFilterParameters, METH_VARARGS, "StrongMotionReader_loadFilterParameters(StrongMotionReader self, SimpleFilter arg2) -> int"},
	 { "StrongMotionReader_loadSimpleFilterChainMembers", _wrap_StrongMotionReader_loadSimpleFilterChainMembers, METH_VARARGS, "StrongMotionReader_loadSimpleFilterChainMembers(StrongMotionReader self, Record arg2) -> int"},
	 { "StrongMotionReader_loadPeakMotions", _wrap_StrongMotionReader_loadPeakMotions, METH_VARARGS, "StrongMotionReader_loadPeakMotions(StrongMotionReader self, Record arg2) -> int"},
	 { "StrongMotionReader_load", _wrap_StrongMotionReader_load, METH_VARARGS, "\n"
		"StrongMotionReader_load(StrongMotionReader self, StrongMotionParameters arg2) -> int\n"
		"StrongMotionReader_load(StrongMotionReader self, SimpleFilter arg2) -> int\n"
		"StrongMotionReader_load(StrongMotionReader self, Record arg2) -> int\n"
		"StrongMotionReader_load(StrongMotionReader self, StrongOriginDescription arg2) -> int\n"
		""},
	 { "StrongMotionReader_loadEventRecordReferences", _wrap_StrongMotionReader_loadEventRecordReferences, METH_VARARGS, "StrongMotionReader_loadEventRecordReferences(StrongMotionReader self, StrongOriginDescription arg2) -> int"},
	 { "StrongMotionReader_loadRuptures", _wrap_StrongMotionReader_loadRuptures, METH_VARARGS, "StrongMotionReader_loadRuptures(StrongMotionReader self, StrongOriginDescription arg2) -> int"},
	 { "StrongMotionReader_swigregister", StrongMotionReader_swigregister, METH_O, NULL},
	 { "StrongMotionReader_swiginit", StrongMotionReader_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_Seiscomp__ArrayTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Array *) x));
}
static void *_p_Seiscomp__BitSetTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::BitSet *) x));
}
static void *_p_Seiscomp__Core__DataMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *)(Seiscomp::Core::GenericMessage< Seiscomp::Core::BaseObject > *) ((Seiscomp::Core::DataMessage *) x));
}
static void *_p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::Core::GenericMessage< Seiscomp::Core::BaseObject > *) x));
}
static void *_p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::Core::GenericMessage< Seiscomp::DataModel::Notifier > *) x));
}
static void *_p_Seiscomp__Core__GreensFunctionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Core::GreensFunction *) x));
}
static void *_p_Seiscomp__Core__InterruptibleObjectTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Core::InterruptibleObject *) x));
}
static void *_p_Seiscomp__Core__MessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Core::Message *) x));
}
static void *_p_Seiscomp__DataModel__AccessTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Access *) x));
}
static void *_p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Amplitude *) x));
}
static void *_p_Seiscomp__DataModel__AmplitudeReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::AmplitudeReference *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkLog *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkRequest *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestLineTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::ArclinkRequestLine *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestSummaryTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::ArclinkRequestSummary *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkStatusLineTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::ArclinkStatusLine *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkUser *) x));
}
static void *_p_Seiscomp__DataModel__ArrivalTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Arrival *) x));
}
static void *_p_Seiscomp__DataModel__ArtificialEventParametersMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::DataModel::ArtificialEventParametersMessage *) x));
}
static void *_p_Seiscomp__DataModel__ArtificialOriginMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::DataModel::ArtificialOriginMessage *) x));
}
static void *_p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::AuxDevice *) x));
}
static void *_p_Seiscomp__DataModel__AuxSourceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::AuxSource *) x));
}
static void *_p_Seiscomp__DataModel__AuxStreamTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::AuxStream *) x));
}
static void *_p_Seiscomp__DataModel__AxisTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Axis *) x));
}
static void *_p_Seiscomp__DataModel__BlobTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Blob *) x));
}
static void *_p_Seiscomp__DataModel__CommentTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Comment *) x));
}
static void *_p_Seiscomp__DataModel__ComplexArrayTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::ComplexArray *) x));
}
static void *_p_Seiscomp__DataModel__CompositeTimeTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::CompositeTime *) x));
}
static void *_p_Seiscomp__DataModel__ConfidenceEllipsoidTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::ConfidenceEllipsoid *) x));
}
static void *_p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Config *) x));
}
static void *_p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ConfigModule *) x));
}
static void *_p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ConfigStation *) x));
}
static void *_p_Seiscomp__DataModel__ConfigSyncMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::DataModel::ConfigSyncMessage *) x));
}
static void *_p_Seiscomp__DataModel__CreationInfoTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::CreationInfo *) x));
}
static void *_p_Seiscomp__DataModel__DataAttributeExtentTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::DataAttributeExtent *) x));
}
static void *_p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::DataAvailability *) x));
}
static void *_p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::DataExtent *) x));
}
static void *_p_Seiscomp__DataModel__DataSegmentTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::DataSegment *) x));
}
static void *_p_Seiscomp__DataModel__DataUsedTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::DataUsed *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Observer *) ((Seiscomp::DataModel::DatabaseArchive *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseIteratorTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::DatabaseIterator *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Observer *)(Seiscomp::DataModel::DatabaseArchive *)(Seiscomp::DataModel::DatabaseReader *) ((Seiscomp::DataModel::DatabaseQuery *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Observer *)(Seiscomp::DataModel::DatabaseArchive *) ((Seiscomp::DataModel::DatabaseReader *) x));
}
static void *_p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Datalogger *) x));
}
static void *_p_Seiscomp__DataModel__DataloggerCalibrationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::DataloggerCalibration *) x));
}
static void *_p_Seiscomp__DataModel__DecimationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Decimation *) x));
}
static void *_p_Seiscomp__DataModel__EventTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Event *) x));
}
static void *_p_Seiscomp__DataModel__EventDescriptionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::EventDescription *) x));
}
static void *_p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::EventParameters *) x));
}
static void *_p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::FocalMechanism *) x));
}
static void *_p_Seiscomp__DataModel__FocalMechanismReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::FocalMechanismReference *) x));
}
static void *_p_Seiscomp__DataModel__IntegerQuantityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::IntegerQuantity *) x));
}
static void *_p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Inventory *) x));
}
static void *_p_Seiscomp__DataModel__InventorySyncMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *) ((Seiscomp::DataModel::InventorySyncMessage *) x));
}
static void *_p_Seiscomp__DataModel__JournalEntryTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::JournalEntry *) x));
}
static void *_p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Journaling *) x));
}
static void *_p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Magnitude *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::MomentTensor *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorComponentContributionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::MomentTensorComponentContribution *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorPhaseSettingTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::MomentTensorPhaseSetting *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::MomentTensorStationContribution *) x));
}
static void *_p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Network *) x));
}
static void *_p_Seiscomp__DataModel__NodalPlaneTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::NodalPlane *) x));
}
static void *_p_Seiscomp__DataModel__NodalPlanesTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::NodalPlanes *) x));
}
static void *_p_Seiscomp__DataModel__NotifierTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Notifier *) x));
}
static void *_p_Seiscomp__DataModel__NotifierMessageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::Message *)(Seiscomp::Core::GenericMessage< Seiscomp::DataModel::Notifier > *) ((Seiscomp::DataModel::NotifierMessage *) x));
}
static void *_p_Seiscomp__DataModel__ObjectTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Object *) x));
}
static void *_p_Seiscomp__DataModel__ObserverTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Observer *) x));
}
static void *_p_Seiscomp__DataModel__OriginTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Origin *) x));
}
static void *_p_Seiscomp__DataModel__OriginQualityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::OriginQuality *) x));
}
static void *_p_Seiscomp__DataModel__OriginReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::OriginReference *) x));
}
static void *_p_Seiscomp__DataModel__OriginUncertaintyTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::OriginUncertainty *) x));
}
static void *_p_Seiscomp__DataModel__OutageTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Outage *) x));
}
static void *_p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Parameter *) x));
}
static void *_p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ParameterSet *) x));
}
static void *_p_Seiscomp__DataModel__PhaseTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Phase *) x));
}
static void *_p_Seiscomp__DataModel__PickTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Pick *) x));
}
static void *_p_Seiscomp__DataModel__PickReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::PickReference *) x));
}
static void *_p_Seiscomp__DataModel__PrincipalAxesTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::PrincipalAxes *) x));
}
static void *_p_Seiscomp__DataModel__PublicObjectTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::PublicObject *) x));
}
static void *_p_Seiscomp__DataModel__PublicObjectCacheTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::PublicObjectCache *) x));
}
static void *_p_Seiscomp__DataModel__PublicObjectRingBufferTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::PublicObjectCache *) ((Seiscomp::DataModel::PublicObjectRingBuffer *) x));
}
static void *_p_Seiscomp__DataModel__PublicObjectTimeSpanBufferTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::PublicObjectCache *) ((Seiscomp::DataModel::PublicObjectTimeSpanBuffer *) x));
}
static void *_p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::QCLog *) x));
}
static void *_p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::QualityControl *) x));
}
static void *_p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Reading *) x));
}
static void *_p_Seiscomp__DataModel__RealArrayTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::RealArray *) x));
}
static void *_p_Seiscomp__DataModel__RealPDF1DTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::RealPDF1D *) x));
}
static void *_p_Seiscomp__DataModel__RealQuantityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::RealQuantity *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseFAP *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseFIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseIIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponsePAZ *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponsePolynomial *) x));
}
static void *_p_Seiscomp__DataModel__RouteTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Route *) x));
}
static void *_p_Seiscomp__DataModel__RouteArclinkTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::RouteArclink *) x));
}
static void *_p_Seiscomp__DataModel__RouteSeedlinkTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::RouteSeedlink *) x));
}
static void *_p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Routing *) x));
}
static void *_p_Seiscomp__DataModel__SensorTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Sensor *) x));
}
static void *_p_Seiscomp__DataModel__SensorCalibrationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::SensorCalibration *) x));
}
static void *_p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::SensorLocation *) x));
}
static void *_p_Seiscomp__DataModel__SetupTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::Setup *) x));
}
static void *_p_Seiscomp__DataModel__SourceTimeFunctionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::SourceTimeFunction *) x));
}
static void *_p_Seiscomp__DataModel__StationTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Station *) x));
}
static void *_p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StationGroup *) x));
}
static void *_p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StationMagnitude *) x));
}
static void *_p_Seiscomp__DataModel__StationMagnitudeContributionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StationMagnitudeContribution *) x));
}
static void *_p_Seiscomp__DataModel__StationReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StationReference *) x));
}
static void *_p_Seiscomp__DataModel__StreamTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Stream *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__ContactTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::StrongMotion::Contact *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__EventRecordReferenceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StrongMotion::EventRecordReference *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__FileResourceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::StrongMotion::FileResource *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__FilterParameterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StrongMotion::FilterParameter *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__LiteratureSourceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::StrongMotion::LiteratureSource *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__PeakMotionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StrongMotion::PeakMotion *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::Record *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::Rupture *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::SimpleFilter *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Observer *)(Seiscomp::DataModel::DatabaseArchive *)(Seiscomp::DataModel::DatabaseReader *)(Seiscomp::DataModel::DatabaseQuery *) ((Seiscomp::DataModel::StrongMotion::StrongMotionReader *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *)(Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SurfaceRuptureTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::StrongMotion::SurfaceRupture *) x));
}
static void *_p_Seiscomp__DataModel__TensorTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::Tensor *) x));
}
static void *_p_Seiscomp__DataModel__TimeArrayTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::TimeArray *) x));
}
static void *_p_Seiscomp__DataModel__TimePDF1DTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::TimePDF1D *) x));
}
static void *_p_Seiscomp__DataModel__TimeQuantityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::TimeQuantity *) x));
}
static void *_p_Seiscomp__DataModel__TimeWindowTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::TimeWindow *) x));
}
static void *_p_Seiscomp__DataModel__WaveformQualityTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::DataModel::Object *) ((Seiscomp::DataModel::WaveformQuality *) x));
}
static void *_p_Seiscomp__DataModel__WaveformStreamIDTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::DataModel::WaveformStreamID *) x));
}
static void *_p_Seiscomp__GenericRecordTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Record *) ((Seiscomp::GenericRecord *) x));
}
static void *_p_Seiscomp__Geo__GeoFeatureTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Geo::GeoFeature *) x));
}
static void *_p_Seiscomp__Geo__GeoFeatureSetTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Geo::GeoFeatureSet *) x));
}
static void *_p_Seiscomp__IO__CropperTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::Cropper *) x));
}
static void *_p_Seiscomp__IO__DatabaseInterfaceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::DatabaseInterface *) x));
}
static void *_p_Seiscomp__IO__ExporterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::Exporter *) x));
}
static void *_p_Seiscomp__IO__GFArchiveTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::GFArchive *) x));
}
static void *_p_Seiscomp__IO__GFReceiverTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< double > *) ((Seiscomp::IO::GFReceiver *) x));
}
static void *_p_Seiscomp__IO__GFSourceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< double > *) ((Seiscomp::IO::GFSource *) x));
}
static void *_p_Seiscomp__IO__ImporterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::Importer *) x));
}
static void *_p_Seiscomp__IO__MSeedRecordTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Record *) ((Seiscomp::IO::MSeedRecord *) x));
}
static void *_p_Seiscomp__IO__PipeFilterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::PipeFilter *) x));
}
static void *_p_Seiscomp__IO__RecordDemuxFilterTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::RecordDemuxFilter *) x));
}
static void *_p_Seiscomp__IO__RecordFilterInterfaceTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::RecordFilterInterface *) x));
}
static void *_p_Seiscomp__IO__RecordIIRFilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::RecordIIRFilter< double > *) x));
}
static void *_p_Seiscomp__IO__RecordIIRFilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::RecordIIRFilter< float > *) x));
}
static void *_p_Seiscomp__IO__RecordInputTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::IO::RecordInput *) x));
}
static void *_p_Seiscomp__IO__RecordResamplerT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *)(Seiscomp::IO::RecordResamplerBase *) ((Seiscomp::IO::RecordResampler< double > *) x));
}
static void *_p_Seiscomp__IO__RecordResamplerT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *)(Seiscomp::IO::RecordResamplerBase *) ((Seiscomp::IO::RecordResampler< float > *) x));
}
static void *_p_Seiscomp__IO__RecordResamplerT_int_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *)(Seiscomp::IO::RecordResamplerBase *) ((Seiscomp::IO::RecordResampler< int > *) x));
}
static void *_p_Seiscomp__IO__RecordResamplerBaseTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::IO::RecordFilterInterface *) ((Seiscomp::IO::RecordResamplerBase *) x));
}
static void *_p_Seiscomp__IO__RecordStreamTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::InterruptibleObject *) ((Seiscomp::IO::RecordStream *) x));
}
static void *_p_Seiscomp__Math__Filtering__AverageT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::Average< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__AverageT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::Average< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__ChainFilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::ChainFilter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__ChainFilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::ChainFilter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) ((Seiscomp::Math::Filtering::IIR::ButterworthBandpass< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) ((Seiscomp::Math::Filtering::IIR::ButterworthBandpass< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) ((Seiscomp::Math::Filtering::IIR::ButterworthBandstop< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) ((Seiscomp::Math::Filtering::IIR::ButterworthBandstop< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) ((Seiscomp::Math::Filtering::IIR::ButterworthHighLowpass< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) ((Seiscomp::Math::Filtering::IIR::ButterworthHighLowpass< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) ((Seiscomp::Math::Filtering::IIR::ButterworthHighpass< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) ((Seiscomp::Math::Filtering::IIR::ButterworthHighpass< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< double > *) ((Seiscomp::Math::Filtering::IIR::ButterworthLowpass< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::BiquadCascade< float > *) ((Seiscomp::Math::Filtering::IIR::ButterworthLowpass< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__FilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::IIR::Filter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__FilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::IIR::Filter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::Filter< double > *) ((Seiscomp::Math::Filtering::IIR::GenericSeismometer< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::Filter< float > *) ((Seiscomp::Math::Filtering::IIR::GenericSeismometer< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::Filter< double > *) ((Seiscomp::Math::Filtering::IIR::WWSSN_LP_Filter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::Filter< float > *) ((Seiscomp::Math::Filtering::IIR::WWSSN_LP_Filter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::Filter< double > *) ((Seiscomp::Math::Filtering::IIR::WWSSN_SP_Filter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::Filter< float > *) ((Seiscomp::Math::Filtering::IIR::WWSSN_SP_Filter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::IIR::Filter< double > *) ((Seiscomp::Math::Filtering::IIR::WoodAndersonFilter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::IIR::Filter< float > *) ((Seiscomp::Math::Filtering::IIR::WoodAndersonFilter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__InPlaceFilterT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Math::Filtering::InPlaceFilter< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__InPlaceFilterT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Math::Filtering::InPlaceFilter< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__InitialTaperT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::InitialTaper< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__InitialTaperT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::InitialTaper< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__RunningMeanT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::RunningMean< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__RunningMeanT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::RunningMean< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *)(Seiscomp::Math::Filtering::RunningMean< double > *) ((Seiscomp::Math::Filtering::RunningMeanHighPass< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *)(Seiscomp::Math::Filtering::RunningMean< float > *) ((Seiscomp::Math::Filtering::RunningMeanHighPass< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTA2T_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::STALTA2< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTA2T_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::STALTA2< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTAT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::STALTA< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTAT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::STALTA< float > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< double > *) ((Seiscomp::Math::Filtering::STALTA_Classic< double > *) x));
}
static void *_p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Filtering::InPlaceFilter< float > *) ((Seiscomp::Math::Filtering::STALTA_Classic< float > *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< double > *)(Seiscomp::Math::Geo::NamedCoord< double > *) ((Seiscomp::Math::Geo::City< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< float > *)(Seiscomp::Math::Geo::NamedCoord< float > *) ((Seiscomp::Math::Geo::City< float > *) x));
}
static void *_p_Seiscomp__Math__Geo__CoordT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Math::Geo::Coord< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__CoordT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Math::Geo::Coord< float > *) x));
}
static void *_p_Seiscomp__Math__Geo__NamedCoordT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< double > *) ((Seiscomp::Math::Geo::NamedCoord< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__NamedCoordT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Geo::Coord< float > *) ((Seiscomp::Math::Geo::NamedCoord< float > *) x));
}
static void *_p_Seiscomp__Math__Restitution__FFT__PolesAndZerosTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Restitution::FFT::TransferFunction *) ((Seiscomp::Math::Restitution::FFT::PolesAndZeros *) x));
}
static void *_p_Seiscomp__Math__Restitution__FFT__ResponseListTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Math::Restitution::FFT::TransferFunction *) ((Seiscomp::Math::Restitution::FFT::ResponseList *) x));
}
static void *_p_Seiscomp__Math__Restitution__FFT__TransferFunctionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Math::Restitution::FFT::TransferFunction *) x));
}
static void *_p_Seiscomp__NumericArrayT_char_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *)(Seiscomp::TypedArray< char > *) ((Seiscomp::NumericArray< char > *) x));
}
static void *_p_Seiscomp__NumericArrayT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *)(Seiscomp::TypedArray< double > *) ((Seiscomp::NumericArray< double > *) x));
}
static void *_p_Seiscomp__NumericArrayT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *)(Seiscomp::TypedArray< float > *) ((Seiscomp::NumericArray< float > *) x));
}
static void *_p_Seiscomp__NumericArrayT_int_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *)(Seiscomp::TypedArray< int > *) ((Seiscomp::NumericArray< int > *) x));
}
static void *_p_Seiscomp__RecordTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *)  ((Seiscomp::Record *) x));
}
static void *_p_Seiscomp__RecordStream__Arclink__ArclinkConnectionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::InterruptibleObject *)(Seiscomp::IO::RecordStream *) ((Seiscomp::RecordStream::Arclink::ArclinkConnection *) x));
}
static void *_p_Seiscomp__RecordStream__CombinedConnectionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::InterruptibleObject *)(Seiscomp::IO::RecordStream *) ((Seiscomp::RecordStream::CombinedConnection *) x));
}
static void *_p_Seiscomp__RecordStream__FileTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::InterruptibleObject *)(Seiscomp::IO::RecordStream *) ((Seiscomp::RecordStream::File *) x));
}
static void *_p_Seiscomp__RecordStream__SLConnectionTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Core::InterruptibleObject *)(Seiscomp::IO::RecordStream *) ((Seiscomp::RecordStream::SLConnection *) x));
}
static void *_p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< Seiscomp::Core::Time > *) x));
}
static void *_p_Seiscomp__TypedArrayT_char_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< char > *) x));
}
static void *_p_Seiscomp__TypedArrayT_double_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< double > *) x));
}
static void *_p_Seiscomp__TypedArrayT_float_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< float > *) x));
}
static void *_p_Seiscomp__TypedArrayT_int_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< int > *) x));
}
static void *_p_Seiscomp__TypedArrayT_std__complexT_double_t_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< std::complex< double > > *) x));
}
static void *_p_Seiscomp__TypedArrayT_std__complexT_float_t_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< std::complex< float > > *) x));
}
static void *_p_Seiscomp__TypedArrayT_std__string_tTo_p_Seiscomp__Core__BaseObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::BaseObject *) (Seiscomp::Array *) ((Seiscomp::TypedArray< std::string > *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::Generic::Archive< Seiscomp::Core::BaseObject > *)  ((Seiscomp::DataModel::DatabaseArchive *) x));
}
static void *_p_Seiscomp__IO__BinaryArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::Generic::Archive< Seiscomp::Core::BaseObject > *)  ((Seiscomp::IO::BinaryArchive *) x));
}
static void *_p_Seiscomp__IO__VBinaryArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::Generic::Archive< Seiscomp::Core::BaseObject > *) (Seiscomp::IO::BinaryArchive *) ((Seiscomp::IO::VBinaryArchive *) x));
}
static void *_p_Seiscomp__IO__XMLArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Core::Generic::Archive< Seiscomp::Core::BaseObject > *)  ((Seiscomp::IO::XMLArchive *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__DatabaseArchive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseArchive *) (Seiscomp::DataModel::DatabaseReader *) ((Seiscomp::DataModel::DatabaseQuery *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__DataModel__DatabaseArchive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseArchive *)  ((Seiscomp::DataModel::DatabaseReader *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseArchive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseArchive *) (Seiscomp::DataModel::DatabaseReader *)(Seiscomp::DataModel::DatabaseQuery *) ((Seiscomp::DataModel::StrongMotion::StrongMotionReader *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseQuery(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseQuery *)  ((Seiscomp::DataModel::StrongMotion::StrongMotionReader *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__DatabaseReader(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseReader *)  ((Seiscomp::DataModel::DatabaseQuery *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseReader(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::DatabaseReader *) (Seiscomp::DataModel::DatabaseQuery *) ((Seiscomp::DataModel::StrongMotion::StrongMotionReader *) x));
}
static void *_p_Seiscomp__DataModel__AccessTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Access *) x));
}
static void *_p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Amplitude *) x));
}
static void *_p_Seiscomp__DataModel__AmplitudeReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::AmplitudeReference *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkLog *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkRequest *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestLineTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::ArclinkRequestLine *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkStatusLineTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::ArclinkStatusLine *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ArclinkUser *) x));
}
static void *_p_Seiscomp__DataModel__ArrivalTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Arrival *) x));
}
static void *_p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::AuxDevice *) x));
}
static void *_p_Seiscomp__DataModel__AuxSourceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::AuxSource *) x));
}
static void *_p_Seiscomp__DataModel__AuxStreamTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::AuxStream *) x));
}
static void *_p_Seiscomp__DataModel__CommentTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Comment *) x));
}
static void *_p_Seiscomp__DataModel__CompositeTimeTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::CompositeTime *) x));
}
static void *_p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Config *) x));
}
static void *_p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ConfigModule *) x));
}
static void *_p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ConfigStation *) x));
}
static void *_p_Seiscomp__DataModel__DataAttributeExtentTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::DataAttributeExtent *) x));
}
static void *_p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::DataAvailability *) x));
}
static void *_p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::DataExtent *) x));
}
static void *_p_Seiscomp__DataModel__DataSegmentTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::DataSegment *) x));
}
static void *_p_Seiscomp__DataModel__DataUsedTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::DataUsed *) x));
}
static void *_p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Datalogger *) x));
}
static void *_p_Seiscomp__DataModel__DataloggerCalibrationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::DataloggerCalibration *) x));
}
static void *_p_Seiscomp__DataModel__DecimationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Decimation *) x));
}
static void *_p_Seiscomp__DataModel__EventTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Event *) x));
}
static void *_p_Seiscomp__DataModel__EventDescriptionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::EventDescription *) x));
}
static void *_p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::EventParameters *) x));
}
static void *_p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::FocalMechanism *) x));
}
static void *_p_Seiscomp__DataModel__FocalMechanismReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::FocalMechanismReference *) x));
}
static void *_p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Inventory *) x));
}
static void *_p_Seiscomp__DataModel__JournalEntryTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::JournalEntry *) x));
}
static void *_p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Journaling *) x));
}
static void *_p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Magnitude *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::MomentTensor *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorComponentContributionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::MomentTensorComponentContribution *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorPhaseSettingTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::MomentTensorPhaseSetting *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::MomentTensorStationContribution *) x));
}
static void *_p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Network *) x));
}
static void *_p_Seiscomp__DataModel__OriginTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Origin *) x));
}
static void *_p_Seiscomp__DataModel__OriginReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::OriginReference *) x));
}
static void *_p_Seiscomp__DataModel__OutageTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Outage *) x));
}
static void *_p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Parameter *) x));
}
static void *_p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ParameterSet *) x));
}
static void *_p_Seiscomp__DataModel__PickTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Pick *) x));
}
static void *_p_Seiscomp__DataModel__PickReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::PickReference *) x));
}
static void *_p_Seiscomp__DataModel__PublicObjectTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::PublicObject *) x));
}
static void *_p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::QCLog *) x));
}
static void *_p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::QualityControl *) x));
}
static void *_p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Reading *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseFAP *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseFIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponseIIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponsePAZ *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::ResponsePolynomial *) x));
}
static void *_p_Seiscomp__DataModel__RouteTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Route *) x));
}
static void *_p_Seiscomp__DataModel__RouteArclinkTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::RouteArclink *) x));
}
static void *_p_Seiscomp__DataModel__RouteSeedlinkTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::RouteSeedlink *) x));
}
static void *_p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Routing *) x));
}
static void *_p_Seiscomp__DataModel__SensorTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Sensor *) x));
}
static void *_p_Seiscomp__DataModel__SensorCalibrationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::SensorCalibration *) x));
}
static void *_p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::SensorLocation *) x));
}
static void *_p_Seiscomp__DataModel__SetupTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::Setup *) x));
}
static void *_p_Seiscomp__DataModel__StationTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Station *) x));
}
static void *_p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StationGroup *) x));
}
static void *_p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StationMagnitude *) x));
}
static void *_p_Seiscomp__DataModel__StationMagnitudeContributionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StationMagnitudeContribution *) x));
}
static void *_p_Seiscomp__DataModel__StationReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StationReference *) x));
}
static void *_p_Seiscomp__DataModel__StreamTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::Stream *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__EventRecordReferenceTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StrongMotion::EventRecordReference *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__FilterParameterTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StrongMotion::FilterParameter *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__PeakMotionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StrongMotion::PeakMotion *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::Record *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::Rupture *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::SimpleFilter *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *) (Seiscomp::DataModel::PublicObject *) ((Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) x));
}
static void *_p_Seiscomp__DataModel__WaveformQualityTo_p_Seiscomp__DataModel__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Object *)  ((Seiscomp::DataModel::WaveformQuality *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__DataModel__Observer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Observer *)  ((Seiscomp::DataModel::DatabaseArchive *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__Observer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Observer *) (Seiscomp::DataModel::DatabaseArchive *)(Seiscomp::DataModel::DatabaseReader *) ((Seiscomp::DataModel::DatabaseQuery *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__DataModel__Observer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Observer *) (Seiscomp::DataModel::DatabaseArchive *) ((Seiscomp::DataModel::DatabaseReader *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__Observer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Observer *) (Seiscomp::DataModel::DatabaseArchive *)(Seiscomp::DataModel::DatabaseReader *)(Seiscomp::DataModel::DatabaseQuery *) ((Seiscomp::DataModel::StrongMotion::StrongMotionReader *) x));
}
static void *_p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Amplitude *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ArclinkLog *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ArclinkRequest *) x));
}
static void *_p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ArclinkUser *) x));
}
static void *_p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::AuxDevice *) x));
}
static void *_p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Config *) x));
}
static void *_p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ConfigModule *) x));
}
static void *_p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ConfigStation *) x));
}
static void *_p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::DataAvailability *) x));
}
static void *_p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::DataExtent *) x));
}
static void *_p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Datalogger *) x));
}
static void *_p_Seiscomp__DataModel__EventTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Event *) x));
}
static void *_p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::EventParameters *) x));
}
static void *_p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::FocalMechanism *) x));
}
static void *_p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Inventory *) x));
}
static void *_p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Journaling *) x));
}
static void *_p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Magnitude *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::MomentTensor *) x));
}
static void *_p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::MomentTensorStationContribution *) x));
}
static void *_p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Network *) x));
}
static void *_p_Seiscomp__DataModel__OriginTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Origin *) x));
}
static void *_p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Parameter *) x));
}
static void *_p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ParameterSet *) x));
}
static void *_p_Seiscomp__DataModel__PickTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Pick *) x));
}
static void *_p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::QCLog *) x));
}
static void *_p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::QualityControl *) x));
}
static void *_p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Reading *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ResponseFAP *) x));
}
static void *_p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ResponseFIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ResponseIIR *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ResponsePAZ *) x));
}
static void *_p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::ResponsePolynomial *) x));
}
static void *_p_Seiscomp__DataModel__RouteTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Route *) x));
}
static void *_p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Routing *) x));
}
static void *_p_Seiscomp__DataModel__SensorTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Sensor *) x));
}
static void *_p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::SensorLocation *) x));
}
static void *_p_Seiscomp__DataModel__StationTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Station *) x));
}
static void *_p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StationGroup *) x));
}
static void *_p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StationMagnitude *) x));
}
static void *_p_Seiscomp__DataModel__StreamTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::Stream *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StrongMotion::Record *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StrongMotion::Rupture *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StrongMotion::SimpleFilter *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StrongMotion::StrongMotionParameters *) x));
}
static void *_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__DataModel__PublicObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::PublicObject *)  ((Seiscomp::DataModel::StrongMotion::StrongOriginDescription *) x));
}
static void *_p_Seiscomp__DataModel__DatabaseObjectWriterTo_p_Seiscomp__DataModel__Visitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Visitor *)  ((Seiscomp::DataModel::DatabaseObjectWriter *) x));
}
static void *_p_Seiscomp__DataModel__NotifierCreatorTo_p_Seiscomp__DataModel__Visitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::DataModel::Visitor *)  ((Seiscomp::DataModel::NotifierCreator *) x));
}
static void *_p_Seiscomp__IO__GFReceiverTo_p_Seiscomp__Math__Geo__CoordT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< double > *)  ((Seiscomp::IO::GFReceiver *) x));
}
static void *_p_Seiscomp__IO__GFSourceTo_p_Seiscomp__Math__Geo__CoordT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< double > *)  ((Seiscomp::IO::GFSource *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Math__Geo__CoordT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< double > *) (Seiscomp::Math::Geo::NamedCoord< double > *) ((Seiscomp::Math::Geo::City< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__NamedCoordT_double_tTo_p_Seiscomp__Math__Geo__CoordT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< double > *)  ((Seiscomp::Math::Geo::NamedCoord< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Math__Geo__CoordT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< float > *) (Seiscomp::Math::Geo::NamedCoord< float > *) ((Seiscomp::Math::Geo::City< float > *) x));
}
static void *_p_Seiscomp__Math__Geo__NamedCoordT_float_tTo_p_Seiscomp__Math__Geo__CoordT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::Coord< float > *)  ((Seiscomp::Math::Geo::NamedCoord< float > *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Math__Geo__NamedCoordT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::NamedCoord< double > *)  ((Seiscomp::Math::Geo::City< double > *) x));
}
static void *_p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Math__Geo__NamedCoordT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Seiscomp::Math::Geo::NamedCoord< float > *)  ((Seiscomp::Math::Geo::City< float > *) x));
}
static swig_type_info _swigt__p_Archive = {"_p_Archive", "Archive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AttachmentList = {"_p_AttachmentList", "AttachmentList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AttachmentType = {"_p_AttachmentType", "AttachmentType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Attributes = {"_p_Attributes", "Attributes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DataArray = {"_p_DataArray", "DataArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Days = {"_p_Days", "Days *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Duration = {"_p_Duration", "Duration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F1 = {"_p_F1", "F1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F2 = {"_p_F2", "F2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F3 = {"_p_F3", "F3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F4 = {"_p_F4", "F4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F5 = {"_p_F5", "F5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_F6 = {"_p_F6", "F6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Hours = {"_p_Hours", "Hours *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ImplType = {"_p_ImplType", "ImplType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_InplaceFilterType = {"_p_InplaceFilterType", "InplaceFilterType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Iterator = {"_p_Iterator", "Iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LogNodeCPtr = {"_p_LogNodeCPtr", "LogNodeCPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LogNodePtr = {"_p_LogNodePtr", "LogNodePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MSRecord_s = {"_p_MSRecord_s", "MSRecord *|MSRecord_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MajorType = {"_p_MajorType", "MajorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MicroSeconds = {"_p_MicroSeconds", "MicroSeconds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MilliSeconds = {"_p_MilliSeconds", "MilliSeconds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MinorType = {"_p_MinorType", "MinorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Minutes = {"_p_Minutes", "Minutes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Notifiers = {"_p_Notifiers", "Notifiers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OID = {"_p_OID", "OID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PackType = {"_p_PackType", "PackType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PatchType = {"_p_PatchType", "PatchType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PopCallback = {"_p_PopCallback", "PopCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Properties = {"_p_Properties", "Properties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PropertyIndex = {"_p_PropertyIndex", "PropertyIndex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PropertyValue = {"_p_PropertyValue", "PropertyValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PublicObjectMap = {"_p_PublicObjectMap", "PublicObjectMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PushCallback = {"_p_PushCallback", "PushCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ReferenceType = {"_p_ReferenceType", "ReferenceType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RootType = {"_p_RootType", "RootType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seconds = {"_p_Seconds", "Seconds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__BaseObject = {"_p_Seiscomp__Core__BaseObject", "Seiscomp::Core::BaseObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Array = {"_p_Seiscomp__Array", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__BitSet = {"_p_Seiscomp__BitSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__DataMessage = {"_p_Seiscomp__Core__DataMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t = {"_p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t = {"_p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__GreensFunction = {"_p_Seiscomp__Core__GreensFunction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__InterruptibleObject = {"_p_Seiscomp__Core__InterruptibleObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__Message = {"_p_Seiscomp__Core__Message", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Access = {"_p_Seiscomp__DataModel__Access", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Amplitude = {"_p_Seiscomp__DataModel__Amplitude", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__AmplitudeReference = {"_p_Seiscomp__DataModel__AmplitudeReference", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkLog = {"_p_Seiscomp__DataModel__ArclinkLog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkRequest = {"_p_Seiscomp__DataModel__ArclinkRequest", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkRequestLine = {"_p_Seiscomp__DataModel__ArclinkRequestLine", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkStatusLine = {"_p_Seiscomp__DataModel__ArclinkStatusLine", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkUser = {"_p_Seiscomp__DataModel__ArclinkUser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Arrival = {"_p_Seiscomp__DataModel__Arrival", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArtificialEventParametersMessage = {"_p_Seiscomp__DataModel__ArtificialEventParametersMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArtificialOriginMessage = {"_p_Seiscomp__DataModel__ArtificialOriginMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__AuxDevice = {"_p_Seiscomp__DataModel__AuxDevice", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__AuxSource = {"_p_Seiscomp__DataModel__AuxSource", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__AuxStream = {"_p_Seiscomp__DataModel__AuxStream", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Comment = {"_p_Seiscomp__DataModel__Comment", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__CompositeTime = {"_p_Seiscomp__DataModel__CompositeTime", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Config = {"_p_Seiscomp__DataModel__Config", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ConfigModule = {"_p_Seiscomp__DataModel__ConfigModule", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ConfigStation = {"_p_Seiscomp__DataModel__ConfigStation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ConfigSyncMessage = {"_p_Seiscomp__DataModel__ConfigSyncMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataAttributeExtent = {"_p_Seiscomp__DataModel__DataAttributeExtent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataAvailability = {"_p_Seiscomp__DataModel__DataAvailability", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataExtent = {"_p_Seiscomp__DataModel__DataExtent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataSegment = {"_p_Seiscomp__DataModel__DataSegment", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataUsed = {"_p_Seiscomp__DataModel__DataUsed", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DatabaseIterator = {"_p_Seiscomp__DataModel__DatabaseIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Datalogger = {"_p_Seiscomp__DataModel__Datalogger", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DataloggerCalibration = {"_p_Seiscomp__DataModel__DataloggerCalibration", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Decimation = {"_p_Seiscomp__DataModel__Decimation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Event = {"_p_Seiscomp__DataModel__Event", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__EventDescription = {"_p_Seiscomp__DataModel__EventDescription", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__EventParameters = {"_p_Seiscomp__DataModel__EventParameters", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__FocalMechanism = {"_p_Seiscomp__DataModel__FocalMechanism", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__FocalMechanismReference = {"_p_Seiscomp__DataModel__FocalMechanismReference", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Inventory = {"_p_Seiscomp__DataModel__Inventory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__InventorySyncMessage = {"_p_Seiscomp__DataModel__InventorySyncMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__JournalEntry = {"_p_Seiscomp__DataModel__JournalEntry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Journaling = {"_p_Seiscomp__DataModel__Journaling", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Magnitude = {"_p_Seiscomp__DataModel__Magnitude", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__MomentTensor = {"_p_Seiscomp__DataModel__MomentTensor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__MomentTensorComponentContribution = {"_p_Seiscomp__DataModel__MomentTensorComponentContribution", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__MomentTensorPhaseSetting = {"_p_Seiscomp__DataModel__MomentTensorPhaseSetting", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__MomentTensorStationContribution = {"_p_Seiscomp__DataModel__MomentTensorStationContribution", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Network = {"_p_Seiscomp__DataModel__Network", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Notifier = {"_p_Seiscomp__DataModel__Notifier", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__NotifierMessage = {"_p_Seiscomp__DataModel__NotifierMessage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Origin = {"_p_Seiscomp__DataModel__Origin", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__OriginReference = {"_p_Seiscomp__DataModel__OriginReference", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Outage = {"_p_Seiscomp__DataModel__Outage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Parameter = {"_p_Seiscomp__DataModel__Parameter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ParameterSet = {"_p_Seiscomp__DataModel__ParameterSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Pick = {"_p_Seiscomp__DataModel__Pick", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PickReference = {"_p_Seiscomp__DataModel__PickReference", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PublicObjectCache = {"_p_Seiscomp__DataModel__PublicObjectCache", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PublicObjectRingBuffer = {"_p_Seiscomp__DataModel__PublicObjectRingBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer = {"_p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__QCLog = {"_p_Seiscomp__DataModel__QCLog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__QualityControl = {"_p_Seiscomp__DataModel__QualityControl", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Reading = {"_p_Seiscomp__DataModel__Reading", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ResponseFAP = {"_p_Seiscomp__DataModel__ResponseFAP", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ResponseFIR = {"_p_Seiscomp__DataModel__ResponseFIR", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ResponseIIR = {"_p_Seiscomp__DataModel__ResponseIIR", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ResponsePAZ = {"_p_Seiscomp__DataModel__ResponsePAZ", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ResponsePolynomial = {"_p_Seiscomp__DataModel__ResponsePolynomial", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Route = {"_p_Seiscomp__DataModel__Route", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__RouteArclink = {"_p_Seiscomp__DataModel__RouteArclink", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__RouteSeedlink = {"_p_Seiscomp__DataModel__RouteSeedlink", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Routing = {"_p_Seiscomp__DataModel__Routing", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Sensor = {"_p_Seiscomp__DataModel__Sensor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__SensorCalibration = {"_p_Seiscomp__DataModel__SensorCalibration", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__SensorLocation = {"_p_Seiscomp__DataModel__SensorLocation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Setup = {"_p_Seiscomp__DataModel__Setup", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Station = {"_p_Seiscomp__DataModel__Station", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StationGroup = {"_p_Seiscomp__DataModel__StationGroup", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StationMagnitude = {"_p_Seiscomp__DataModel__StationMagnitude", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StationMagnitudeContribution = {"_p_Seiscomp__DataModel__StationMagnitudeContribution", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StationReference = {"_p_Seiscomp__DataModel__StationReference", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Stream = {"_p_Seiscomp__DataModel__Stream", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__WaveformQuality = {"_p_Seiscomp__DataModel__WaveformQuality", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__GenericRecord = {"_p_Seiscomp__GenericRecord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Geo__GeoFeature = {"_p_Seiscomp__Geo__GeoFeature", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Geo__GeoFeatureSet = {"_p_Seiscomp__Geo__GeoFeatureSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__Cropper = {"_p_Seiscomp__IO__Cropper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__Exporter = {"_p_Seiscomp__IO__Exporter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__GFArchive = {"_p_Seiscomp__IO__GFArchive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__GFReceiver = {"_p_Seiscomp__IO__GFReceiver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__GFSource = {"_p_Seiscomp__IO__GFSource", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__Importer = {"_p_Seiscomp__IO__Importer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__MSeedRecord = {"_p_Seiscomp__IO__MSeedRecord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__PipeFilter = {"_p_Seiscomp__IO__PipeFilter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordDemuxFilter = {"_p_Seiscomp__IO__RecordDemuxFilter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordFilterInterface = {"_p_Seiscomp__IO__RecordFilterInterface", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordIIRFilterT_double_t = {"_p_Seiscomp__IO__RecordIIRFilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordIIRFilterT_float_t = {"_p_Seiscomp__IO__RecordIIRFilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordInput = {"_p_Seiscomp__IO__RecordInput", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordResamplerBase = {"_p_Seiscomp__IO__RecordResamplerBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordResamplerT_double_t = {"_p_Seiscomp__IO__RecordResamplerT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordResamplerT_float_t = {"_p_Seiscomp__IO__RecordResamplerT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordResamplerT_int_t = {"_p_Seiscomp__IO__RecordResamplerT_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__RecordStream = {"_p_Seiscomp__IO__RecordStream", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__AverageT_double_t = {"_p_Seiscomp__Math__Filtering__AverageT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__AverageT_float_t = {"_p_Seiscomp__Math__Filtering__AverageT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__ChainFilterT_double_t = {"_p_Seiscomp__Math__Filtering__ChainFilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__ChainFilterT_float_t = {"_p_Seiscomp__Math__Filtering__ChainFilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__FilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__FilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t = {"_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t = {"_p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t = {"_p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t = {"_p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__InitialTaperT_double_t = {"_p_Seiscomp__Math__Filtering__InitialTaperT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__InitialTaperT_float_t = {"_p_Seiscomp__Math__Filtering__InitialTaperT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t = {"_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t = {"_p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__RunningMeanT_double_t = {"_p_Seiscomp__Math__Filtering__RunningMeanT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__RunningMeanT_float_t = {"_p_Seiscomp__Math__Filtering__RunningMeanT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTA2T_double_t = {"_p_Seiscomp__Math__Filtering__STALTA2T_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTA2T_float_t = {"_p_Seiscomp__Math__Filtering__STALTA2T_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTAT_double_t = {"_p_Seiscomp__Math__Filtering__STALTAT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTAT_float_t = {"_p_Seiscomp__Math__Filtering__STALTAT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t = {"_p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t = {"_p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros = {"_p_Seiscomp__Math__Restitution__FFT__PolesAndZeros", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Restitution__FFT__ResponseList = {"_p_Seiscomp__Math__Restitution__FFT__ResponseList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Restitution__FFT__TransferFunction = {"_p_Seiscomp__Math__Restitution__FFT__TransferFunction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Record = {"_p_Seiscomp__Record", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__RecordStream__Arclink__ArclinkConnection = {"_p_Seiscomp__RecordStream__Arclink__ArclinkConnection", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__RecordStream__CombinedConnection = {"_p_Seiscomp__RecordStream__CombinedConnection", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__RecordStream__File = {"_p_Seiscomp__RecordStream__File", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__RecordStream__SLConnection = {"_p_Seiscomp__RecordStream__SLConnection", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_char_t = {"_p_Seiscomp__TypedArrayT_char_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_double_t = {"_p_Seiscomp__TypedArrayT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_float_t = {"_p_Seiscomp__TypedArrayT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_int_t = {"_p_Seiscomp__TypedArrayT_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t", "Seiscomp::DataModel::DataUsedWaveType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EDataUsedWaveType,Seiscomp::DataModel::EDataUsedWaveTypeQuantity,Seiscomp::DataModel::EDataUsedWaveTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t", "Seiscomp::DataModel::EvaluationMode *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EEvaluationMode,Seiscomp::DataModel::EEvaluationModeQuantity,Seiscomp::DataModel::EEvaluationModeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t", "Seiscomp::DataModel::EvaluationStatus *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EEvaluationStatus,Seiscomp::DataModel::EEvaluationStatusQuantity,Seiscomp::DataModel::EEvaluationStatusNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t", "Seiscomp::DataModel::EventDescriptionType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EEventDescriptionType,Seiscomp::DataModel::EEventDescriptionTypeQuantity,Seiscomp::DataModel::EEventDescriptionTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t", "Seiscomp::DataModel::EventTypeCertainty *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EEventTypeCertainty,Seiscomp::DataModel::EEventTypeCertaintyQuantity,Seiscomp::DataModel::EEventTypeCertaintyNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t", "Seiscomp::DataModel::EventType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EEventType,Seiscomp::DataModel::EEventTypeQuantity,Seiscomp::DataModel::EEventTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t", "Seiscomp::DataModel::InventoryError *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EInventoryError,Seiscomp::DataModel::EInventoryErrorQuantity,Seiscomp::DataModel::EInventoryErrorNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t", "Seiscomp::DataModel::MomentTensorMethod *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EMomentTensorMethod,Seiscomp::DataModel::EMomentTensorMethodQuantity,Seiscomp::DataModel::EMomentTensorMethodNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t", "Seiscomp::DataModel::MomentTensorStatus *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EMomentTensorStatus,Seiscomp::DataModel::EMomentTensorStatusQuantity,Seiscomp::DataModel::EMomentTensorStatusNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t", "Seiscomp::DataModel::Operation *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EOperation,Seiscomp::DataModel::EOperationQuantity,Seiscomp::DataModel::EOperationNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t", "Seiscomp::DataModel::OriginDepthType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EOriginDepthType,Seiscomp::DataModel::EOriginDepthTypeQuantity,Seiscomp::DataModel::EOriginDepthTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t", "Seiscomp::DataModel::OriginType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EOriginType,Seiscomp::DataModel::EOriginTypeQuantity,Seiscomp::DataModel::EOriginTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t", "Seiscomp::DataModel::OriginUncertaintyDescription *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EOriginUncertaintyDescription,Seiscomp::DataModel::EOriginUncertaintyDescriptionQuantity,Seiscomp::DataModel::EOriginUncertaintyDescriptionNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t", "Seiscomp::DataModel::PickOnset *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EPickOnset,Seiscomp::DataModel::EPickOnsetQuantity,Seiscomp::DataModel::EPickOnsetNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t", "Seiscomp::DataModel::PickPolarity *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EPickPolarity,Seiscomp::DataModel::EPickPolarityQuantity,Seiscomp::DataModel::EPickPolarityNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t", "Seiscomp::DataModel::SourceTimeFunctionType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::ESourceTimeFunctionType,Seiscomp::DataModel::ESourceTimeFunctionTypeQuantity,Seiscomp::DataModel::ESourceTimeFunctionTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t", "Seiscomp::DataModel::StationGroupType *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::EStationGroupType,Seiscomp::DataModel::EStationGroupTypeQuantity,Seiscomp::DataModel::EStationGroupTypeNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t = {"_p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t", "Seiscomp::DataModel::StrongMotion::FwHwIndicator *|Seiscomp::Core::Enum< enum Seiscomp::DataModel::StrongMotion::EFwHwIndicator,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorQuantity,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t = {"_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t", "Seiscomp::Core::Archive *|Seiscomp::Core::BaseObject::Archive *|Seiscomp::Core::Generic::Archive< Seiscomp::Core::BaseObject > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__BinaryArchive = {"_p_Seiscomp__IO__BinaryArchive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__VBinaryArchive = {"_p_Seiscomp__IO__VBinaryArchive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__XMLArchive = {"_p_Seiscomp__IO__XMLArchive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t = {"_p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t", "Seiscomp::Core::ClassFactory *|Seiscomp::Core::Generic::ClassFactoryInterface< Seiscomp::Core::BaseObject > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__MetaObject = {"_p_Seiscomp__Core__MetaObject", "Seiscomp::Core::MetaObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl = {"_p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl", "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FwHwIndicator >::Impl *|Seiscomp::Core::Optional< Seiscomp::Core::Enum< enum Seiscomp::DataModel::StrongMotion::EFwHwIndicator,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorQuantity,Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl = {"_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl", "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::Contact >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl = {"_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl", "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::FileResource >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl = {"_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl", "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl = {"_p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl", "Seiscomp::Core::Optional< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__RTTI = {"_p_Seiscomp__Core__RTTI", "Seiscomp::Core::RTTI *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl", "Seiscomp::ArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Array const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl", "Seiscomp::ArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Array >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl", "Seiscomp::BitSetCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::BitSet const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl", "Seiscomp::BitSetPtr *|Seiscomp::Core::SmartPointer< Seiscomp::BitSet >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl", "Seiscomp::Core::BaseObjectCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl", "Seiscomp::Core::BaseObjectPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::BaseObject >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl", "Seiscomp::Core::DataMessagePtr *|::Seiscomp::Core::SmartPointer< Seiscomp::Core::DataMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl", "Seiscomp::Core::GreensFunctionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::GreensFunction const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl", "Seiscomp::Core::GreensFunctionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::GreensFunction >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl", "Seiscomp::Core::InterruptibleObjectCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::InterruptibleObject const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl", "Seiscomp::Core::InterruptibleObjectPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::InterruptibleObject >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl", "Seiscomp::Core::MessageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::Message const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl", "Seiscomp::Core::MessagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::Core::Message >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl", "Seiscomp::DataModel::AccessCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Access const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl", "Seiscomp::DataModel::AccessPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Access >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl", "Seiscomp::DataModel::AmplitudeReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AmplitudeReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl", "Seiscomp::DataModel::AmplitudeReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AmplitudeReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl", "Seiscomp::DataModel::AmplitudeCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Amplitude const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl", "Seiscomp::DataModel::AmplitudePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Amplitude >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl", "Seiscomp::DataModel::ArclinkLogCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkLog const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl", "Seiscomp::DataModel::ArclinkLogPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkLog >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl", "Seiscomp::DataModel::ArclinkRequestLineCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequestLine const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl", "Seiscomp::DataModel::ArclinkRequestLinePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequestLine >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl", "Seiscomp::DataModel::ArclinkRequestSummaryCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequestSummary const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl", "Seiscomp::DataModel::ArclinkRequestSummaryPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequestSummary >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl", "Seiscomp::DataModel::ArclinkRequestCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequest const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl", "Seiscomp::DataModel::ArclinkRequestPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkRequest >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl", "Seiscomp::DataModel::ArclinkStatusLineCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkStatusLine const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl", "Seiscomp::DataModel::ArclinkStatusLinePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkStatusLine >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl", "Seiscomp::DataModel::ArclinkUserCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkUser const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl", "Seiscomp::DataModel::ArclinkUserPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArclinkUser >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl", "Seiscomp::DataModel::ArrivalCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Arrival const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl", "Seiscomp::DataModel::ArrivalPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Arrival >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl", "Seiscomp::DataModel::ArtificialEventParametersMessageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArtificialEventParametersMessage const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl", "Seiscomp::DataModel::ArtificialEventParametersMessagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArtificialEventParametersMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl", "Seiscomp::DataModel::ArtificialOriginMessageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArtificialOriginMessage const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl", "Seiscomp::DataModel::ArtificialOriginMessagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ArtificialOriginMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl", "Seiscomp::DataModel::AuxDeviceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxDevice const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl", "Seiscomp::DataModel::AuxDevicePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxDevice >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl", "Seiscomp::DataModel::AuxSourceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxSource const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl", "Seiscomp::DataModel::AuxSourcePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxSource >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl", "Seiscomp::DataModel::AuxStreamCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxStream const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl", "Seiscomp::DataModel::AuxStreamPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::AuxStream >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl", "Seiscomp::DataModel::AxisCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Axis const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl", "Seiscomp::DataModel::AxisPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Axis >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl", "Seiscomp::DataModel::BlobCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Blob const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl", "Seiscomp::DataModel::BlobPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Blob >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl", "Seiscomp::DataModel::CommentCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Comment const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl", "Seiscomp::DataModel::CommentPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Comment >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl", "Seiscomp::DataModel::ComplexArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ComplexArray const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl", "Seiscomp::DataModel::ComplexArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ComplexArray >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl", "Seiscomp::DataModel::CompositeTimeCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::CompositeTime const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl", "Seiscomp::DataModel::CompositeTimePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::CompositeTime >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl", "Seiscomp::DataModel::ConfidenceEllipsoidCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfidenceEllipsoid const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl", "Seiscomp::DataModel::ConfidenceEllipsoidPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfidenceEllipsoid >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl", "Seiscomp::DataModel::ConfigModuleCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigModule const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl", "Seiscomp::DataModel::ConfigModulePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigModule >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl", "Seiscomp::DataModel::ConfigStationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigStation const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl", "Seiscomp::DataModel::ConfigStationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigStation >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl", "Seiscomp::DataModel::ConfigSyncMessageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigSyncMessage const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl", "Seiscomp::DataModel::ConfigSyncMessagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ConfigSyncMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl", "Seiscomp::DataModel::ConfigCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Config const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl", "Seiscomp::DataModel::ConfigPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Config >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl", "Seiscomp::DataModel::CreationInfoCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::CreationInfo const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl", "Seiscomp::DataModel::CreationInfoPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::CreationInfo >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl", "Seiscomp::DataModel::DataAttributeExtentCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataAttributeExtent const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl", "Seiscomp::DataModel::DataAttributeExtentPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataAttributeExtent >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl", "Seiscomp::DataModel::DataAvailabilityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataAvailability const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl", "Seiscomp::DataModel::DataAvailabilityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataAvailability >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl", "Seiscomp::DataModel::DataExtentCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataExtent const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl", "Seiscomp::DataModel::DataExtentPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataExtent >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl", "Seiscomp::DataModel::DataSegmentCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataSegment const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl", "Seiscomp::DataModel::DataSegmentPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataSegment >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl", "Seiscomp::DataModel::DataUsedCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataUsed const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl", "Seiscomp::DataModel::DataUsedPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataUsed >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl", "Seiscomp::DataModel::DatabaseArchiveCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseArchive const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl", "Seiscomp::DataModel::DatabaseArchivePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseArchive >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl", "Seiscomp::DataModel::DatabaseQueryCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseQuery const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl", "Seiscomp::DataModel::DatabaseQueryPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseQuery >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl", "Seiscomp::DataModel::DatabaseReaderCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseReader const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl", "Seiscomp::DataModel::DatabaseReaderPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DatabaseReader >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl", "Seiscomp::DataModel::DataloggerCalibrationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataloggerCalibration const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl", "Seiscomp::DataModel::DataloggerCalibrationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::DataloggerCalibration >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl", "Seiscomp::DataModel::DataloggerCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Datalogger const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl", "Seiscomp::DataModel::DataloggerPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Datalogger >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl", "Seiscomp::DataModel::DecimationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Decimation const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl", "Seiscomp::DataModel::DecimationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Decimation >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl", "Seiscomp::DataModel::EventDescriptionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::EventDescription const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl", "Seiscomp::DataModel::EventDescriptionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::EventDescription >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl", "Seiscomp::DataModel::EventParametersCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::EventParameters const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl", "Seiscomp::DataModel::EventParametersPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::EventParameters >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl", "Seiscomp::DataModel::EventCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Event const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl", "Seiscomp::DataModel::EventPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Event >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl", "Seiscomp::DataModel::FocalMechanismReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::FocalMechanismReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl", "Seiscomp::DataModel::FocalMechanismReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::FocalMechanismReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl", "Seiscomp::DataModel::FocalMechanismCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::FocalMechanism const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl", "Seiscomp::DataModel::FocalMechanismPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::FocalMechanism >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl", "Seiscomp::DataModel::IntegerQuantityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::IntegerQuantity const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl", "Seiscomp::DataModel::IntegerQuantityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::IntegerQuantity >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl", "Seiscomp::DataModel::InventorySyncMessageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::InventorySyncMessage const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl", "Seiscomp::DataModel::InventorySyncMessagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::InventorySyncMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl", "Seiscomp::DataModel::InventoryCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Inventory const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl", "Seiscomp::DataModel::InventoryPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Inventory >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl", "Seiscomp::DataModel::JournalEntryCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::JournalEntry const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl", "Seiscomp::DataModel::JournalEntryPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::JournalEntry >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl", "Seiscomp::DataModel::JournalingCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Journaling const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl", "Seiscomp::DataModel::JournalingPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Journaling >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl", "Seiscomp::DataModel::MagnitudeCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Magnitude const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl", "Seiscomp::DataModel::MagnitudePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Magnitude >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl", "Seiscomp::DataModel::MomentTensorComponentContributionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorComponentContribution const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl", "Seiscomp::DataModel::MomentTensorComponentContributionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorComponentContribution >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl", "Seiscomp::DataModel::MomentTensorPhaseSettingCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorPhaseSetting const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl", "Seiscomp::DataModel::MomentTensorPhaseSettingPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorPhaseSetting >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl", "Seiscomp::DataModel::MomentTensorStationContributionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorStationContribution const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl", "Seiscomp::DataModel::MomentTensorStationContributionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensorStationContribution >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl", "Seiscomp::DataModel::MomentTensorCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensor const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl", "Seiscomp::DataModel::MomentTensorPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::MomentTensor >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl", "Seiscomp::DataModel::NetworkCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Network const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl", "Seiscomp::DataModel::NetworkPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Network >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl", "Seiscomp::DataModel::NodalPlaneCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::NodalPlane const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl", "Seiscomp::DataModel::NodalPlanePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::NodalPlane >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl", "Seiscomp::DataModel::NodalPlanesCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::NodalPlanes const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl", "Seiscomp::DataModel::NodalPlanesPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::NodalPlanes >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl", "Seiscomp::DataModel::NotifierMessagePtr *|::Seiscomp::Core::SmartPointer< Seiscomp::DataModel::NotifierMessage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl", "Seiscomp::DataModel::NotifierCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Notifier const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl", "Seiscomp::DataModel::NotifierPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Notifier >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl", "Seiscomp::DataModel::ObjectCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Object const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl", "Seiscomp::DataModel::ObjectPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Object >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl", "Seiscomp::DataModel::ObserverCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Observer const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl", "Seiscomp::DataModel::ObserverPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Observer >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl", "Seiscomp::DataModel::OriginQualityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginQuality const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl", "Seiscomp::DataModel::OriginQualityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginQuality >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl", "Seiscomp::DataModel::OriginReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl", "Seiscomp::DataModel::OriginReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl", "Seiscomp::DataModel::OriginUncertaintyCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginUncertainty const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl", "Seiscomp::DataModel::OriginUncertaintyPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::OriginUncertainty >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl", "Seiscomp::DataModel::OriginCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Origin const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl", "Seiscomp::DataModel::OriginPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Origin >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl", "Seiscomp::DataModel::OutageCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Outage const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl", "Seiscomp::DataModel::OutagePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Outage >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl", "Seiscomp::DataModel::ParameterSetCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ParameterSet const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl", "Seiscomp::DataModel::ParameterSetPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ParameterSet >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl", "Seiscomp::DataModel::ParameterCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Parameter const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl", "Seiscomp::DataModel::ParameterPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Parameter >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl", "Seiscomp::DataModel::PhaseCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Phase const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl", "Seiscomp::DataModel::PhasePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Phase >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl", "Seiscomp::DataModel::PickReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PickReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl", "Seiscomp::DataModel::PickReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PickReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl", "Seiscomp::DataModel::PickCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Pick const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl", "Seiscomp::DataModel::PickPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Pick >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl", "Seiscomp::DataModel::PrincipalAxesCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PrincipalAxes const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl", "Seiscomp::DataModel::PrincipalAxesPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PrincipalAxes >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl", "Seiscomp::DataModel::PublicObjectCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PublicObject const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl", "Seiscomp::DataModel::PublicObjectPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::PublicObject >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl", "Seiscomp::DataModel::QCLogCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::QCLog const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl", "Seiscomp::DataModel::QCLogPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::QCLog >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl", "Seiscomp::DataModel::QualityControlCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::QualityControl const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl", "Seiscomp::DataModel::QualityControlPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::QualityControl >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl", "Seiscomp::DataModel::ReadingCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Reading const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl", "Seiscomp::DataModel::ReadingPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Reading >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl", "Seiscomp::DataModel::RealArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealArray const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl", "Seiscomp::DataModel::RealArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealArray >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl", "Seiscomp::DataModel::RealPDF1DCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealPDF1D const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl", "Seiscomp::DataModel::RealPDF1DPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealPDF1D >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl", "Seiscomp::DataModel::RealQuantityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealQuantity const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl", "Seiscomp::DataModel::RealQuantityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RealQuantity >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl", "Seiscomp::DataModel::ResponseFAPCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseFAP const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl", "Seiscomp::DataModel::ResponseFAPPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseFAP >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl", "Seiscomp::DataModel::ResponseFIRCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseFIR const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl", "Seiscomp::DataModel::ResponseFIRPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseFIR >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl", "Seiscomp::DataModel::ResponseIIRCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseIIR const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl", "Seiscomp::DataModel::ResponseIIRPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponseIIR >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl", "Seiscomp::DataModel::ResponsePAZCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponsePAZ const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl", "Seiscomp::DataModel::ResponsePAZPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponsePAZ >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl", "Seiscomp::DataModel::ResponsePolynomialCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponsePolynomial const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl", "Seiscomp::DataModel::ResponsePolynomialPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::ResponsePolynomial >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl", "Seiscomp::DataModel::RouteArclinkCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RouteArclink const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl", "Seiscomp::DataModel::RouteArclinkPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RouteArclink >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl", "Seiscomp::DataModel::RouteSeedlinkCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RouteSeedlink const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl", "Seiscomp::DataModel::RouteSeedlinkPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::RouteSeedlink >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl", "Seiscomp::DataModel::RouteCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Route const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl", "Seiscomp::DataModel::RoutePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Route >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl", "Seiscomp::DataModel::RoutingCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Routing const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl", "Seiscomp::DataModel::RoutingPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Routing >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl", "Seiscomp::DataModel::SensorCalibrationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SensorCalibration const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl", "Seiscomp::DataModel::SensorCalibrationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SensorCalibration >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl", "Seiscomp::DataModel::SensorLocationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SensorLocation const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl", "Seiscomp::DataModel::SensorLocationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SensorLocation >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl", "Seiscomp::DataModel::SensorCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Sensor const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl", "Seiscomp::DataModel::SensorPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Sensor >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl", "Seiscomp::DataModel::SetupCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Setup const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl", "Seiscomp::DataModel::SetupPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Setup >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl", "Seiscomp::DataModel::SourceTimeFunctionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SourceTimeFunction const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl", "Seiscomp::DataModel::SourceTimeFunctionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::SourceTimeFunction >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl", "Seiscomp::DataModel::StationGroupCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationGroup const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl", "Seiscomp::DataModel::StationGroupPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationGroup >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl", "Seiscomp::DataModel::StationMagnitudeContributionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationMagnitudeContribution const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl", "Seiscomp::DataModel::StationMagnitudeContributionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationMagnitudeContribution >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl", "Seiscomp::DataModel::StationMagnitudeCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationMagnitude const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl", "Seiscomp::DataModel::StationMagnitudePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationMagnitude >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl", "Seiscomp::DataModel::StationReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl", "Seiscomp::DataModel::StationReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StationReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl", "Seiscomp::DataModel::StationCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Station const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl", "Seiscomp::DataModel::StationPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Station >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl", "Seiscomp::DataModel::StreamCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Stream const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl", "Seiscomp::DataModel::StreamPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Stream >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl", "Seiscomp::DataModel::StrongMotion::ContactCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::Contact const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl", "Seiscomp::DataModel::StrongMotion::ContactPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::Contact >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl", "Seiscomp::DataModel::StrongMotion::EventRecordReferenceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::EventRecordReference const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl", "Seiscomp::DataModel::StrongMotion::EventRecordReferencePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::EventRecordReference >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl", "Seiscomp::DataModel::StrongMotion::FileResourceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::FileResource const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl", "Seiscomp::DataModel::StrongMotion::FileResourcePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::FileResource >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl", "Seiscomp::DataModel::StrongMotion::FilterParameterCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::FilterParameter const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl", "Seiscomp::DataModel::StrongMotion::FilterParameterPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::FilterParameter >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl", "Seiscomp::DataModel::StrongMotion::LiteratureSourceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::LiteratureSource const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl", "Seiscomp::DataModel::StrongMotion::LiteratureSourcePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::LiteratureSource >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl", "Seiscomp::DataModel::StrongMotion::PeakMotionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::PeakMotion const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl", "Seiscomp::DataModel::StrongMotion::PeakMotionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::PeakMotion >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl", "Seiscomp::DataModel::StrongMotion::RuptureCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::Rupture const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl", "Seiscomp::DataModel::StrongMotion::RupturePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::Rupture >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl", "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl", "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl", "Seiscomp::DataModel::StrongMotion::SimpleFilterCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SimpleFilter const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl", "Seiscomp::DataModel::StrongMotion::SimpleFilterPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SimpleFilter >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongMotionParametersCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongMotionParameters const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongMotionParametersPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongMotionParameters >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongMotionReaderCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongMotionReader const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongMotionReaderPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongMotionReader >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongOriginDescriptionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongOriginDescription const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl", "Seiscomp::DataModel::StrongMotion::StrongOriginDescriptionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::StrongOriginDescription >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl", "Seiscomp::DataModel::StrongMotion::SurfaceRuptureCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SurfaceRupture const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl", "Seiscomp::DataModel::StrongMotion::SurfaceRupturePtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::StrongMotion::SurfaceRupture >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl", "Seiscomp::DataModel::TensorCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Tensor const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl", "Seiscomp::DataModel::TensorPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Tensor >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl", "Seiscomp::DataModel::TimeArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeArray const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl", "Seiscomp::DataModel::TimeArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeArray >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl", "Seiscomp::DataModel::TimePDF1DCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimePDF1D const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl", "Seiscomp::DataModel::TimePDF1DPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimePDF1D >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl", "Seiscomp::DataModel::TimeQuantityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeQuantity const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl", "Seiscomp::DataModel::TimeQuantityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeQuantity >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl", "Seiscomp::DataModel::TimeWindowCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeWindow const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl", "Seiscomp::DataModel::TimeWindowPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::TimeWindow >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl", "Seiscomp::DataModel::VisitorCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Visitor const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl", "Seiscomp::DataModel::VisitorPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::Visitor >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl", "Seiscomp::DataModel::WaveformQualityCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::WaveformQuality const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl", "Seiscomp::DataModel::WaveformQualityPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::WaveformQuality >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl", "Seiscomp::DataModel::WaveformStreamIDCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::WaveformStreamID const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl", "Seiscomp::DataModel::WaveformStreamIDPtr *|Seiscomp::Core::SmartPointer< Seiscomp::DataModel::WaveformStreamID >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl", "Seiscomp::GenericRecordCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::GenericRecord const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl", "Seiscomp::GenericRecordPtr *|Seiscomp::Core::SmartPointer< Seiscomp::GenericRecord >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl", "Seiscomp::Geo::CategoryCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Geo::Category const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl", "Seiscomp::Geo::CategoryPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Geo::Category >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl", "Seiscomp::Geo::GeoFeatureCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Geo::GeoFeature const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl", "Seiscomp::Geo::GeoFeaturePtr *|Seiscomp::Core::SmartPointer< Seiscomp::Geo::GeoFeature >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl", "Seiscomp::IO::CropperCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Cropper const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl", "Seiscomp::IO::CropperPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Cropper >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl", "Seiscomp::IO::DatabaseInterfaceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::DatabaseInterface const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl", "Seiscomp::IO::DatabaseInterfacePtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::DatabaseInterface >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl", "Seiscomp::IO::ExporterCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Exporter const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl", "Seiscomp::IO::ExporterPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Exporter >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl", "Seiscomp::IO::GFArchiveCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::GFArchive const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl", "Seiscomp::IO::GFArchivePtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::GFArchive >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl", "Seiscomp::IO::ImporterCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Importer const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl", "Seiscomp::IO::ImporterPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::Importer >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl", "Seiscomp::IO::MSeedRecordCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::MSeedRecord const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl", "Seiscomp::IO::MSeedRecordPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::MSeedRecord >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl", "Seiscomp::IO::RecordFilterInterfaceCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::RecordFilterInterface const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl", "Seiscomp::IO::RecordFilterInterfacePtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::RecordFilterInterface >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl", "Seiscomp::IO::RecordInputCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::RecordInput const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl", "Seiscomp::IO::RecordInputPtr *|Seiscomp::Core::SmartPointer< Seiscomp::IO::RecordInput >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl", "Seiscomp::Math::Restitution::FFT::TransferFunctionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Math::Restitution::FFT::TransferFunction const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl", "Seiscomp::Math::Restitution::FFT::TransferFunctionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Math::Restitution::FFT::TransferFunction >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl", "Seiscomp::CharArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< char > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl", "Seiscomp::CharArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< char > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl", "Seiscomp::DoubleArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< double > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl", "Seiscomp::DoubleArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< double > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl", "Seiscomp::FloatArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< float > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl", "Seiscomp::FloatArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< float > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl", "Seiscomp::Int32ArrayCPtr *|Seiscomp::IntArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< int > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl", "Seiscomp::Int32ArrayPtr *|Seiscomp::IntArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::NumericArray< int > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl", "Seiscomp::RecordStream::Arclink::ArclinkConnectionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::Arclink::ArclinkConnection const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl", "Seiscomp::RecordStream::Arclink::ArclinkConnectionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::Arclink::ArclinkConnection >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl", "Seiscomp::RecordStream::CombinedConnectionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::CombinedConnection const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl", "Seiscomp::RecordStream::CombinedConnectionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::CombinedConnection >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl", "Seiscomp::RecordStream::FileCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::File const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl", "Seiscomp::RecordStream::FilePtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::File >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl", "Seiscomp::RecordStream::SLConnectionCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::SLConnection const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl", "Seiscomp::RecordStream::SLConnectionPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream::SLConnection >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl", "Seiscomp::IO::RecordStreamCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl", "Seiscomp::IO::RecordStreamPtr *|Seiscomp::Core::SmartPointer< Seiscomp::RecordStream >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl", "Seiscomp::DataModel::StrongMotion::RecordCPtr *|Seiscomp::RecordCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Record const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl", "Seiscomp::DataModel::StrongMotion::RecordPtr *|Seiscomp::RecordPtr *|Seiscomp::Core::SmartPointer< Seiscomp::Record >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl", "Seiscomp::DateTimeArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< Seiscomp::Core::Time > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl", "Seiscomp::DateTimeArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< Seiscomp::Core::Time > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl", "Seiscomp::ComplexDoubleArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::complex< double > > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl", "Seiscomp::ComplexDoubleArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::complex< double > > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl", "Seiscomp::ComplexFloatArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::complex< float > > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl", "Seiscomp::ComplexFloatArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::complex< float > > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl", "Seiscomp::StringArrayCPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::string > const >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl = {"_p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl", "Seiscomp::StringArrayPtr *|Seiscomp::Core::SmartPointer< Seiscomp::TypedArray< std::string > >::Impl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Core__Time = {"_p_Seiscomp__Core__Time", "Seiscomp::Core::Time *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ArclinkRequestSummary = {"_p_Seiscomp__DataModel__ArclinkRequestSummary", "Seiscomp::DataModel::ArclinkRequestSummary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Axis = {"_p_Seiscomp__DataModel__Axis", "Seiscomp::DataModel::Axis *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Blob = {"_p_Seiscomp__DataModel__Blob", "Seiscomp::DataModel::Blob *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ComplexArray = {"_p_Seiscomp__DataModel__ComplexArray", "Seiscomp::DataModel::ComplexArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__ConfidenceEllipsoid = {"_p_Seiscomp__DataModel__ConfidenceEllipsoid", "Seiscomp::DataModel::ConfidenceEllipsoid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__CreationInfo = {"_p_Seiscomp__DataModel__CreationInfo", "Seiscomp::DataModel::CreationInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DatabaseArchive = {"_p_Seiscomp__DataModel__DatabaseArchive", "Seiscomp::DataModel::DatabaseArchive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DatabaseQuery = {"_p_Seiscomp__DataModel__DatabaseQuery", "Seiscomp::DataModel::DatabaseQuery *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DatabaseReader = {"_p_Seiscomp__DataModel__DatabaseReader", "Seiscomp::DataModel::DatabaseReader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__IntegerQuantity = {"_p_Seiscomp__DataModel__IntegerQuantity", "Seiscomp::DataModel::IntegerQuantity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__NodalPlane = {"_p_Seiscomp__DataModel__NodalPlane", "Seiscomp::DataModel::NodalPlane *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__NodalPlanes = {"_p_Seiscomp__DataModel__NodalPlanes", "Seiscomp::DataModel::NodalPlanes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Object = {"_p_Seiscomp__DataModel__Object", "Seiscomp::DataModel::Object *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Observer = {"_p_Seiscomp__DataModel__Observer", "Seiscomp::DataModel::Observer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__OriginQuality = {"_p_Seiscomp__DataModel__OriginQuality", "Seiscomp::DataModel::OriginQuality *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__OriginUncertainty = {"_p_Seiscomp__DataModel__OriginUncertainty", "Seiscomp::DataModel::OriginUncertainty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Phase = {"_p_Seiscomp__DataModel__Phase", "Seiscomp::DataModel::Phase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PrincipalAxes = {"_p_Seiscomp__DataModel__PrincipalAxes", "Seiscomp::DataModel::PrincipalAxes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__PublicObject = {"_p_Seiscomp__DataModel__PublicObject", "Seiscomp::DataModel::PublicObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__RealArray = {"_p_Seiscomp__DataModel__RealArray", "Seiscomp::DataModel::RealArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__RealPDF1D = {"_p_Seiscomp__DataModel__RealPDF1D", "Seiscomp::DataModel::RealPDF1D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__RealQuantity = {"_p_Seiscomp__DataModel__RealQuantity", "Seiscomp::DataModel::RealQuantity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__SourceTimeFunction = {"_p_Seiscomp__DataModel__SourceTimeFunction", "Seiscomp::DataModel::SourceTimeFunction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__Contact = {"_p_Seiscomp__DataModel__StrongMotion__Contact", "Seiscomp::DataModel::StrongMotion::Contact *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames = {"_p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames", "Seiscomp::DataModel::StrongMotion::EFwHwIndicatorNames *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__EventRecordReference = {"_p_Seiscomp__DataModel__StrongMotion__EventRecordReference", "Seiscomp::DataModel::StrongMotion::EventRecordReference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__FileResource = {"_p_Seiscomp__DataModel__StrongMotion__FileResource", "Seiscomp::DataModel::StrongMotion::FileResource *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__FilterParameter = {"_p_Seiscomp__DataModel__StrongMotion__FilterParameter", "Seiscomp::DataModel::StrongMotion::FilterParameter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__LiteratureSource = {"_p_Seiscomp__DataModel__StrongMotion__LiteratureSource", "Seiscomp::DataModel::StrongMotion::LiteratureSource *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__PeakMotion = {"_p_Seiscomp__DataModel__StrongMotion__PeakMotion", "Seiscomp::DataModel::StrongMotion::PeakMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__Record = {"_p_Seiscomp__DataModel__StrongMotion__Record", "Seiscomp::DataModel::StrongMotion::Record *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__Rupture = {"_p_Seiscomp__DataModel__StrongMotion__Rupture", "Seiscomp::DataModel::StrongMotion::Rupture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter = {"_p_Seiscomp__DataModel__StrongMotion__SimpleFilter", "Seiscomp::DataModel::StrongMotion::SimpleFilter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember = {"_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember", "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMember *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex = {"_p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex", "Seiscomp::DataModel::StrongMotion::SimpleFilterChainMemberIndex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters = {"_p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters", "Seiscomp::DataModel::StrongMotion::StrongMotionParameters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader = {"_p_Seiscomp__DataModel__StrongMotion__StrongMotionReader", "Seiscomp::DataModel::StrongMotion::StrongMotionReader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription = {"_p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription", "Seiscomp::DataModel::StrongMotion::StrongOriginDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture = {"_p_Seiscomp__DataModel__StrongMotion__SurfaceRupture", "Seiscomp::DataModel::StrongMotion::SurfaceRupture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Tensor = {"_p_Seiscomp__DataModel__Tensor", "Seiscomp::DataModel::Tensor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__TimeArray = {"_p_Seiscomp__DataModel__TimeArray", "Seiscomp::DataModel::TimeArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__TimePDF1D = {"_p_Seiscomp__DataModel__TimePDF1D", "Seiscomp::DataModel::TimePDF1D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__TimeQuantity = {"_p_Seiscomp__DataModel__TimeQuantity", "Seiscomp::DataModel::TimeQuantity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__TimeWindow = {"_p_Seiscomp__DataModel__TimeWindow", "Seiscomp::DataModel::TimeWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__Visitor = {"_p_Seiscomp__DataModel__Visitor", "Seiscomp::DataModel::Visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__DatabaseObjectWriter = {"_p_Seiscomp__DataModel__DatabaseObjectWriter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__NotifierCreator = {"_p_Seiscomp__DataModel__NotifierCreator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_Seiscomp__DataModel__WaveformStreamID = {"_p_Seiscomp__DataModel__WaveformStreamID", "Seiscomp::DataModel::WaveformStreamID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Geo__GeoCoordinate = {"_p_Seiscomp__Geo__GeoCoordinate", "Seiscomp::Geo::Vertex *|Seiscomp::Geo::GeoCoordinate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__IO__DatabaseInterface = {"_p_Seiscomp__IO__DatabaseInterface", "Seiscomp::IO::DatabaseInterface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__CityT_double_t = {"_p_Seiscomp__Math__Geo__CityT_double_t", "Seiscomp::Math::Geo::CityD *|Seiscomp::Math::Geo::City< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__CityT_float_t = {"_p_Seiscomp__Math__Geo__CityT_float_t", "Seiscomp::Math::Geo::CityF *|Seiscomp::Math::Geo::City< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__CoordT_double_t = {"_p_Seiscomp__Math__Geo__CoordT_double_t", "Seiscomp::Math::Geo::CoordD *|Seiscomp::Math::Geo::Coord< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__CoordT_float_t = {"_p_Seiscomp__Math__Geo__CoordT_float_t", "Seiscomp::Math::Geo::CoordF *|Seiscomp::Math::Geo::Coord< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__NamedCoordT_double_t = {"_p_Seiscomp__Math__Geo__NamedCoordT_double_t", "Seiscomp::Math::Geo::NamedCoordD *|Seiscomp::Math::Geo::NamedCoord< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__Math__Geo__NamedCoordT_float_t = {"_p_Seiscomp__Math__Geo__NamedCoordT_float_t", "Seiscomp::Math::Geo::NamedCoordF *|Seiscomp::Math::Geo::NamedCoord< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__NumericArrayT_char_t = {"_p_Seiscomp__NumericArrayT_char_t", "Seiscomp::CharArray *|Seiscomp::NumericArray< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__NumericArrayT_double_t = {"_p_Seiscomp__NumericArrayT_double_t", "Seiscomp::DoubleArray *|Seiscomp::NumericArray< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__NumericArrayT_float_t = {"_p_Seiscomp__NumericArrayT_float_t", "Seiscomp::FloatArray *|Seiscomp::NumericArray< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__NumericArrayT_int_t = {"_p_Seiscomp__NumericArrayT_int_t", "Seiscomp::Int32Array *|Seiscomp::IntArray *|Seiscomp::NumericArray< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t = {"_p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t", "Seiscomp::DateTimeArray *|Seiscomp::TypedArray< Seiscomp::Core::Time > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_std__complexT_double_t_t = {"_p_Seiscomp__TypedArrayT_std__complexT_double_t_t", "Seiscomp::ComplexDoubleArray *|Seiscomp::TypedArray< std::complex< double > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_std__complexT_float_t_t = {"_p_Seiscomp__TypedArrayT_std__complexT_float_t_t", "Seiscomp::ComplexFloatArray *|Seiscomp::TypedArray< std::complex< float > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Seiscomp__TypedArrayT_std__string_t = {"_p_Seiscomp__TypedArrayT_std__string_t", "Seiscomp::StringArray *|Seiscomp::TypedArray< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Storage = {"_p_Storage", "Storage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TimePoint = {"_p_TimePoint", "TimePoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Type = {"_p_Type", "Type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValueType = {"_p_ValueType", "ValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Weeks = {"_p_Weeks", "Weeks *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__any = {"_p_boost__any", "Seiscomp::Core::MetaValue *|boost::any *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char_type = {"_p_char_type", "char_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_iterator = {"_p_const_iterator", "const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fmtflags = {"_p_fmtflags", "fmtflags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int32_t *|int_fast16_t *|int_fast32_t *|int_least32_t *|intptr_t *|int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int_type = {"_p_int_type", "int_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iostate = {"_p_iostate", "iostate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator = {"_p_iterator", "iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_category = {"_p_iterator_category", "iterator_category *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "ssize_t *|long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int64_t *|int_fast64_t *|int_least64_t *|intmax_t *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_off_type = {"_p_off_type", "off_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_openmode = {"_p_openmode", "openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pos_type = {"_p_pos_type", "pos_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_seekdir = {"_p_seekdir", "seekdir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "int16_t *|int_least16_t *|short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "int8_t *|int_fast8_t *|int_least8_t *|signed char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "std::streamsize *|size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_state_type = {"_p_state_type", "state_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_iosT_char_t = {"_p_std__basic_iosT_char_t", "std::ios *|std::basic_ios< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__complexT_double_t = {"_p_std__complexT_double_t", "Seiscomp::Math::Complex *|Seiscomp::Math::Restitution::Pole *|Seiscomp::Math::Restitution::Zero *|Seiscomp::Math::SeismometerResponse::Pole *|Seiscomp::Math::SeismometerResponse::Zero *|std::complex< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__shared_ptrT_Seiscomp__Core__MetaObject_t = {"_p_std__shared_ptrT_Seiscomp__Core__MetaObject_t", "Seiscomp::Core::MetaObjectHandle *|std::shared_ptr< Seiscomp::Core::MetaObject > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t = {"_p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t", "Seiscomp::Core::MetaPropertyHandle *|std::shared_ptr< Seiscomp::Core::MetaProperty > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_Seiscomp__Core__BaseObject_p_t = {"_p_std__vectorT_Seiscomp__Core__BaseObject_p_t", "Seiscomp::IO::ExportObjectList *|std::vector< Seiscomp::Core::BaseObject *,std::allocator< Seiscomp::Core::BaseObject * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t = {"_p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t", "Seiscomp::Math::Filtering::IIR::Biquads *|std::vector< Seiscomp::Math::Filtering::IIR::BiquadCoefficients,std::allocator< Seiscomp::Math::Filtering::IIR::BiquadCoefficients > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t = {"_p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t", "Seiscomp::Math::SeismometerResponse::FAPs *|std::vector< Seiscomp::Math::SeismometerResponse::FAP,std::allocator< Seiscomp::Math::SeismometerResponse::FAP > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__complexT_double_t_t = {"_p_std__vectorT_std__complexT_double_t_t", "Seiscomp::Math::ComplexArray *|Seiscomp::Math::Restitution::Poles *|Seiscomp::Math::Restitution::Zeros *|Seiscomp::Math::SeismometerResponse::Poles *|Seiscomp::Math::SeismometerResponse::Zeros *|std::vector< std::complex< double >,std::allocator< std::complex< double > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_traits_type = {"_p_traits_type", "traits_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "uint8_t *|uint_fast8_t *|uint_least8_t *|unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "uint32_t *|uint_fast16_t *|uint_fast32_t *|uint_least32_t *|uintptr_t *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint64_t *|uint_fast64_t *|uint_least64_t *|uintmax_t *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "uint16_t *|uint_least16_t *|unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_Archive,
  &_swigt__p_AttachmentList,
  &_swigt__p_AttachmentType,
  &_swigt__p_Attributes,
  &_swigt__p_DataArray,
  &_swigt__p_Days,
  &_swigt__p_Duration,
  &_swigt__p_F1,
  &_swigt__p_F2,
  &_swigt__p_F3,
  &_swigt__p_F4,
  &_swigt__p_F5,
  &_swigt__p_F6,
  &_swigt__p_Hours,
  &_swigt__p_ImplType,
  &_swigt__p_InplaceFilterType,
  &_swigt__p_Iterator,
  &_swigt__p_LogNodeCPtr,
  &_swigt__p_LogNodePtr,
  &_swigt__p_MSRecord_s,
  &_swigt__p_MajorType,
  &_swigt__p_MicroSeconds,
  &_swigt__p_MilliSeconds,
  &_swigt__p_MinorType,
  &_swigt__p_Minutes,
  &_swigt__p_Notifiers,
  &_swigt__p_OID,
  &_swigt__p_PackType,
  &_swigt__p_PatchType,
  &_swigt__p_PopCallback,
  &_swigt__p_Properties,
  &_swigt__p_PropertyIndex,
  &_swigt__p_PropertyValue,
  &_swigt__p_PublicObjectMap,
  &_swigt__p_PushCallback,
  &_swigt__p_ReferenceType,
  &_swigt__p_RootType,
  &_swigt__p_Seconds,
  &_swigt__p_Seiscomp__Array,
  &_swigt__p_Seiscomp__BitSet,
  &_swigt__p_Seiscomp__Core__BaseObject,
  &_swigt__p_Seiscomp__Core__DataMessage,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t,
  &_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t,
  &_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t,
  &_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t,
  &_swigt__p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,
  &_swigt__p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t,
  &_swigt__p_Seiscomp__Core__GreensFunction,
  &_swigt__p_Seiscomp__Core__InterruptibleObject,
  &_swigt__p_Seiscomp__Core__Message,
  &_swigt__p_Seiscomp__Core__MetaObject,
  &_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl,
  &_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl,
  &_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl,
  &_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,
  &_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl,
  &_swigt__p_Seiscomp__Core__RTTI,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl,
  &_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl,
  &_swigt__p_Seiscomp__Core__Time,
  &_swigt__p_Seiscomp__DataModel__Access,
  &_swigt__p_Seiscomp__DataModel__Amplitude,
  &_swigt__p_Seiscomp__DataModel__AmplitudeReference,
  &_swigt__p_Seiscomp__DataModel__ArclinkLog,
  &_swigt__p_Seiscomp__DataModel__ArclinkRequest,
  &_swigt__p_Seiscomp__DataModel__ArclinkRequestLine,
  &_swigt__p_Seiscomp__DataModel__ArclinkRequestSummary,
  &_swigt__p_Seiscomp__DataModel__ArclinkStatusLine,
  &_swigt__p_Seiscomp__DataModel__ArclinkUser,
  &_swigt__p_Seiscomp__DataModel__Arrival,
  &_swigt__p_Seiscomp__DataModel__ArtificialEventParametersMessage,
  &_swigt__p_Seiscomp__DataModel__ArtificialOriginMessage,
  &_swigt__p_Seiscomp__DataModel__AuxDevice,
  &_swigt__p_Seiscomp__DataModel__AuxSource,
  &_swigt__p_Seiscomp__DataModel__AuxStream,
  &_swigt__p_Seiscomp__DataModel__Axis,
  &_swigt__p_Seiscomp__DataModel__Blob,
  &_swigt__p_Seiscomp__DataModel__Comment,
  &_swigt__p_Seiscomp__DataModel__ComplexArray,
  &_swigt__p_Seiscomp__DataModel__CompositeTime,
  &_swigt__p_Seiscomp__DataModel__ConfidenceEllipsoid,
  &_swigt__p_Seiscomp__DataModel__Config,
  &_swigt__p_Seiscomp__DataModel__ConfigModule,
  &_swigt__p_Seiscomp__DataModel__ConfigStation,
  &_swigt__p_Seiscomp__DataModel__ConfigSyncMessage,
  &_swigt__p_Seiscomp__DataModel__CreationInfo,
  &_swigt__p_Seiscomp__DataModel__DataAttributeExtent,
  &_swigt__p_Seiscomp__DataModel__DataAvailability,
  &_swigt__p_Seiscomp__DataModel__DataExtent,
  &_swigt__p_Seiscomp__DataModel__DataSegment,
  &_swigt__p_Seiscomp__DataModel__DataUsed,
  &_swigt__p_Seiscomp__DataModel__DatabaseArchive,
  &_swigt__p_Seiscomp__DataModel__DatabaseIterator,
  &_swigt__p_Seiscomp__DataModel__DatabaseObjectWriter,
  &_swigt__p_Seiscomp__DataModel__DatabaseQuery,
  &_swigt__p_Seiscomp__DataModel__DatabaseReader,
  &_swigt__p_Seiscomp__DataModel__Datalogger,
  &_swigt__p_Seiscomp__DataModel__DataloggerCalibration,
  &_swigt__p_Seiscomp__DataModel__Decimation,
  &_swigt__p_Seiscomp__DataModel__Event,
  &_swigt__p_Seiscomp__DataModel__EventDescription,
  &_swigt__p_Seiscomp__DataModel__EventParameters,
  &_swigt__p_Seiscomp__DataModel__FocalMechanism,
  &_swigt__p_Seiscomp__DataModel__FocalMechanismReference,
  &_swigt__p_Seiscomp__DataModel__IntegerQuantity,
  &_swigt__p_Seiscomp__DataModel__Inventory,
  &_swigt__p_Seiscomp__DataModel__InventorySyncMessage,
  &_swigt__p_Seiscomp__DataModel__JournalEntry,
  &_swigt__p_Seiscomp__DataModel__Journaling,
  &_swigt__p_Seiscomp__DataModel__Magnitude,
  &_swigt__p_Seiscomp__DataModel__MomentTensor,
  &_swigt__p_Seiscomp__DataModel__MomentTensorComponentContribution,
  &_swigt__p_Seiscomp__DataModel__MomentTensorPhaseSetting,
  &_swigt__p_Seiscomp__DataModel__MomentTensorStationContribution,
  &_swigt__p_Seiscomp__DataModel__Network,
  &_swigt__p_Seiscomp__DataModel__NodalPlane,
  &_swigt__p_Seiscomp__DataModel__NodalPlanes,
  &_swigt__p_Seiscomp__DataModel__Notifier,
  &_swigt__p_Seiscomp__DataModel__NotifierCreator,
  &_swigt__p_Seiscomp__DataModel__NotifierMessage,
  &_swigt__p_Seiscomp__DataModel__Object,
  &_swigt__p_Seiscomp__DataModel__Observer,
  &_swigt__p_Seiscomp__DataModel__Origin,
  &_swigt__p_Seiscomp__DataModel__OriginQuality,
  &_swigt__p_Seiscomp__DataModel__OriginReference,
  &_swigt__p_Seiscomp__DataModel__OriginUncertainty,
  &_swigt__p_Seiscomp__DataModel__Outage,
  &_swigt__p_Seiscomp__DataModel__Parameter,
  &_swigt__p_Seiscomp__DataModel__ParameterSet,
  &_swigt__p_Seiscomp__DataModel__Phase,
  &_swigt__p_Seiscomp__DataModel__Pick,
  &_swigt__p_Seiscomp__DataModel__PickReference,
  &_swigt__p_Seiscomp__DataModel__PrincipalAxes,
  &_swigt__p_Seiscomp__DataModel__PublicObject,
  &_swigt__p_Seiscomp__DataModel__PublicObjectCache,
  &_swigt__p_Seiscomp__DataModel__PublicObjectRingBuffer,
  &_swigt__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer,
  &_swigt__p_Seiscomp__DataModel__QCLog,
  &_swigt__p_Seiscomp__DataModel__QualityControl,
  &_swigt__p_Seiscomp__DataModel__Reading,
  &_swigt__p_Seiscomp__DataModel__RealArray,
  &_swigt__p_Seiscomp__DataModel__RealPDF1D,
  &_swigt__p_Seiscomp__DataModel__RealQuantity,
  &_swigt__p_Seiscomp__DataModel__ResponseFAP,
  &_swigt__p_Seiscomp__DataModel__ResponseFIR,
  &_swigt__p_Seiscomp__DataModel__ResponseIIR,
  &_swigt__p_Seiscomp__DataModel__ResponsePAZ,
  &_swigt__p_Seiscomp__DataModel__ResponsePolynomial,
  &_swigt__p_Seiscomp__DataModel__Route,
  &_swigt__p_Seiscomp__DataModel__RouteArclink,
  &_swigt__p_Seiscomp__DataModel__RouteSeedlink,
  &_swigt__p_Seiscomp__DataModel__Routing,
  &_swigt__p_Seiscomp__DataModel__Sensor,
  &_swigt__p_Seiscomp__DataModel__SensorCalibration,
  &_swigt__p_Seiscomp__DataModel__SensorLocation,
  &_swigt__p_Seiscomp__DataModel__Setup,
  &_swigt__p_Seiscomp__DataModel__SourceTimeFunction,
  &_swigt__p_Seiscomp__DataModel__Station,
  &_swigt__p_Seiscomp__DataModel__StationGroup,
  &_swigt__p_Seiscomp__DataModel__StationMagnitude,
  &_swigt__p_Seiscomp__DataModel__StationMagnitudeContribution,
  &_swigt__p_Seiscomp__DataModel__StationReference,
  &_swigt__p_Seiscomp__DataModel__Stream,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__Contact,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__EventRecordReference,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__FileResource,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__FilterParameter,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__LiteratureSource,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__PeakMotion,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__Record,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__Rupture,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,
  &_swigt__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,
  &_swigt__p_Seiscomp__DataModel__Tensor,
  &_swigt__p_Seiscomp__DataModel__TimeArray,
  &_swigt__p_Seiscomp__DataModel__TimePDF1D,
  &_swigt__p_Seiscomp__DataModel__TimeQuantity,
  &_swigt__p_Seiscomp__DataModel__TimeWindow,
  &_swigt__p_Seiscomp__DataModel__Visitor,
  &_swigt__p_Seiscomp__DataModel__WaveformQuality,
  &_swigt__p_Seiscomp__DataModel__WaveformStreamID,
  &_swigt__p_Seiscomp__GenericRecord,
  &_swigt__p_Seiscomp__Geo__GeoCoordinate,
  &_swigt__p_Seiscomp__Geo__GeoFeature,
  &_swigt__p_Seiscomp__Geo__GeoFeatureSet,
  &_swigt__p_Seiscomp__IO__BinaryArchive,
  &_swigt__p_Seiscomp__IO__Cropper,
  &_swigt__p_Seiscomp__IO__DatabaseInterface,
  &_swigt__p_Seiscomp__IO__Exporter,
  &_swigt__p_Seiscomp__IO__GFArchive,
  &_swigt__p_Seiscomp__IO__GFReceiver,
  &_swigt__p_Seiscomp__IO__GFSource,
  &_swigt__p_Seiscomp__IO__Importer,
  &_swigt__p_Seiscomp__IO__MSeedRecord,
  &_swigt__p_Seiscomp__IO__PipeFilter,
  &_swigt__p_Seiscomp__IO__RecordDemuxFilter,
  &_swigt__p_Seiscomp__IO__RecordFilterInterface,
  &_swigt__p_Seiscomp__IO__RecordIIRFilterT_double_t,
  &_swigt__p_Seiscomp__IO__RecordIIRFilterT_float_t,
  &_swigt__p_Seiscomp__IO__RecordInput,
  &_swigt__p_Seiscomp__IO__RecordResamplerBase,
  &_swigt__p_Seiscomp__IO__RecordResamplerT_double_t,
  &_swigt__p_Seiscomp__IO__RecordResamplerT_float_t,
  &_swigt__p_Seiscomp__IO__RecordResamplerT_int_t,
  &_swigt__p_Seiscomp__IO__RecordStream,
  &_swigt__p_Seiscomp__IO__VBinaryArchive,
  &_swigt__p_Seiscomp__IO__XMLArchive,
  &_swigt__p_Seiscomp__Math__Filtering__AverageT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__AverageT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTA2T_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTA2T_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTAT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTAT_float_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t,
  &_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t,
  &_swigt__p_Seiscomp__Math__Geo__CityT_double_t,
  &_swigt__p_Seiscomp__Math__Geo__CityT_float_t,
  &_swigt__p_Seiscomp__Math__Geo__CoordT_double_t,
  &_swigt__p_Seiscomp__Math__Geo__CoordT_float_t,
  &_swigt__p_Seiscomp__Math__Geo__NamedCoordT_double_t,
  &_swigt__p_Seiscomp__Math__Geo__NamedCoordT_float_t,
  &_swigt__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros,
  &_swigt__p_Seiscomp__Math__Restitution__FFT__ResponseList,
  &_swigt__p_Seiscomp__Math__Restitution__FFT__TransferFunction,
  &_swigt__p_Seiscomp__NumericArrayT_char_t,
  &_swigt__p_Seiscomp__NumericArrayT_double_t,
  &_swigt__p_Seiscomp__NumericArrayT_float_t,
  &_swigt__p_Seiscomp__NumericArrayT_int_t,
  &_swigt__p_Seiscomp__Record,
  &_swigt__p_Seiscomp__RecordStream__Arclink__ArclinkConnection,
  &_swigt__p_Seiscomp__RecordStream__CombinedConnection,
  &_swigt__p_Seiscomp__RecordStream__File,
  &_swigt__p_Seiscomp__RecordStream__SLConnection,
  &_swigt__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t,
  &_swigt__p_Seiscomp__TypedArrayT_char_t,
  &_swigt__p_Seiscomp__TypedArrayT_double_t,
  &_swigt__p_Seiscomp__TypedArrayT_float_t,
  &_swigt__p_Seiscomp__TypedArrayT_int_t,
  &_swigt__p_Seiscomp__TypedArrayT_std__complexT_double_t_t,
  &_swigt__p_Seiscomp__TypedArrayT_std__complexT_float_t_t,
  &_swigt__p_Seiscomp__TypedArrayT_std__string_t,
  &_swigt__p_Storage,
  &_swigt__p_TimePoint,
  &_swigt__p_Type,
  &_swigt__p_ValueType,
  &_swigt__p_Weeks,
  &_swigt__p_allocator_type,
  &_swigt__p_boost__any,
  &_swigt__p_char,
  &_swigt__p_char_type,
  &_swigt__p_const_iterator,
  &_swigt__p_difference_type,
  &_swigt__p_fmtflags,
  &_swigt__p_int,
  &_swigt__p_int_type,
  &_swigt__p_iostate,
  &_swigt__p_iterator,
  &_swigt__p_iterator_category,
  &_swigt__p_long,
  &_swigt__p_long_long,
  &_swigt__p_off_type,
  &_swigt__p_openmode,
  &_swigt__p_pos_type,
  &_swigt__p_seekdir,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_t,
  &_swigt__p_size_type,
  &_swigt__p_state_type,
  &_swigt__p_std__basic_iosT_char_t,
  &_swigt__p_std__complexT_double_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__shared_ptrT_Seiscomp__Core__MetaObject_t,
  &_swigt__p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t,
  &_swigt__p_std__vectorT_Seiscomp__Core__BaseObject_p_t,
  &_swigt__p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t,
  &_swigt__p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t,
  &_swigt__p_std__vectorT_std__complexT_double_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_traits_type,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_Archive[] = {  {&_swigt__p_Archive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AttachmentList[] = {  {&_swigt__p_AttachmentList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AttachmentType[] = {  {&_swigt__p_AttachmentType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Attributes[] = {  {&_swigt__p_Attributes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DataArray[] = {  {&_swigt__p_DataArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Days[] = {  {&_swigt__p_Days, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Duration[] = {  {&_swigt__p_Duration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F1[] = {  {&_swigt__p_F1, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F2[] = {  {&_swigt__p_F2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F3[] = {  {&_swigt__p_F3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F4[] = {  {&_swigt__p_F4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F5[] = {  {&_swigt__p_F5, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_F6[] = {  {&_swigt__p_F6, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Hours[] = {  {&_swigt__p_Hours, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ImplType[] = {  {&_swigt__p_ImplType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_InplaceFilterType[] = {  {&_swigt__p_InplaceFilterType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Iterator[] = {  {&_swigt__p_Iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LogNodeCPtr[] = {  {&_swigt__p_LogNodeCPtr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LogNodePtr[] = {  {&_swigt__p_LogNodePtr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MSRecord_s[] = {  {&_swigt__p_MSRecord_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MajorType[] = {  {&_swigt__p_MajorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MicroSeconds[] = {  {&_swigt__p_MicroSeconds, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MilliSeconds[] = {  {&_swigt__p_MilliSeconds, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MinorType[] = {  {&_swigt__p_MinorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Minutes[] = {  {&_swigt__p_Minutes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Notifiers[] = {  {&_swigt__p_Notifiers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OID[] = {  {&_swigt__p_OID, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PackType[] = {  {&_swigt__p_PackType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PatchType[] = {  {&_swigt__p_PatchType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PopCallback[] = {  {&_swigt__p_PopCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Properties[] = {  {&_swigt__p_Properties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PropertyIndex[] = {  {&_swigt__p_PropertyIndex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PropertyValue[] = {  {&_swigt__p_PropertyValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PublicObjectMap[] = {  {&_swigt__p_PublicObjectMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PushCallback[] = {  {&_swigt__p_PushCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ReferenceType[] = {  {&_swigt__p_ReferenceType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RootType[] = {  {&_swigt__p_RootType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seconds[] = {  {&_swigt__p_Seconds, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Array[] = {{&_swigt__p_Seiscomp__Array, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__BitSet[] = {{&_swigt__p_Seiscomp__BitSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__DataMessage[] = {{&_swigt__p_Seiscomp__Core__DataMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t[] = {{&_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t[] = {{&_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__GreensFunction[] = {{&_swigt__p_Seiscomp__Core__GreensFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__InterruptibleObject[] = {{&_swigt__p_Seiscomp__Core__InterruptibleObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__Message[] = {{&_swigt__p_Seiscomp__Core__Message, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Access[] = {{&_swigt__p_Seiscomp__DataModel__Access, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Amplitude[] = {{&_swigt__p_Seiscomp__DataModel__Amplitude, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__AmplitudeReference[] = {{&_swigt__p_Seiscomp__DataModel__AmplitudeReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkLog[] = {{&_swigt__p_Seiscomp__DataModel__ArclinkLog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkRequest[] = {{&_swigt__p_Seiscomp__DataModel__ArclinkRequest, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkRequestLine[] = {{&_swigt__p_Seiscomp__DataModel__ArclinkRequestLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkStatusLine[] = {{&_swigt__p_Seiscomp__DataModel__ArclinkStatusLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkUser[] = {{&_swigt__p_Seiscomp__DataModel__ArclinkUser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Arrival[] = {{&_swigt__p_Seiscomp__DataModel__Arrival, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArtificialEventParametersMessage[] = {{&_swigt__p_Seiscomp__DataModel__ArtificialEventParametersMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArtificialOriginMessage[] = {{&_swigt__p_Seiscomp__DataModel__ArtificialOriginMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__AuxDevice[] = {{&_swigt__p_Seiscomp__DataModel__AuxDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__AuxSource[] = {{&_swigt__p_Seiscomp__DataModel__AuxSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__AuxStream[] = {{&_swigt__p_Seiscomp__DataModel__AuxStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Comment[] = {{&_swigt__p_Seiscomp__DataModel__Comment, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__CompositeTime[] = {{&_swigt__p_Seiscomp__DataModel__CompositeTime, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Config[] = {{&_swigt__p_Seiscomp__DataModel__Config, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ConfigModule[] = {{&_swigt__p_Seiscomp__DataModel__ConfigModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ConfigStation[] = {{&_swigt__p_Seiscomp__DataModel__ConfigStation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ConfigSyncMessage[] = {{&_swigt__p_Seiscomp__DataModel__ConfigSyncMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataAttributeExtent[] = {{&_swigt__p_Seiscomp__DataModel__DataAttributeExtent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataAvailability[] = {{&_swigt__p_Seiscomp__DataModel__DataAvailability, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataExtent[] = {{&_swigt__p_Seiscomp__DataModel__DataExtent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataSegment[] = {{&_swigt__p_Seiscomp__DataModel__DataSegment, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataUsed[] = {{&_swigt__p_Seiscomp__DataModel__DataUsed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DatabaseIterator[] = {{&_swigt__p_Seiscomp__DataModel__DatabaseIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Datalogger[] = {{&_swigt__p_Seiscomp__DataModel__Datalogger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DataloggerCalibration[] = {{&_swigt__p_Seiscomp__DataModel__DataloggerCalibration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Decimation[] = {{&_swigt__p_Seiscomp__DataModel__Decimation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Event[] = {{&_swigt__p_Seiscomp__DataModel__Event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__EventDescription[] = {{&_swigt__p_Seiscomp__DataModel__EventDescription, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__EventParameters[] = {{&_swigt__p_Seiscomp__DataModel__EventParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__FocalMechanism[] = {{&_swigt__p_Seiscomp__DataModel__FocalMechanism, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__FocalMechanismReference[] = {{&_swigt__p_Seiscomp__DataModel__FocalMechanismReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Inventory[] = {{&_swigt__p_Seiscomp__DataModel__Inventory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__InventorySyncMessage[] = {{&_swigt__p_Seiscomp__DataModel__InventorySyncMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__JournalEntry[] = {{&_swigt__p_Seiscomp__DataModel__JournalEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Journaling[] = {{&_swigt__p_Seiscomp__DataModel__Journaling, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Magnitude[] = {{&_swigt__p_Seiscomp__DataModel__Magnitude, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__MomentTensor[] = {{&_swigt__p_Seiscomp__DataModel__MomentTensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__MomentTensorComponentContribution[] = {{&_swigt__p_Seiscomp__DataModel__MomentTensorComponentContribution, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__MomentTensorPhaseSetting[] = {{&_swigt__p_Seiscomp__DataModel__MomentTensorPhaseSetting, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__MomentTensorStationContribution[] = {{&_swigt__p_Seiscomp__DataModel__MomentTensorStationContribution, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Network[] = {{&_swigt__p_Seiscomp__DataModel__Network, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Notifier[] = {{&_swigt__p_Seiscomp__DataModel__Notifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__NotifierMessage[] = {{&_swigt__p_Seiscomp__DataModel__NotifierMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Origin[] = {{&_swigt__p_Seiscomp__DataModel__Origin, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__OriginReference[] = {{&_swigt__p_Seiscomp__DataModel__OriginReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Outage[] = {{&_swigt__p_Seiscomp__DataModel__Outage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Parameter[] = {{&_swigt__p_Seiscomp__DataModel__Parameter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ParameterSet[] = {{&_swigt__p_Seiscomp__DataModel__ParameterSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Pick[] = {{&_swigt__p_Seiscomp__DataModel__Pick, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PickReference[] = {{&_swigt__p_Seiscomp__DataModel__PickReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PublicObjectCache[] = {{&_swigt__p_Seiscomp__DataModel__PublicObjectCache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PublicObjectRingBuffer[] = {{&_swigt__p_Seiscomp__DataModel__PublicObjectRingBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer[] = {{&_swigt__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__QCLog[] = {{&_swigt__p_Seiscomp__DataModel__QCLog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__QualityControl[] = {{&_swigt__p_Seiscomp__DataModel__QualityControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Reading[] = {{&_swigt__p_Seiscomp__DataModel__Reading, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ResponseFAP[] = {{&_swigt__p_Seiscomp__DataModel__ResponseFAP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ResponseFIR[] = {{&_swigt__p_Seiscomp__DataModel__ResponseFIR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ResponseIIR[] = {{&_swigt__p_Seiscomp__DataModel__ResponseIIR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ResponsePAZ[] = {{&_swigt__p_Seiscomp__DataModel__ResponsePAZ, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ResponsePolynomial[] = {{&_swigt__p_Seiscomp__DataModel__ResponsePolynomial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Route[] = {{&_swigt__p_Seiscomp__DataModel__Route, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__RouteArclink[] = {{&_swigt__p_Seiscomp__DataModel__RouteArclink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__RouteSeedlink[] = {{&_swigt__p_Seiscomp__DataModel__RouteSeedlink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Routing[] = {{&_swigt__p_Seiscomp__DataModel__Routing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Sensor[] = {{&_swigt__p_Seiscomp__DataModel__Sensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__SensorCalibration[] = {{&_swigt__p_Seiscomp__DataModel__SensorCalibration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__SensorLocation[] = {{&_swigt__p_Seiscomp__DataModel__SensorLocation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Setup[] = {{&_swigt__p_Seiscomp__DataModel__Setup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Station[] = {{&_swigt__p_Seiscomp__DataModel__Station, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StationGroup[] = {{&_swigt__p_Seiscomp__DataModel__StationGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StationMagnitude[] = {{&_swigt__p_Seiscomp__DataModel__StationMagnitude, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StationMagnitudeContribution[] = {{&_swigt__p_Seiscomp__DataModel__StationMagnitudeContribution, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StationReference[] = {{&_swigt__p_Seiscomp__DataModel__StationReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Stream[] = {{&_swigt__p_Seiscomp__DataModel__Stream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__WaveformQuality[] = {{&_swigt__p_Seiscomp__DataModel__WaveformQuality, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__GenericRecord[] = {{&_swigt__p_Seiscomp__GenericRecord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Geo__GeoFeature[] = {{&_swigt__p_Seiscomp__Geo__GeoFeature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Geo__GeoFeatureSet[] = {{&_swigt__p_Seiscomp__Geo__GeoFeatureSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__Cropper[] = {{&_swigt__p_Seiscomp__IO__Cropper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__Exporter[] = {{&_swigt__p_Seiscomp__IO__Exporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__GFArchive[] = {{&_swigt__p_Seiscomp__IO__GFArchive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__GFReceiver[] = {{&_swigt__p_Seiscomp__IO__GFReceiver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__GFSource[] = {{&_swigt__p_Seiscomp__IO__GFSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__Importer[] = {{&_swigt__p_Seiscomp__IO__Importer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__MSeedRecord[] = {{&_swigt__p_Seiscomp__IO__MSeedRecord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__PipeFilter[] = {{&_swigt__p_Seiscomp__IO__PipeFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordDemuxFilter[] = {{&_swigt__p_Seiscomp__IO__RecordDemuxFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordFilterInterface[] = {{&_swigt__p_Seiscomp__IO__RecordFilterInterface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordIIRFilterT_double_t[] = {{&_swigt__p_Seiscomp__IO__RecordIIRFilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordIIRFilterT_float_t[] = {{&_swigt__p_Seiscomp__IO__RecordIIRFilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordInput[] = {{&_swigt__p_Seiscomp__IO__RecordInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordResamplerBase[] = {{&_swigt__p_Seiscomp__IO__RecordResamplerBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordResamplerT_double_t[] = {{&_swigt__p_Seiscomp__IO__RecordResamplerT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordResamplerT_float_t[] = {{&_swigt__p_Seiscomp__IO__RecordResamplerT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordResamplerT_int_t[] = {{&_swigt__p_Seiscomp__IO__RecordResamplerT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__RecordStream[] = {{&_swigt__p_Seiscomp__IO__RecordStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__AverageT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__AverageT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__AverageT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__AverageT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__ChainFilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__ChainFilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__InitialTaperT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__InitialTaperT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__RunningMeanT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__RunningMeanT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTA2T_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTA2T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTA2T_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTA2T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTAT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTAT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTAT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTAT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t[] = {{&_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros[] = {{&_swigt__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Restitution__FFT__ResponseList[] = {{&_swigt__p_Seiscomp__Math__Restitution__FFT__ResponseList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Restitution__FFT__TransferFunction[] = {{&_swigt__p_Seiscomp__Math__Restitution__FFT__TransferFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Record[] = {{&_swigt__p_Seiscomp__Record, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__RecordStream__Arclink__ArclinkConnection[] = {{&_swigt__p_Seiscomp__RecordStream__Arclink__ArclinkConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__RecordStream__CombinedConnection[] = {{&_swigt__p_Seiscomp__RecordStream__CombinedConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__RecordStream__File[] = {{&_swigt__p_Seiscomp__RecordStream__File, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__RecordStream__SLConnection[] = {{&_swigt__p_Seiscomp__RecordStream__SLConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_char_t[] = {{&_swigt__p_Seiscomp__TypedArrayT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_double_t[] = {{&_swigt__p_Seiscomp__TypedArrayT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_float_t[] = {{&_swigt__p_Seiscomp__TypedArrayT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_int_t[] = {{&_swigt__p_Seiscomp__TypedArrayT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__BaseObject[] = {  {&_swigt__p_Seiscomp__Core__BaseObject, 0, 0, 0},  {&_swigt__p_Seiscomp__Array, _p_Seiscomp__ArrayTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__BitSet, _p_Seiscomp__BitSetTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__DataMessage, _p_Seiscomp__Core__DataMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t, _p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t, _p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__GreensFunction, _p_Seiscomp__Core__GreensFunctionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__InterruptibleObject, _p_Seiscomp__Core__InterruptibleObjectTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Core__Message, _p_Seiscomp__Core__MessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Access, _p_Seiscomp__DataModel__AccessTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Amplitude, _p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AmplitudeReference, _p_Seiscomp__DataModel__AmplitudeReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkLog, _p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequest, _p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequestLine, _p_Seiscomp__DataModel__ArclinkRequestLineTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequestSummary, _p_Seiscomp__DataModel__ArclinkRequestSummaryTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkStatusLine, _p_Seiscomp__DataModel__ArclinkStatusLineTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkUser, _p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Arrival, _p_Seiscomp__DataModel__ArrivalTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArtificialEventParametersMessage, _p_Seiscomp__DataModel__ArtificialEventParametersMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArtificialOriginMessage, _p_Seiscomp__DataModel__ArtificialOriginMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxDevice, _p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxSource, _p_Seiscomp__DataModel__AuxSourceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxStream, _p_Seiscomp__DataModel__AuxStreamTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Axis, _p_Seiscomp__DataModel__AxisTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Blob, _p_Seiscomp__DataModel__BlobTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Comment, _p_Seiscomp__DataModel__CommentTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ComplexArray, _p_Seiscomp__DataModel__ComplexArrayTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__CompositeTime, _p_Seiscomp__DataModel__CompositeTimeTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfidenceEllipsoid, _p_Seiscomp__DataModel__ConfidenceEllipsoidTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Config, _p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigModule, _p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigStation, _p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigSyncMessage, _p_Seiscomp__DataModel__ConfigSyncMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__CreationInfo, _p_Seiscomp__DataModel__CreationInfoTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataAttributeExtent, _p_Seiscomp__DataModel__DataAttributeExtentTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataAvailability, _p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataExtent, _p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataSegment, _p_Seiscomp__DataModel__DataSegmentTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataUsed, _p_Seiscomp__DataModel__DataUsedTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseArchive, _p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseIterator, _p_Seiscomp__DataModel__DatabaseIteratorTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, _p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseReader, _p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Datalogger, _p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataloggerCalibration, _p_Seiscomp__DataModel__DataloggerCalibrationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Decimation, _p_Seiscomp__DataModel__DecimationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Event, _p_Seiscomp__DataModel__EventTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__EventDescription, _p_Seiscomp__DataModel__EventDescriptionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__EventParameters, _p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__FocalMechanism, _p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__FocalMechanismReference, _p_Seiscomp__DataModel__FocalMechanismReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__IntegerQuantity, _p_Seiscomp__DataModel__IntegerQuantityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Inventory, _p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__InventorySyncMessage, _p_Seiscomp__DataModel__InventorySyncMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__JournalEntry, _p_Seiscomp__DataModel__JournalEntryTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Journaling, _p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Magnitude, _p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensor, _p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorComponentContribution, _p_Seiscomp__DataModel__MomentTensorComponentContributionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorPhaseSetting, _p_Seiscomp__DataModel__MomentTensorPhaseSettingTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorStationContribution, _p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Network, _p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__NodalPlane, _p_Seiscomp__DataModel__NodalPlaneTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__NodalPlanes, _p_Seiscomp__DataModel__NodalPlanesTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Notifier, _p_Seiscomp__DataModel__NotifierTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__NotifierMessage, _p_Seiscomp__DataModel__NotifierMessageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Object, _p_Seiscomp__DataModel__ObjectTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Observer, _p_Seiscomp__DataModel__ObserverTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Origin, _p_Seiscomp__DataModel__OriginTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__OriginQuality, _p_Seiscomp__DataModel__OriginQualityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__OriginReference, _p_Seiscomp__DataModel__OriginReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__OriginUncertainty, _p_Seiscomp__DataModel__OriginUncertaintyTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Outage, _p_Seiscomp__DataModel__OutageTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Parameter, _p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ParameterSet, _p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Phase, _p_Seiscomp__DataModel__PhaseTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Pick, _p_Seiscomp__DataModel__PickTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PickReference, _p_Seiscomp__DataModel__PickReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PrincipalAxes, _p_Seiscomp__DataModel__PrincipalAxesTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PublicObject, _p_Seiscomp__DataModel__PublicObjectTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PublicObjectCache, _p_Seiscomp__DataModel__PublicObjectCacheTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PublicObjectRingBuffer, _p_Seiscomp__DataModel__PublicObjectRingBufferTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer, _p_Seiscomp__DataModel__PublicObjectTimeSpanBufferTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QCLog, _p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QualityControl, _p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Reading, _p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RealArray, _p_Seiscomp__DataModel__RealArrayTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RealPDF1D, _p_Seiscomp__DataModel__RealPDF1DTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RealQuantity, _p_Seiscomp__DataModel__RealQuantityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFAP, _p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFIR, _p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseIIR, _p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePAZ, _p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePolynomial, _p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Route, _p_Seiscomp__DataModel__RouteTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RouteArclink, _p_Seiscomp__DataModel__RouteArclinkTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RouteSeedlink, _p_Seiscomp__DataModel__RouteSeedlinkTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Routing, _p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Sensor, _p_Seiscomp__DataModel__SensorTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SensorCalibration, _p_Seiscomp__DataModel__SensorCalibrationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SensorLocation, _p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Setup, _p_Seiscomp__DataModel__SetupTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SourceTimeFunction, _p_Seiscomp__DataModel__SourceTimeFunctionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Station, _p_Seiscomp__DataModel__StationTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationGroup, _p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationMagnitude, _p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationMagnitudeContribution, _p_Seiscomp__DataModel__StationMagnitudeContributionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationReference, _p_Seiscomp__DataModel__StationReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Stream, _p_Seiscomp__DataModel__StreamTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Contact, _p_Seiscomp__DataModel__StrongMotion__ContactTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__EventRecordReference, _p_Seiscomp__DataModel__StrongMotion__EventRecordReferenceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__FileResource, _p_Seiscomp__DataModel__StrongMotion__FileResourceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__FilterParameter, _p_Seiscomp__DataModel__StrongMotion__FilterParameterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__LiteratureSource, _p_Seiscomp__DataModel__StrongMotion__LiteratureSourceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__PeakMotion, _p_Seiscomp__DataModel__StrongMotion__PeakMotionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Record, _p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Rupture, _p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter, _p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, _p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, _p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, _p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, _p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, _p_Seiscomp__DataModel__StrongMotion__SurfaceRuptureTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Tensor, _p_Seiscomp__DataModel__TensorTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__TimeArray, _p_Seiscomp__DataModel__TimeArrayTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__TimePDF1D, _p_Seiscomp__DataModel__TimePDF1DTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__TimeQuantity, _p_Seiscomp__DataModel__TimeQuantityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__TimeWindow, _p_Seiscomp__DataModel__TimeWindowTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__WaveformQuality, _p_Seiscomp__DataModel__WaveformQualityTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__WaveformStreamID, _p_Seiscomp__DataModel__WaveformStreamIDTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__GenericRecord, _p_Seiscomp__GenericRecordTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Geo__GeoFeature, _p_Seiscomp__Geo__GeoFeatureTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Geo__GeoFeatureSet, _p_Seiscomp__Geo__GeoFeatureSetTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__Cropper, _p_Seiscomp__IO__CropperTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__DatabaseInterface, _p_Seiscomp__IO__DatabaseInterfaceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__Exporter, _p_Seiscomp__IO__ExporterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__GFArchive, _p_Seiscomp__IO__GFArchiveTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__GFReceiver, _p_Seiscomp__IO__GFReceiverTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__GFSource, _p_Seiscomp__IO__GFSourceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__Importer, _p_Seiscomp__IO__ImporterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__MSeedRecord, _p_Seiscomp__IO__MSeedRecordTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__PipeFilter, _p_Seiscomp__IO__PipeFilterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordDemuxFilter, _p_Seiscomp__IO__RecordDemuxFilterTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordFilterInterface, _p_Seiscomp__IO__RecordFilterInterfaceTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordIIRFilterT_double_t, _p_Seiscomp__IO__RecordIIRFilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordIIRFilterT_float_t, _p_Seiscomp__IO__RecordIIRFilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordInput, _p_Seiscomp__IO__RecordInputTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordResamplerBase, _p_Seiscomp__IO__RecordResamplerBaseTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordResamplerT_double_t, _p_Seiscomp__IO__RecordResamplerT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordResamplerT_float_t, _p_Seiscomp__IO__RecordResamplerT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordResamplerT_int_t, _p_Seiscomp__IO__RecordResamplerT_int_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__IO__RecordStream, _p_Seiscomp__IO__RecordStreamTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__AverageT_double_t, _p_Seiscomp__Math__Filtering__AverageT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__AverageT_float_t, _p_Seiscomp__Math__Filtering__AverageT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_double_t, _p_Seiscomp__Math__Filtering__ChainFilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__ChainFilterT_float_t, _p_Seiscomp__Math__Filtering__ChainFilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t, _p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t, _p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t, _p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t, _p_Seiscomp__Math__Filtering__IIR__FilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t, _p_Seiscomp__Math__Filtering__IIR__FilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t, _p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t, _p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t, _p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t, _p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t, _p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t, _p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t, _p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t, _p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t, _p_Seiscomp__Math__Filtering__InPlaceFilterT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t, _p_Seiscomp__Math__Filtering__InPlaceFilterT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_double_t, _p_Seiscomp__Math__Filtering__InitialTaperT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__InitialTaperT_float_t, _p_Seiscomp__Math__Filtering__InitialTaperT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t, _p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t, _p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_double_t, _p_Seiscomp__Math__Filtering__RunningMeanT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__RunningMeanT_float_t, _p_Seiscomp__Math__Filtering__RunningMeanT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTA2T_double_t, _p_Seiscomp__Math__Filtering__STALTA2T_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTA2T_float_t, _p_Seiscomp__Math__Filtering__STALTA2T_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTAT_double_t, _p_Seiscomp__Math__Filtering__STALTAT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTAT_float_t, _p_Seiscomp__Math__Filtering__STALTAT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t, _p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t, _p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_double_t, _p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_float_t, _p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CoordT_double_t, _p_Seiscomp__Math__Geo__CoordT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CoordT_float_t, _p_Seiscomp__Math__Geo__CoordT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_double_t, _p_Seiscomp__Math__Geo__NamedCoordT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_float_t, _p_Seiscomp__Math__Geo__NamedCoordT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros, _p_Seiscomp__Math__Restitution__FFT__PolesAndZerosTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Restitution__FFT__ResponseList, _p_Seiscomp__Math__Restitution__FFT__ResponseListTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Math__Restitution__FFT__TransferFunction, _p_Seiscomp__Math__Restitution__FFT__TransferFunctionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__NumericArrayT_char_t, _p_Seiscomp__NumericArrayT_char_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__NumericArrayT_double_t, _p_Seiscomp__NumericArrayT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__NumericArrayT_float_t, _p_Seiscomp__NumericArrayT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__NumericArrayT_int_t, _p_Seiscomp__NumericArrayT_int_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__Record, _p_Seiscomp__RecordTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__RecordStream__Arclink__ArclinkConnection, _p_Seiscomp__RecordStream__Arclink__ArclinkConnectionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__RecordStream__CombinedConnection, _p_Seiscomp__RecordStream__CombinedConnectionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__RecordStream__File, _p_Seiscomp__RecordStream__FileTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__RecordStream__SLConnection, _p_Seiscomp__RecordStream__SLConnectionTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t, _p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_char_t, _p_Seiscomp__TypedArrayT_char_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_double_t, _p_Seiscomp__TypedArrayT_double_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_float_t, _p_Seiscomp__TypedArrayT_float_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_int_t, _p_Seiscomp__TypedArrayT_int_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_std__complexT_double_t_t, _p_Seiscomp__TypedArrayT_std__complexT_double_t_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_std__complexT_float_t_t, _p_Seiscomp__TypedArrayT_std__complexT_float_t_tTo_p_Seiscomp__Core__BaseObject, 0, 0},  {&_swigt__p_Seiscomp__TypedArrayT_std__string_t, _p_Seiscomp__TypedArrayT_std__string_tTo_p_Seiscomp__Core__BaseObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t[] = {  {&_swigt__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__BinaryArchive[] = {{&_swigt__p_Seiscomp__IO__BinaryArchive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__VBinaryArchive[] = {{&_swigt__p_Seiscomp__IO__VBinaryArchive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__XMLArchive[] = {{&_swigt__p_Seiscomp__IO__XMLArchive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t[] = {  {&_swigt__p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseReader, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseArchive, _p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t, 0, 0},  {&_swigt__p_Seiscomp__IO__BinaryArchive, _p_Seiscomp__IO__BinaryArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t, 0, 0},  {&_swigt__p_Seiscomp__IO__VBinaryArchive, _p_Seiscomp__IO__VBinaryArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t, 0, 0},  {&_swigt__p_Seiscomp__IO__XMLArchive, _p_Seiscomp__IO__XMLArchiveTo_p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t[] = {  {&_swigt__p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__MetaObject[] = {  {&_swigt__p_Seiscomp__Core__MetaObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__RTTI[] = {  {&_swigt__p_Seiscomp__Core__RTTI, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl[] = {  {&_swigt__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Core__Time[] = {  {&_swigt__p_Seiscomp__Core__Time, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ArclinkRequestSummary[] = {  {&_swigt__p_Seiscomp__DataModel__ArclinkRequestSummary, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Axis[] = {  {&_swigt__p_Seiscomp__DataModel__Axis, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Blob[] = {  {&_swigt__p_Seiscomp__DataModel__Blob, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ComplexArray[] = {  {&_swigt__p_Seiscomp__DataModel__ComplexArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__ConfidenceEllipsoid[] = {  {&_swigt__p_Seiscomp__DataModel__ConfidenceEllipsoid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__CreationInfo[] = {  {&_swigt__p_Seiscomp__DataModel__CreationInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DatabaseArchive[] = {  {&_swigt__p_Seiscomp__DataModel__DatabaseArchive, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, _p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__DatabaseArchive, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseReader, _p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__DataModel__DatabaseArchive, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, _p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseArchive, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DatabaseQuery[] = {  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, _p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseQuery, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DatabaseReader[] = {  {&_swigt__p_Seiscomp__DataModel__DatabaseReader, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, _p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__DatabaseReader, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, _p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__DatabaseReader, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__IntegerQuantity[] = {  {&_swigt__p_Seiscomp__DataModel__IntegerQuantity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__NodalPlane[] = {  {&_swigt__p_Seiscomp__DataModel__NodalPlane, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__NodalPlanes[] = {  {&_swigt__p_Seiscomp__DataModel__NodalPlanes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Object[] = {  {&_swigt__p_Seiscomp__DataModel__Object, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Access, _p_Seiscomp__DataModel__AccessTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Amplitude, _p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AmplitudeReference, _p_Seiscomp__DataModel__AmplitudeReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkLog, _p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequest, _p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequestLine, _p_Seiscomp__DataModel__ArclinkRequestLineTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkStatusLine, _p_Seiscomp__DataModel__ArclinkStatusLineTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkUser, _p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Arrival, _p_Seiscomp__DataModel__ArrivalTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxDevice, _p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxSource, _p_Seiscomp__DataModel__AuxSourceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxStream, _p_Seiscomp__DataModel__AuxStreamTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Comment, _p_Seiscomp__DataModel__CommentTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__CompositeTime, _p_Seiscomp__DataModel__CompositeTimeTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Config, _p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigModule, _p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigStation, _p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataAttributeExtent, _p_Seiscomp__DataModel__DataAttributeExtentTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataAvailability, _p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataExtent, _p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataSegment, _p_Seiscomp__DataModel__DataSegmentTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataUsed, _p_Seiscomp__DataModel__DataUsedTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Datalogger, _p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataloggerCalibration, _p_Seiscomp__DataModel__DataloggerCalibrationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Decimation, _p_Seiscomp__DataModel__DecimationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Event, _p_Seiscomp__DataModel__EventTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__EventDescription, _p_Seiscomp__DataModel__EventDescriptionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__EventParameters, _p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__FocalMechanism, _p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__FocalMechanismReference, _p_Seiscomp__DataModel__FocalMechanismReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Inventory, _p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__JournalEntry, _p_Seiscomp__DataModel__JournalEntryTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Journaling, _p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Magnitude, _p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensor, _p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorComponentContribution, _p_Seiscomp__DataModel__MomentTensorComponentContributionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorPhaseSetting, _p_Seiscomp__DataModel__MomentTensorPhaseSettingTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorStationContribution, _p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Network, _p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Origin, _p_Seiscomp__DataModel__OriginTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__OriginReference, _p_Seiscomp__DataModel__OriginReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Outage, _p_Seiscomp__DataModel__OutageTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Parameter, _p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ParameterSet, _p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Pick, _p_Seiscomp__DataModel__PickTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PickReference, _p_Seiscomp__DataModel__PickReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__PublicObject, _p_Seiscomp__DataModel__PublicObjectTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QCLog, _p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QualityControl, _p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Reading, _p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFAP, _p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFIR, _p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseIIR, _p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePAZ, _p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePolynomial, _p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Route, _p_Seiscomp__DataModel__RouteTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RouteArclink, _p_Seiscomp__DataModel__RouteArclinkTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__RouteSeedlink, _p_Seiscomp__DataModel__RouteSeedlinkTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Routing, _p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Sensor, _p_Seiscomp__DataModel__SensorTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SensorCalibration, _p_Seiscomp__DataModel__SensorCalibrationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SensorLocation, _p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Setup, _p_Seiscomp__DataModel__SetupTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Station, _p_Seiscomp__DataModel__StationTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationGroup, _p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationMagnitude, _p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationMagnitudeContribution, _p_Seiscomp__DataModel__StationMagnitudeContributionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationReference, _p_Seiscomp__DataModel__StationReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Stream, _p_Seiscomp__DataModel__StreamTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__EventRecordReference, _p_Seiscomp__DataModel__StrongMotion__EventRecordReferenceTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__FilterParameter, _p_Seiscomp__DataModel__StrongMotion__FilterParameterTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__PeakMotion, _p_Seiscomp__DataModel__StrongMotion__PeakMotionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Record, _p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Rupture, _p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter, _p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, _p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, _p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, _p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__DataModel__Object, 0, 0},  {&_swigt__p_Seiscomp__DataModel__WaveformQuality, _p_Seiscomp__DataModel__WaveformQualityTo_p_Seiscomp__DataModel__Object, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Observer[] = {  {&_swigt__p_Seiscomp__DataModel__Observer, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseArchive, _p_Seiscomp__DataModel__DatabaseArchiveTo_p_Seiscomp__DataModel__Observer, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseQuery, _p_Seiscomp__DataModel__DatabaseQueryTo_p_Seiscomp__DataModel__Observer, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseReader, _p_Seiscomp__DataModel__DatabaseReaderTo_p_Seiscomp__DataModel__Observer, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, _p_Seiscomp__DataModel__StrongMotion__StrongMotionReaderTo_p_Seiscomp__DataModel__Observer, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__OriginQuality[] = {  {&_swigt__p_Seiscomp__DataModel__OriginQuality, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__OriginUncertainty[] = {  {&_swigt__p_Seiscomp__DataModel__OriginUncertainty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Phase[] = {  {&_swigt__p_Seiscomp__DataModel__Phase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PrincipalAxes[] = {  {&_swigt__p_Seiscomp__DataModel__PrincipalAxes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__PublicObject[] = {  {&_swigt__p_Seiscomp__DataModel__PublicObject, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Amplitude, _p_Seiscomp__DataModel__AmplitudeTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkLog, _p_Seiscomp__DataModel__ArclinkLogTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkRequest, _p_Seiscomp__DataModel__ArclinkRequestTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ArclinkUser, _p_Seiscomp__DataModel__ArclinkUserTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__AuxDevice, _p_Seiscomp__DataModel__AuxDeviceTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Config, _p_Seiscomp__DataModel__ConfigTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigModule, _p_Seiscomp__DataModel__ConfigModuleTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ConfigStation, _p_Seiscomp__DataModel__ConfigStationTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataAvailability, _p_Seiscomp__DataModel__DataAvailabilityTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DataExtent, _p_Seiscomp__DataModel__DataExtentTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Datalogger, _p_Seiscomp__DataModel__DataloggerTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Event, _p_Seiscomp__DataModel__EventTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__EventParameters, _p_Seiscomp__DataModel__EventParametersTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__FocalMechanism, _p_Seiscomp__DataModel__FocalMechanismTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Inventory, _p_Seiscomp__DataModel__InventoryTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Journaling, _p_Seiscomp__DataModel__JournalingTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Magnitude, _p_Seiscomp__DataModel__MagnitudeTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensor, _p_Seiscomp__DataModel__MomentTensorTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__MomentTensorStationContribution, _p_Seiscomp__DataModel__MomentTensorStationContributionTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Network, _p_Seiscomp__DataModel__NetworkTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Origin, _p_Seiscomp__DataModel__OriginTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Parameter, _p_Seiscomp__DataModel__ParameterTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ParameterSet, _p_Seiscomp__DataModel__ParameterSetTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Pick, _p_Seiscomp__DataModel__PickTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QCLog, _p_Seiscomp__DataModel__QCLogTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__QualityControl, _p_Seiscomp__DataModel__QualityControlTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Reading, _p_Seiscomp__DataModel__ReadingTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFAP, _p_Seiscomp__DataModel__ResponseFAPTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseFIR, _p_Seiscomp__DataModel__ResponseFIRTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponseIIR, _p_Seiscomp__DataModel__ResponseIIRTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePAZ, _p_Seiscomp__DataModel__ResponsePAZTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__ResponsePolynomial, _p_Seiscomp__DataModel__ResponsePolynomialTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Route, _p_Seiscomp__DataModel__RouteTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Routing, _p_Seiscomp__DataModel__RoutingTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Sensor, _p_Seiscomp__DataModel__SensorTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__SensorLocation, _p_Seiscomp__DataModel__SensorLocationTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Station, _p_Seiscomp__DataModel__StationTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationGroup, _p_Seiscomp__DataModel__StationGroupTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StationMagnitude, _p_Seiscomp__DataModel__StationMagnitudeTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__Stream, _p_Seiscomp__DataModel__StreamTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Record, _p_Seiscomp__DataModel__StrongMotion__RecordTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Rupture, _p_Seiscomp__DataModel__StrongMotion__RuptureTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter, _p_Seiscomp__DataModel__StrongMotion__SimpleFilterTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, _p_Seiscomp__DataModel__StrongMotion__StrongMotionParametersTo_p_Seiscomp__DataModel__PublicObject, 0, 0},  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, _p_Seiscomp__DataModel__StrongMotion__StrongOriginDescriptionTo_p_Seiscomp__DataModel__PublicObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__RealArray[] = {  {&_swigt__p_Seiscomp__DataModel__RealArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__RealPDF1D[] = {  {&_swigt__p_Seiscomp__DataModel__RealPDF1D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__RealQuantity[] = {  {&_swigt__p_Seiscomp__DataModel__RealQuantity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__SourceTimeFunction[] = {  {&_swigt__p_Seiscomp__DataModel__SourceTimeFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__Contact[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Contact, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__EventRecordReference[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__EventRecordReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__FileResource[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__FileResource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__FilterParameter[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__FilterParameter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__LiteratureSource[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__LiteratureSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__PeakMotion[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__PeakMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__Record[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Record, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__Rupture[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__Rupture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilter[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture[] = {  {&_swigt__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Tensor[] = {  {&_swigt__p_Seiscomp__DataModel__Tensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__TimeArray[] = {  {&_swigt__p_Seiscomp__DataModel__TimeArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__TimePDF1D[] = {  {&_swigt__p_Seiscomp__DataModel__TimePDF1D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__TimeQuantity[] = {  {&_swigt__p_Seiscomp__DataModel__TimeQuantity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__TimeWindow[] = {  {&_swigt__p_Seiscomp__DataModel__TimeWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__DatabaseObjectWriter[] = {{&_swigt__p_Seiscomp__DataModel__DatabaseObjectWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__NotifierCreator[] = {{&_swigt__p_Seiscomp__DataModel__NotifierCreator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__Visitor[] = {  {&_swigt__p_Seiscomp__DataModel__Visitor, 0, 0, 0},  {&_swigt__p_Seiscomp__DataModel__DatabaseObjectWriter, _p_Seiscomp__DataModel__DatabaseObjectWriterTo_p_Seiscomp__DataModel__Visitor, 0, 0},  {&_swigt__p_Seiscomp__DataModel__NotifierCreator, _p_Seiscomp__DataModel__NotifierCreatorTo_p_Seiscomp__DataModel__Visitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__DataModel__WaveformStreamID[] = {  {&_swigt__p_Seiscomp__DataModel__WaveformStreamID, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Geo__GeoCoordinate[] = {  {&_swigt__p_Seiscomp__Geo__GeoCoordinate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__IO__DatabaseInterface[] = {  {&_swigt__p_Seiscomp__IO__DatabaseInterface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__CityT_double_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__CityT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__CityT_float_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__CityT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__CoordT_double_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__CoordT_double_t, 0, 0, 0},  {&_swigt__p_Seiscomp__IO__GFReceiver, _p_Seiscomp__IO__GFReceiverTo_p_Seiscomp__Math__Geo__CoordT_double_t, 0, 0},  {&_swigt__p_Seiscomp__IO__GFSource, _p_Seiscomp__IO__GFSourceTo_p_Seiscomp__Math__Geo__CoordT_double_t, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_double_t, _p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Math__Geo__CoordT_double_t, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_double_t, _p_Seiscomp__Math__Geo__NamedCoordT_double_tTo_p_Seiscomp__Math__Geo__CoordT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__CoordT_float_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__CoordT_float_t, 0, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_float_t, _p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Math__Geo__CoordT_float_t, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_float_t, _p_Seiscomp__Math__Geo__NamedCoordT_float_tTo_p_Seiscomp__Math__Geo__CoordT_float_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__NamedCoordT_double_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_double_t, 0, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_double_t, _p_Seiscomp__Math__Geo__CityT_double_tTo_p_Seiscomp__Math__Geo__NamedCoordT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__Math__Geo__NamedCoordT_float_t[] = {  {&_swigt__p_Seiscomp__Math__Geo__NamedCoordT_float_t, 0, 0, 0},  {&_swigt__p_Seiscomp__Math__Geo__CityT_float_t, _p_Seiscomp__Math__Geo__CityT_float_tTo_p_Seiscomp__Math__Geo__NamedCoordT_float_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__NumericArrayT_char_t[] = {  {&_swigt__p_Seiscomp__NumericArrayT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__NumericArrayT_double_t[] = {  {&_swigt__p_Seiscomp__NumericArrayT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__NumericArrayT_float_t[] = {  {&_swigt__p_Seiscomp__NumericArrayT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__NumericArrayT_int_t[] = {  {&_swigt__p_Seiscomp__NumericArrayT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t[] = {  {&_swigt__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_std__complexT_double_t_t[] = {  {&_swigt__p_Seiscomp__TypedArrayT_std__complexT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_std__complexT_float_t_t[] = {  {&_swigt__p_Seiscomp__TypedArrayT_std__complexT_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Seiscomp__TypedArrayT_std__string_t[] = {  {&_swigt__p_Seiscomp__TypedArrayT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Storage[] = {  {&_swigt__p_Storage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TimePoint[] = {  {&_swigt__p_TimePoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Type[] = {  {&_swigt__p_Type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValueType[] = {  {&_swigt__p_ValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Weeks[] = {  {&_swigt__p_Weeks, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__any[] = {  {&_swigt__p_boost__any, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char_type[] = {  {&_swigt__p_char_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_iterator[] = {  {&_swigt__p_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fmtflags[] = {  {&_swigt__p_fmtflags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int_type[] = {  {&_swigt__p_int_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iostate[] = {  {&_swigt__p_iostate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator[] = {  {&_swigt__p_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_category[] = {  {&_swigt__p_iterator_category, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_off_type[] = {  {&_swigt__p_off_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_openmode[] = {  {&_swigt__p_openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pos_type[] = {  {&_swigt__p_pos_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_seekdir[] = {  {&_swigt__p_seekdir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_state_type[] = {  {&_swigt__p_state_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_iosT_char_t[] = {  {&_swigt__p_std__basic_iosT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__complexT_double_t[] = {  {&_swigt__p_std__complexT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__shared_ptrT_Seiscomp__Core__MetaObject_t[] = {  {&_swigt__p_std__shared_ptrT_Seiscomp__Core__MetaObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t[] = {  {&_swigt__p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_Seiscomp__Core__BaseObject_p_t[] = {  {&_swigt__p_std__vectorT_Seiscomp__Core__BaseObject_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t[] = {  {&_swigt__p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t[] = {  {&_swigt__p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__complexT_double_t_t[] = {  {&_swigt__p_std__vectorT_std__complexT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_traits_type[] = {  {&_swigt__p_traits_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_Archive,
  _swigc__p_AttachmentList,
  _swigc__p_AttachmentType,
  _swigc__p_Attributes,
  _swigc__p_DataArray,
  _swigc__p_Days,
  _swigc__p_Duration,
  _swigc__p_F1,
  _swigc__p_F2,
  _swigc__p_F3,
  _swigc__p_F4,
  _swigc__p_F5,
  _swigc__p_F6,
  _swigc__p_Hours,
  _swigc__p_ImplType,
  _swigc__p_InplaceFilterType,
  _swigc__p_Iterator,
  _swigc__p_LogNodeCPtr,
  _swigc__p_LogNodePtr,
  _swigc__p_MSRecord_s,
  _swigc__p_MajorType,
  _swigc__p_MicroSeconds,
  _swigc__p_MilliSeconds,
  _swigc__p_MinorType,
  _swigc__p_Minutes,
  _swigc__p_Notifiers,
  _swigc__p_OID,
  _swigc__p_PackType,
  _swigc__p_PatchType,
  _swigc__p_PopCallback,
  _swigc__p_Properties,
  _swigc__p_PropertyIndex,
  _swigc__p_PropertyValue,
  _swigc__p_PublicObjectMap,
  _swigc__p_PushCallback,
  _swigc__p_ReferenceType,
  _swigc__p_RootType,
  _swigc__p_Seconds,
  _swigc__p_Seiscomp__Array,
  _swigc__p_Seiscomp__BitSet,
  _swigc__p_Seiscomp__Core__BaseObject,
  _swigc__p_Seiscomp__Core__DataMessage,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EDataUsedWaveType_Seiscomp__DataModel__EDataUsedWaveTypeQuantity_Seiscomp__DataModel__EDataUsedWaveTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationMode_Seiscomp__DataModel__EEvaluationModeQuantity_Seiscomp__DataModel__EEvaluationModeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEvaluationStatus_Seiscomp__DataModel__EEvaluationStatusQuantity_Seiscomp__DataModel__EEvaluationStatusNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventDescriptionType_Seiscomp__DataModel__EEventDescriptionTypeQuantity_Seiscomp__DataModel__EEventDescriptionTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventTypeCertainty_Seiscomp__DataModel__EEventTypeCertaintyQuantity_Seiscomp__DataModel__EEventTypeCertaintyNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EEventType_Seiscomp__DataModel__EEventTypeQuantity_Seiscomp__DataModel__EEventTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EInventoryError_Seiscomp__DataModel__EInventoryErrorQuantity_Seiscomp__DataModel__EInventoryErrorNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorMethod_Seiscomp__DataModel__EMomentTensorMethodQuantity_Seiscomp__DataModel__EMomentTensorMethodNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EMomentTensorStatus_Seiscomp__DataModel__EMomentTensorStatusQuantity_Seiscomp__DataModel__EMomentTensorStatusNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOperation_Seiscomp__DataModel__EOperationQuantity_Seiscomp__DataModel__EOperationNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginDepthType_Seiscomp__DataModel__EOriginDepthTypeQuantity_Seiscomp__DataModel__EOriginDepthTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginType_Seiscomp__DataModel__EOriginTypeQuantity_Seiscomp__DataModel__EOriginTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EOriginUncertaintyDescription_Seiscomp__DataModel__EOriginUncertaintyDescriptionQuantity_Seiscomp__DataModel__EOriginUncertaintyDescriptionNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickOnset_Seiscomp__DataModel__EPickOnsetQuantity_Seiscomp__DataModel__EPickOnsetNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EPickPolarity_Seiscomp__DataModel__EPickPolarityQuantity_Seiscomp__DataModel__EPickPolarityNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__ESourceTimeFunctionType_Seiscomp__DataModel__ESourceTimeFunctionTypeQuantity_Seiscomp__DataModel__ESourceTimeFunctionTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__EStationGroupType_Seiscomp__DataModel__EStationGroupTypeQuantity_Seiscomp__DataModel__EStationGroupTypeNames_t,
  _swigc__p_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t,
  _swigc__p_Seiscomp__Core__GenericMessageT_Seiscomp__Core__BaseObject_t,
  _swigc__p_Seiscomp__Core__GenericMessageT_Seiscomp__DataModel__Notifier_t,
  _swigc__p_Seiscomp__Core__Generic__ArchiveT_Seiscomp__Core__BaseObject_t,
  _swigc__p_Seiscomp__Core__Generic__ClassFactoryInterfaceT_Seiscomp__Core__BaseObject_t,
  _swigc__p_Seiscomp__Core__GreensFunction,
  _swigc__p_Seiscomp__Core__InterruptibleObject,
  _swigc__p_Seiscomp__Core__Message,
  _swigc__p_Seiscomp__Core__MetaObject,
  _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__Core__EnumT_Seiscomp__DataModel__StrongMotion__EFwHwIndicator_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorQuantity_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames_t_t__Impl,
  _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl,
  _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl,
  _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,
  _swigc__p_Seiscomp__Core__OptionalT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl,
  _swigc__p_Seiscomp__Core__RTTI,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Array_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__BitSet_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__BaseObject_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__DataMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__GreensFunction_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__InterruptibleObject_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Core__Message_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Access_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AmplitudeReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Amplitude_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkLog_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestLine_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequestSummary_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkRequest_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkStatusLine_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArclinkUser_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Arrival_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialEventParametersMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ArtificialOriginMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxDevice_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxSource_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__AuxStream_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Axis_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Blob_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Comment_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ComplexArray_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CompositeTime_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfidenceEllipsoid_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigModule_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigStation_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ConfigSyncMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Config_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__CreationInfo_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAttributeExtent_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataAvailability_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataExtent_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataSegment_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataUsed_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseArchive_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseQuery_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DatabaseReader_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__DataloggerCalibration_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Datalogger_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Decimation_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventDescription_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__EventParameters_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Event_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanismReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__FocalMechanism_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__IntegerQuantity_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__InventorySyncMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Inventory_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__JournalEntry_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Journaling_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Magnitude_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorComponentContribution_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorPhaseSetting_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensorStationContribution_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__MomentTensor_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Network_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlane_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NodalPlanes_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__NotifierMessage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Notifier_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Object_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Observer_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginQuality_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__OriginUncertainty_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Origin_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Outage_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ParameterSet_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Parameter_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Phase_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PickReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Pick_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PrincipalAxes_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__PublicObject_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QCLog_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__QualityControl_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Reading_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealArray_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealPDF1D_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RealQuantity_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFAP_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseFIR_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponseIIR_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePAZ_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__ResponsePolynomial_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteArclink_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__RouteSeedlink_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Route_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Routing_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorCalibration_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SensorLocation_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Sensor_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Setup_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__SourceTimeFunction_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationGroup_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitudeContribution_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationMagnitude_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StationReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Station_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Stream_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Contact_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__EventRecordReference_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FileResource_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__FilterParameter_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__LiteratureSource_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__PeakMotion_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__Rupture_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SimpleFilter_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionParameters_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongMotionReader_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__StrongOriginDescription_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__StrongMotion__SurfaceRupture_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Tensor_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeArray_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimePDF1D_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeQuantity_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__TimeWindow_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__Visitor_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformQuality_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__DataModel__WaveformStreamID_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__GenericRecord_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__Category_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Geo__GeoFeature_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Cropper_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__DatabaseInterface_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Exporter_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__GFArchive_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__Importer_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__MSeedRecord_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordFilterInterface_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__IO__RecordInput_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Math__Restitution__FFT__TransferFunction_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_char_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_double_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_float_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__NumericArrayT_int_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__Arclink__ArclinkConnection_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__CombinedConnection_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__File_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream__SLConnection_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__RecordStream_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__Record_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_double_t_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__complexT_float_t_t_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_const_t__Impl,
  _swigc__p_Seiscomp__Core__SmartPointerT_Seiscomp__TypedArrayT_std__string_t_t__Impl,
  _swigc__p_Seiscomp__Core__Time,
  _swigc__p_Seiscomp__DataModel__Access,
  _swigc__p_Seiscomp__DataModel__Amplitude,
  _swigc__p_Seiscomp__DataModel__AmplitudeReference,
  _swigc__p_Seiscomp__DataModel__ArclinkLog,
  _swigc__p_Seiscomp__DataModel__ArclinkRequest,
  _swigc__p_Seiscomp__DataModel__ArclinkRequestLine,
  _swigc__p_Seiscomp__DataModel__ArclinkRequestSummary,
  _swigc__p_Seiscomp__DataModel__ArclinkStatusLine,
  _swigc__p_Seiscomp__DataModel__ArclinkUser,
  _swigc__p_Seiscomp__DataModel__Arrival,
  _swigc__p_Seiscomp__DataModel__ArtificialEventParametersMessage,
  _swigc__p_Seiscomp__DataModel__ArtificialOriginMessage,
  _swigc__p_Seiscomp__DataModel__AuxDevice,
  _swigc__p_Seiscomp__DataModel__AuxSource,
  _swigc__p_Seiscomp__DataModel__AuxStream,
  _swigc__p_Seiscomp__DataModel__Axis,
  _swigc__p_Seiscomp__DataModel__Blob,
  _swigc__p_Seiscomp__DataModel__Comment,
  _swigc__p_Seiscomp__DataModel__ComplexArray,
  _swigc__p_Seiscomp__DataModel__CompositeTime,
  _swigc__p_Seiscomp__DataModel__ConfidenceEllipsoid,
  _swigc__p_Seiscomp__DataModel__Config,
  _swigc__p_Seiscomp__DataModel__ConfigModule,
  _swigc__p_Seiscomp__DataModel__ConfigStation,
  _swigc__p_Seiscomp__DataModel__ConfigSyncMessage,
  _swigc__p_Seiscomp__DataModel__CreationInfo,
  _swigc__p_Seiscomp__DataModel__DataAttributeExtent,
  _swigc__p_Seiscomp__DataModel__DataAvailability,
  _swigc__p_Seiscomp__DataModel__DataExtent,
  _swigc__p_Seiscomp__DataModel__DataSegment,
  _swigc__p_Seiscomp__DataModel__DataUsed,
  _swigc__p_Seiscomp__DataModel__DatabaseArchive,
  _swigc__p_Seiscomp__DataModel__DatabaseIterator,
  _swigc__p_Seiscomp__DataModel__DatabaseObjectWriter,
  _swigc__p_Seiscomp__DataModel__DatabaseQuery,
  _swigc__p_Seiscomp__DataModel__DatabaseReader,
  _swigc__p_Seiscomp__DataModel__Datalogger,
  _swigc__p_Seiscomp__DataModel__DataloggerCalibration,
  _swigc__p_Seiscomp__DataModel__Decimation,
  _swigc__p_Seiscomp__DataModel__Event,
  _swigc__p_Seiscomp__DataModel__EventDescription,
  _swigc__p_Seiscomp__DataModel__EventParameters,
  _swigc__p_Seiscomp__DataModel__FocalMechanism,
  _swigc__p_Seiscomp__DataModel__FocalMechanismReference,
  _swigc__p_Seiscomp__DataModel__IntegerQuantity,
  _swigc__p_Seiscomp__DataModel__Inventory,
  _swigc__p_Seiscomp__DataModel__InventorySyncMessage,
  _swigc__p_Seiscomp__DataModel__JournalEntry,
  _swigc__p_Seiscomp__DataModel__Journaling,
  _swigc__p_Seiscomp__DataModel__Magnitude,
  _swigc__p_Seiscomp__DataModel__MomentTensor,
  _swigc__p_Seiscomp__DataModel__MomentTensorComponentContribution,
  _swigc__p_Seiscomp__DataModel__MomentTensorPhaseSetting,
  _swigc__p_Seiscomp__DataModel__MomentTensorStationContribution,
  _swigc__p_Seiscomp__DataModel__Network,
  _swigc__p_Seiscomp__DataModel__NodalPlane,
  _swigc__p_Seiscomp__DataModel__NodalPlanes,
  _swigc__p_Seiscomp__DataModel__Notifier,
  _swigc__p_Seiscomp__DataModel__NotifierCreator,
  _swigc__p_Seiscomp__DataModel__NotifierMessage,
  _swigc__p_Seiscomp__DataModel__Object,
  _swigc__p_Seiscomp__DataModel__Observer,
  _swigc__p_Seiscomp__DataModel__Origin,
  _swigc__p_Seiscomp__DataModel__OriginQuality,
  _swigc__p_Seiscomp__DataModel__OriginReference,
  _swigc__p_Seiscomp__DataModel__OriginUncertainty,
  _swigc__p_Seiscomp__DataModel__Outage,
  _swigc__p_Seiscomp__DataModel__Parameter,
  _swigc__p_Seiscomp__DataModel__ParameterSet,
  _swigc__p_Seiscomp__DataModel__Phase,
  _swigc__p_Seiscomp__DataModel__Pick,
  _swigc__p_Seiscomp__DataModel__PickReference,
  _swigc__p_Seiscomp__DataModel__PrincipalAxes,
  _swigc__p_Seiscomp__DataModel__PublicObject,
  _swigc__p_Seiscomp__DataModel__PublicObjectCache,
  _swigc__p_Seiscomp__DataModel__PublicObjectRingBuffer,
  _swigc__p_Seiscomp__DataModel__PublicObjectTimeSpanBuffer,
  _swigc__p_Seiscomp__DataModel__QCLog,
  _swigc__p_Seiscomp__DataModel__QualityControl,
  _swigc__p_Seiscomp__DataModel__Reading,
  _swigc__p_Seiscomp__DataModel__RealArray,
  _swigc__p_Seiscomp__DataModel__RealPDF1D,
  _swigc__p_Seiscomp__DataModel__RealQuantity,
  _swigc__p_Seiscomp__DataModel__ResponseFAP,
  _swigc__p_Seiscomp__DataModel__ResponseFIR,
  _swigc__p_Seiscomp__DataModel__ResponseIIR,
  _swigc__p_Seiscomp__DataModel__ResponsePAZ,
  _swigc__p_Seiscomp__DataModel__ResponsePolynomial,
  _swigc__p_Seiscomp__DataModel__Route,
  _swigc__p_Seiscomp__DataModel__RouteArclink,
  _swigc__p_Seiscomp__DataModel__RouteSeedlink,
  _swigc__p_Seiscomp__DataModel__Routing,
  _swigc__p_Seiscomp__DataModel__Sensor,
  _swigc__p_Seiscomp__DataModel__SensorCalibration,
  _swigc__p_Seiscomp__DataModel__SensorLocation,
  _swigc__p_Seiscomp__DataModel__Setup,
  _swigc__p_Seiscomp__DataModel__SourceTimeFunction,
  _swigc__p_Seiscomp__DataModel__Station,
  _swigc__p_Seiscomp__DataModel__StationGroup,
  _swigc__p_Seiscomp__DataModel__StationMagnitude,
  _swigc__p_Seiscomp__DataModel__StationMagnitudeContribution,
  _swigc__p_Seiscomp__DataModel__StationReference,
  _swigc__p_Seiscomp__DataModel__Stream,
  _swigc__p_Seiscomp__DataModel__StrongMotion__Contact,
  _swigc__p_Seiscomp__DataModel__StrongMotion__EFwHwIndicatorNames,
  _swigc__p_Seiscomp__DataModel__StrongMotion__EventRecordReference,
  _swigc__p_Seiscomp__DataModel__StrongMotion__FileResource,
  _swigc__p_Seiscomp__DataModel__StrongMotion__FilterParameter,
  _swigc__p_Seiscomp__DataModel__StrongMotion__LiteratureSource,
  _swigc__p_Seiscomp__DataModel__StrongMotion__PeakMotion,
  _swigc__p_Seiscomp__DataModel__StrongMotion__Record,
  _swigc__p_Seiscomp__DataModel__StrongMotion__Rupture,
  _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilter,
  _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMember,
  _swigc__p_Seiscomp__DataModel__StrongMotion__SimpleFilterChainMemberIndex,
  _swigc__p_Seiscomp__DataModel__StrongMotion__StrongMotionParameters,
  _swigc__p_Seiscomp__DataModel__StrongMotion__StrongMotionReader,
  _swigc__p_Seiscomp__DataModel__StrongMotion__StrongOriginDescription,
  _swigc__p_Seiscomp__DataModel__StrongMotion__SurfaceRupture,
  _swigc__p_Seiscomp__DataModel__Tensor,
  _swigc__p_Seiscomp__DataModel__TimeArray,
  _swigc__p_Seiscomp__DataModel__TimePDF1D,
  _swigc__p_Seiscomp__DataModel__TimeQuantity,
  _swigc__p_Seiscomp__DataModel__TimeWindow,
  _swigc__p_Seiscomp__DataModel__Visitor,
  _swigc__p_Seiscomp__DataModel__WaveformQuality,
  _swigc__p_Seiscomp__DataModel__WaveformStreamID,
  _swigc__p_Seiscomp__GenericRecord,
  _swigc__p_Seiscomp__Geo__GeoCoordinate,
  _swigc__p_Seiscomp__Geo__GeoFeature,
  _swigc__p_Seiscomp__Geo__GeoFeatureSet,
  _swigc__p_Seiscomp__IO__BinaryArchive,
  _swigc__p_Seiscomp__IO__Cropper,
  _swigc__p_Seiscomp__IO__DatabaseInterface,
  _swigc__p_Seiscomp__IO__Exporter,
  _swigc__p_Seiscomp__IO__GFArchive,
  _swigc__p_Seiscomp__IO__GFReceiver,
  _swigc__p_Seiscomp__IO__GFSource,
  _swigc__p_Seiscomp__IO__Importer,
  _swigc__p_Seiscomp__IO__MSeedRecord,
  _swigc__p_Seiscomp__IO__PipeFilter,
  _swigc__p_Seiscomp__IO__RecordDemuxFilter,
  _swigc__p_Seiscomp__IO__RecordFilterInterface,
  _swigc__p_Seiscomp__IO__RecordIIRFilterT_double_t,
  _swigc__p_Seiscomp__IO__RecordIIRFilterT_float_t,
  _swigc__p_Seiscomp__IO__RecordInput,
  _swigc__p_Seiscomp__IO__RecordResamplerBase,
  _swigc__p_Seiscomp__IO__RecordResamplerT_double_t,
  _swigc__p_Seiscomp__IO__RecordResamplerT_float_t,
  _swigc__p_Seiscomp__IO__RecordResamplerT_int_t,
  _swigc__p_Seiscomp__IO__RecordStream,
  _swigc__p_Seiscomp__IO__VBinaryArchive,
  _swigc__p_Seiscomp__IO__XMLArchive,
  _swigc__p_Seiscomp__Math__Filtering__AverageT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__AverageT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__ChainFilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__ChainFilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__BiquadCascadeT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandpassT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthBandstopT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighLowpassT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthHighpassT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__ButterworthLowpassT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__FilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__FilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__GenericSeismometerT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_LP_FilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WWSSN_SP_FilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__IIR__WoodAndersonFilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__InPlaceFilterT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__InPlaceFilterT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__InitialTaperT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__InitialTaperT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__RunningMeanHighPassT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__RunningMeanT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__RunningMeanT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTA2T_double_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTA2T_float_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTAT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTAT_float_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTA_ClassicT_double_t,
  _swigc__p_Seiscomp__Math__Filtering__STALTA_ClassicT_float_t,
  _swigc__p_Seiscomp__Math__Geo__CityT_double_t,
  _swigc__p_Seiscomp__Math__Geo__CityT_float_t,
  _swigc__p_Seiscomp__Math__Geo__CoordT_double_t,
  _swigc__p_Seiscomp__Math__Geo__CoordT_float_t,
  _swigc__p_Seiscomp__Math__Geo__NamedCoordT_double_t,
  _swigc__p_Seiscomp__Math__Geo__NamedCoordT_float_t,
  _swigc__p_Seiscomp__Math__Restitution__FFT__PolesAndZeros,
  _swigc__p_Seiscomp__Math__Restitution__FFT__ResponseList,
  _swigc__p_Seiscomp__Math__Restitution__FFT__TransferFunction,
  _swigc__p_Seiscomp__NumericArrayT_char_t,
  _swigc__p_Seiscomp__NumericArrayT_double_t,
  _swigc__p_Seiscomp__NumericArrayT_float_t,
  _swigc__p_Seiscomp__NumericArrayT_int_t,
  _swigc__p_Seiscomp__Record,
  _swigc__p_Seiscomp__RecordStream__Arclink__ArclinkConnection,
  _swigc__p_Seiscomp__RecordStream__CombinedConnection,
  _swigc__p_Seiscomp__RecordStream__File,
  _swigc__p_Seiscomp__RecordStream__SLConnection,
  _swigc__p_Seiscomp__TypedArrayT_Seiscomp__Core__Time_t,
  _swigc__p_Seiscomp__TypedArrayT_char_t,
  _swigc__p_Seiscomp__TypedArrayT_double_t,
  _swigc__p_Seiscomp__TypedArrayT_float_t,
  _swigc__p_Seiscomp__TypedArrayT_int_t,
  _swigc__p_Seiscomp__TypedArrayT_std__complexT_double_t_t,
  _swigc__p_Seiscomp__TypedArrayT_std__complexT_float_t_t,
  _swigc__p_Seiscomp__TypedArrayT_std__string_t,
  _swigc__p_Storage,
  _swigc__p_TimePoint,
  _swigc__p_Type,
  _swigc__p_ValueType,
  _swigc__p_Weeks,
  _swigc__p_allocator_type,
  _swigc__p_boost__any,
  _swigc__p_char,
  _swigc__p_char_type,
  _swigc__p_const_iterator,
  _swigc__p_difference_type,
  _swigc__p_fmtflags,
  _swigc__p_int,
  _swigc__p_int_type,
  _swigc__p_iostate,
  _swigc__p_iterator,
  _swigc__p_iterator_category,
  _swigc__p_long,
  _swigc__p_long_long,
  _swigc__p_off_type,
  _swigc__p_openmode,
  _swigc__p_pos_type,
  _swigc__p_seekdir,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_t,
  _swigc__p_size_type,
  _swigc__p_state_type,
  _swigc__p_std__basic_iosT_char_t,
  _swigc__p_std__complexT_double_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__shared_ptrT_Seiscomp__Core__MetaObject_t,
  _swigc__p_std__shared_ptrT_Seiscomp__Core__MetaProperty_t,
  _swigc__p_std__vectorT_Seiscomp__Core__BaseObject_p_t,
  _swigc__p_std__vectorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_std__allocatorT_Seiscomp__Math__Filtering__IIR__BiquadCoefficients_t_t,
  _swigc__p_std__vectorT_Seiscomp__Math__SeismometerResponse__FAP_std__allocatorT_Seiscomp__Math__SeismometerResponse__FAP_t_t,
  _swigc__p_std__vectorT_std__complexT_double_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_traits_type,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        SWIG_Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------
   * Patch %callback methods' docstrings to hold the callback ptrs
   * -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods, const swig_const_info *const_table, swig_type_info **types, swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        const swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif




/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  SWIG_Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "footwall",SWIG_From_int(static_cast< int >(Seiscomp::DataModel::StrongMotion::footwall)));
  SWIG_Python_SetConstant(d, "hangingwall",SWIG_From_int(static_cast< int >(Seiscomp::DataModel::StrongMotion::hangingwall)));
  SWIG_Python_SetConstant(d, "EFwHwIndicatorQuantity",SWIG_From_int(static_cast< int >(Seiscomp::DataModel::StrongMotion::EFwHwIndicatorQuantity)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

